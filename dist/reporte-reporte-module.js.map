{"version":3,"sources":["webpack:///./src/app/layout/reporte/app-routing.module.ts","webpack:///./src/app/layout/reporte/reporte.component.html","webpack:///./src/app/layout/reporte/reporte.component.scss","webpack:///./src/app/layout/reporte/reporte.component.ts","webpack:///./src/app/layout/reporte/reporte.module.ts"],"names":[],"mappings":"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","file":"reporte-reporte-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReporteComponent } from './reporte.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReporteComponent\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Reportes'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n      <div class=\\\"card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">Filtros de búsqueda</div>\\r\\n        <div class=\\\"card-body \\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <table class=\\\"table table-sm table-bordered\\\">\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <div class=\\\"radio\\\">\\r\\n                      <label><input type=\\\"radio\\\" [(ngModel)]=\\\"filtro\\\" value=\\\"1\\\">Por Orden de Tabajo</label>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"ordenSeleccionada\\\" *ngIf=\\\"filtro=='1'\\\">\\r\\n                      <option disabled value=\\\"\\\">Seleccionar...</option>\\r\\n                      <option *ngFor=\\\"let orden of ordenes | async\\\" value=\\\"{{orden.id}}\\\">OT-{{orden.data.numero | anadirCeros:5}}</option>\\r\\n                    </select>\\r\\n\\r\\n\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <div class=\\\"radio\\\">\\r\\n\\r\\n                      <label><input type=\\\"radio\\\" [(ngModel)]=\\\"filtro\\\" value=\\\"2\\\">Por Operador</label>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <select class=\\\"form-control\\\" *ngIf=\\\"filtro=='2'\\\">\\r\\n                      <option>Seleccionar...</option>\\r\\n                      <option *ngFor=\\\"let operador of operadores | async\\\">{{operador.data.nombre}}</option>\\r\\n                    </select>\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <div class=\\\"radio\\\">\\r\\n                      <label><input type=\\\"radio\\\" [(ngModel)]=\\\"filtro\\\" value=\\\"3\\\">Por Servicio</label>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <select class=\\\"form-control\\\" *ngIf=\\\"filtro=='3'\\\">\\r\\n                      <option>Seleccionar...</option>\\r\\n                      <option *ngFor=\\\"let servicio of servicios | async\\\">{{servicio.data.descripcion}}</option>\\r\\n                    </select>\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <td>Desde:</td>\\r\\n                  <td>\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                      <input [disabled]=\\\"filtro=='1'\\\" type=\\\"date\\\" [(ngModel)]=\\\"filtroTiempo.inicio\\\" class=\\\"form-control\\\">                      <input\\r\\n                        type=\\\"time\\\" [disabled]=\\\"filtro=='1'\\\" [(ngModel)]=\\\"filtroTiempo.iniciohora\\\" class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <td>Hasta:</td>\\r\\n                  <td>\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                      <input [disabled]=\\\"filtro=='1'\\\" type=\\\"date\\\" [(ngModel)]=\\\"filtroTiempo.fin\\\" class=\\\"form-control\\\"> <input\\r\\n                        [disabled]=\\\"filtro=='1'\\\" type=\\\"time\\\" [(ngModel)]=\\\"filtroTiempo.finhora\\\" class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td></td>\\r\\n                  <td>\\r\\n                    <button (click)=\\\"buscar()\\\" class=\\\"btn btn-primary\\\">Buscar</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\"></div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"filtro=='1' && orden\\\" class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">Resumen</div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <table class=\\\"table table-sm table-bordered\\\">\\r\\n            <tr>\\r\\n              <th>Número </th>\\r\\n              <td *ngIf=\\\"orden\\\">OT-{{(orden)?.numero | anadirCeros:5}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Fecha OT </th>\\r\\n              <td>{{ (orden.fecha)?.seconds*1000 | date : 'dd/MM/yyyy HH:mm' }}</td>\\r\\n            </tr>\\r\\n\\r\\n            <tr>\\r\\n              <th>ID Cliente</th>\\r\\n              <td>{{ (orden.cliente)?.cedula }}</td>\\r\\n            </tr>\\r\\n\\r\\n            <tr>\\r\\n              <th>Nombre Cliente</th>\\r\\n              <td>{{ (orden.cliente)?.nombre }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>ID/Placa</th>\\r\\n              <td>{{ (orden.vehiculo)?.placa }}\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <table class=\\\"table table-sm table-bordered\\\">\\r\\n            <tr>\\r\\n              <th>Operaciones finalizadas </th>\\r\\n              <td *ngIf=\\\"orden\\\">{{(orden.estadisticas)?.finalizadas}} de {{(orden.servicios)?.length}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Total Tiempo Estándar </th>\\r\\n              <td *ngIf=\\\"orden\\\">{{(orden.estadisticas)?.tiempoEstandar | formatTime}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Total Tiempo Real </th>\\r\\n              <td>{{(orden.estadisticas)?.tiempoReal | formatTime}}</td>\\r\\n            </tr>\\r\\n\\r\\n            <tr>\\r\\n              <th>Eficiencia</th>\\r\\n              <td>{{ (orden.estadisticas)?.eficiencia }}%</td>\\r\\n            </tr>\\r\\n\\r\\n           \\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <table class=\\\"table table-sm  table-responsive-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n\\r\\n                <th>Cantidad</th>\\r\\n                <th>Código</th>\\r\\n                <th>Servicio</th>\\r\\n                <th>Tiempo estándar</th>\\r\\n                <th>Estado</th>\\r\\n                <th>Operador asignado</th>\\r\\n                <th>Lead Time</th>\\r\\n                <th>Tiempo Real</th>\\r\\n                <th>Eficiencia</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let servicio of (orden)?.servicios; let index = index\\\">\\r\\n\\r\\n                <td>{{servicio.cantidad}}</td>\\r\\n                <td>{{servicio.codigo}}</td>\\r\\n                <td>{{servicio.descripcion}}</td>\\r\\n                <td>{{servicio.tiempoEstandar*servicio.cantidad*60 | formatTime}}</td>\\r\\n                <td>{{servicio.estado}}</td>\\r\\n                <td *ngIf=\\\"servicio.operador\\\">{{servicio.operador.data.nombre}}</td>\\r\\n                <td>\\r\\n                  <p *ngIf=\\\"servicio.estadisticas\\\">\\r\\n                    {{servicio.estadisticas.leadTime | formatTime}}\\r\\n                  </p>\\r\\n\\r\\n                  <p *ngIf=\\\"!servicio.estadisticas\\\">\\r\\n                    --\\r\\n                  </p>\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <p *ngIf=\\\"servicio.estadisticas\\\">\\r\\n                    {{servicio.estadisticas.tiempoReal | formatTime}}\\r\\n                  </p>\\r\\n\\r\\n                  <p *ngIf=\\\"!servicio.estadisticas\\\">\\r\\n                    --\\r\\n                  </p>\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <p *ngIf=\\\"servicio.estadisticas\\\">\\r\\n                    {{servicio.estadisticas.eficiencia}}%\\r\\n                  </p>\\r\\n\\r\\n                  <p *ngIf=\\\"!servicio.estadisticas\\\">\\r\\n                    --\\r\\n                  </p>\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { OrdenService } from '../../servicios/orden/orden.service';\r\nimport * as moment from 'moment';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\nimport { PersonaService } from '../../servicios/persona.service';\r\nimport { ServicioService } from '../../servicios/servicio/servicio.service';\r\nimport swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-reporte',\r\n  templateUrl: './reporte.component.html',\r\n  styleUrls: ['./reporte.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class ReporteComponent implements OnInit {\r\n\r\n  filtro: String = \"1\"\r\n  fechaInicio: Date = new Date\r\n  ordenes: Observable<any>\r\n  ordenSeleccionada: any = \"\"\r\n  tareas: any[] = []\r\n\r\n  orden: any[] = []\r\n\r\n\r\n  operadores: Observable<any>\r\n  servicios: Observable<any>\r\n  filtroTiempo: any = { inicio: this.convertir(Date.now()), iniciohora: '00:00', fin: this.convertir(Date.now()), finhora: '23:59' }\r\n  operaciones: Observable<any>\r\n\r\n\r\n  constructor(private ordenService: OrdenService, private personaService: PersonaService, private servicioService: ServicioService) {\r\n    this.ordenes = ordenService.obtenerOrdenes();\r\n    this.operadores = personaService.obtenerUsuarios()\r\n    this.servicios = servicioService.obtenerServicios()\r\n\r\n  }\r\n\r\n  convertir(fecha) {\r\n    var local = new Date(fecha);\r\n    local.setMinutes(local.getMinutes() - local.getTimezoneOffset());\r\n    return local.toJSON().slice(0, 10);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  obtenerOrdenes() {\r\n\r\n  }\r\n\r\n  buscar() {\r\n    switch (this.filtro) {\r\n      case \"1\":\r\n        this.buscarPorOrden()\r\n        break;\r\n      case \"2\":\r\n        this.buscarPorOperador()\r\n        break;\r\n      case \"3\":\r\n        this.buscarPorServicio()\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  buscarPorOrden() {\r\n\r\n    if (this.ordenSeleccionada != '') {\r\n      this.buscarTareasPorOrden(this.ordenSeleccionada)\r\n\r\n    } else {\r\n\r\n      swal('Existió un error', 'Seleccione una Orden de Trabajo para continuar', 'error')\r\n    }\r\n\r\n  }\r\n\r\n  buscarPorOperador() {\r\n    console.log('operador')\r\n  }\r\n\r\n  buscarPorServicio() {\r\n    console.log('servicio')\r\n  }\r\n\r\n\r\n\r\n  buscarTareasPorOrden(idOrden) {\r\n    this.ordenService.obtenerUnaOrden(idOrden)\r\n      .subscribe((res: any) => {\r\n       \r\n\r\n        var totalTiempoEstandar = 0;\r\n        var totalTiempoReal = 0;\r\n        var finalizadas = 0;\r\n\r\n\r\n        res.servicios.forEach(servicio => {\r\n\r\n          if(servicio.estado=='POR FACTURAR'){\r\n            finalizadas++\r\n            totalTiempoReal += servicio.estadisticas.tiempoReal;\r\n          }\r\n         totalTiempoEstandar+= servicio.cantidad*servicio.tiempoEstandar*60;\r\n        });\r\n\r\n        var eficiencia  =  0 \r\n        if(totalTiempoReal!=0){\r\n         eficiencia =  totalTiempoEstandar/totalTiempoReal*100\r\n        }else{\r\n          eficiencia = 100\r\n        }\r\n        res.estadisticas= {tiempoEstandar : totalTiempoEstandar, tiempoReal: totalTiempoReal, finalizadas: finalizadas, eficiencia: eficiencia.toFixed(2)}\r\n        this.orden = res\r\n     \r\n\r\n      })\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { ReporteComponent } from './reporte.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AnadirCerosPipe } from '../../pipes/anadir-ceros.pipe';\r\nimport { OrdenTrabajoModule } from '../orden-trabajo/orden-trabajo.module';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    PageHeaderModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    OrdenTrabajoModule,\r\n    NgSelectModule\r\n  ],\r\n  declarations: [ReporteComponent]\r\n})\r\nexport class ReporteModule { }\r\n"],"sourceRoot":""}