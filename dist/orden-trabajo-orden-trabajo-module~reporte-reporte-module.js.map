{"version":3,"sources":["webpack:///./src/app/layout/orden-trabajo/app-routing.module.ts","webpack:///./src/app/layout/orden-trabajo/configuracion/configuracion.component.html","webpack:///./src/app/layout/orden-trabajo/configuracion/configuracion.component.scss","webpack:///./src/app/layout/orden-trabajo/configuracion/configuracion.component.ts","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.html","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.html","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/detalle-tarea/detalle-tarea.component.html","webpack:///./src/app/layout/orden-trabajo/detalle-tarea/detalle-tarea.component.scss","webpack:///./src/app/layout/orden-trabajo/detalle-tarea/detalle-tarea.component.ts","webpack:///./src/app/layout/orden-trabajo/detalleOrden/detalle-orden/detalle-orden.component.html","webpack:///./src/app/layout/orden-trabajo/detalleOrden/detalle-orden/detalle-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/detalleOrden/detalle-orden/detalle-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.html","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/mis-ordenes/mis-ordenes.component.html","webpack:///./src/app/layout/orden-trabajo/mis-ordenes/mis-ordenes.component.scss","webpack:///./src/app/layout/orden-trabajo/mis-ordenes/mis-ordenes.component.ts","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.html","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.scss","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.ts","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.component.html","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.component.scss","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.component.ts","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.module.ts","webpack:///./src/app/servicios/orden/orden.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AAEc;AACmB;AACY;AACM;AACvB;AACK;AACmB;AACZ;AAEjF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,sFAAmB;KAC/B;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,kGAAuB;KACnC;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,wGAAyB;KACrC;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,yGAAqB;KACjC;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,iFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,sFAAmB;KAC/B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,6FAAsB;KAClC;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9C7B,+nBAA+nB,OAAO,OAAO,yHAAyH,2T;;;;;;;;;;;ACAtwB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACY;AACQ;AACF;AACtC;AAQ9B;IAIE,gCAAoB,YAA0B,EAAU,cAA8B;QAAlE,iBAAY,GAAZ,YAAY,CAAc;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAFtF,kBAAa,GAAW,CAAC,CAAC;IAEgE,CAAC;IAE3F,yCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,iBAAO;YACnE,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC,QAAQ;QACvC,CAAC,CAAC;IACJ,CAAC;IAED,kDAAiB,GAAjB;QAAA,iBAkCC;QAjCC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC;YAC/B,kDAAI,CAAC,kBAAkB,EAAE,wCAAwC,EAAE,OAAO,CAAC;QAC7E,CAAC;QAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,aAAa,IAAE,CAAC,CAAC,EAAC;YAC/B,kDAAI,CAAC,kBAAkB,EAAE,8CAA8C,EAAE,OAAO,CAAC;QACnF,CAAC;QAAA,IAAI,CAAC,EAAE,EAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAC;YAC9C,kDAAI,CAAC,kBAAkB,EAAE,wCAAwC,EAAE,OAAO,CAAC;QAE7E,CAAC;QAAA,IAAI,EAAC;YACJ,kDAAI,CAAC;gBACH,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,8DAA8D;gBACpE,IAAI,EAAE,UAAU;gBAChB,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,SAAS;gBAC7B,iBAAiB,EAAE,MAAM;gBACzB,iBAAiB,EAAE,gBAAgB;gBACnC,gBAAgB,EAAE,UAAU;aAC7B,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBAEjB,KAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,aAAG;wBACtE,kDAAI,CACF,QAAQ,EACR,0CAA0C,EAC1C,SAAS,CACV;oBACH,CAAC,EAAE,eAAK;oBAER,CAAC,CAAC;gBAEJ,CAAC;YACH,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IA9CU,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;YAG7B,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;SACjC,CAAC;yCAKkC,2EAAY,EAA0B,yEAAc;OAJ3E,sBAAsB,CAgDlC;IAAD,6BAAC;CAAA;AAhDkC;;;;;;;;;;;;ACZnC,yrCAAyrC,UAAU,uUAAuU,UAAU,kXAAkX,UAAU,qOAAqO,UAAU,QAAQ,mCAAmC,mCAAmC,uDAAuD,+BAA+B,kDAAkD,+BAA+B,2BAA2B,+BAA+B,2BAA2B,yDAAyD,2BAA2B,sQ;;;;;;;;;;;ACA7hF,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACC;AAEQ;AACd;AACzB;AACD;AACsB;AAEwB;AACR;AAEpE,IAAI,KAAK,GAAG,mBAAO,CAAC,qDAAO,CAAC;AAC5B,mBAAO,CAAC,sFAAiB,CAAC;AAU1B;IAqCE,iCAAoB,cAA8B,EAAU,YAA0B,EAAU,KAAsB,EAAU,cAA8B;QAA1I,mBAAc,GAAd,cAAc,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,UAAK,GAAL,KAAK,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAlC9J,SAAI,GAAQ,EAAE;QACd,cAAS,GAAwB,IAAI,CAAC,SAAS,GAAG;YAChD,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE;gBACR,UAAU,EAAE,eAAe;gBAC3B,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,0BAA0B;gBACtC,IAAI,EAAE,uDAAuD;gBAC7D,SAAS,EAAE,4BAA4B;gBACvC,YAAY,EAAE,kCAAkC;gBAChD,WAAW,EAAE,EAAE;gBACf,cAAc,EAAE,uBAAuB;gBACvC,WAAW,EAAE,6BAA6B;gBAC1C,UAAU,EAAE,sCAAsC;gBAClD,QAAQ,EAAE;oBACR,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,UAAU;oBACpB,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE,QAAQ;iBACf;gBACD,IAAI,EAAE;oBACJ,aAAa,EAAE,qDAAqD;oBACpE,cAAc,EAAE,sDAAsD;iBACvE;aACF;SAEF,CAAC;QACF,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;QAExC,YAAO,GAAU,EAAE,CAAC;IAKpB,CAAC;IARC,CAAC;IAUH,0CAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,cAAc,EAAE;QAErB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YAChD,KAAI,CAAC,IAAI,GAAG,GAAG;QACjB,CAAC,CAAC;IACJ,CAAC;IAED,uCAAK,GAAL,UAAM,KAAK;QACT,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC;IAC3C,CAAC;IAED,iDAAe,GAAf;QACE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,oBAAoB,CAAC;IAEtE,CAAC;IAED,gDAAc,GAAd;QAAA,iBAyBC;QAvBC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;aAC/B,SAAS,CAAC,aAAG;YACZ,CAAC,CAAC,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC;YAI9C,KAAI,CAAC,OAAO,GAAG,GAAG;YAClB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAK;gBACxB,KAAK,CAAC,SAAS,IAAI,KAAK;gBAExB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ;oBAGnC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,IAAI,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACrD,KAAK,CAAC,SAAS,GAAG,IAAI;oBACxB,CAAC;gBACH,CAAC,CAAC,CAAC;YAGL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC;IAEN,CAAC;IAED,+CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QACzC,IAAI,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/B,IAAI,sBAAsB,GAAG;YAC3B,WAAW,EAAE,UAAU,OAAO,EAAE,QAAQ;gBACtC,MAAM,CAAC,IAAI;YACb,CAAC;SACF,CAAC;QACF,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE,EAAE;YACP,MAAM,EAAE,EAAE;YACV,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,GAAG;SACX,CAAC;QAEF,GAAG,CAAC,QAAQ,CACV,MAAM,EACN,OAAO,CAAC,IAAI,EAAE,UAAU;QACxB,OAAO,CAAC,GAAG,EAAE;YACX,OAAO,EAAE,OAAO,CAAC,KAAK;YACtB,iBAAiB,EAAE,sBAAsB;SAC1C,EAED,UAAU,OAAO;YACf,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzB,CAAC,EAAE,OAAO,CACX,CAAC;IAEJ,CAAC;IAED,+CAAa,GAAb,UAAc,KAAK;QAAnB,iBA4BC;QA3BC,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,sDAAsD;YAC5D,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,UAAU;YAC5B,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;SACnC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEjB,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;oBAEhD,kDAAI,CACF,QAAQ,EACR,2CAA2C,EAC3C,SAAS,CACV;gBACH,CAAC,CAAC;YAGJ,CAAC;QACH,CAAC,CAAC;IAIJ,CAAC;IA9ID;QADC,+DAAS,CAAC,qEAAkB,CAAC;kCACnB,qEAAkB;8DAAC;IAFnB,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;YAG/B,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;SACjC,CAAC;yCAsCoC,yEAAc,EAAwB,2EAAY,EAAiB,iEAAe,EAA0B,iFAAc;OArCnJ,uBAAuB,CAkJnC;IAAD,8BAAC;CAAA;AAlJmC;;;;;;;;;;;;ACvBpC,oPAAoP,6BAA6B,4tBAA4tB,+jBAA+jB,sCAAsC,kJAAkJ,sCAAsC,2HAA2H,wCAAwC,0HAA0H,wCAAwC,wHAAwH,sCAAsC,2uBAA2uB,kkBAAkkB,sCAAsC,qKAAqK,sCAAsC,sKAAsK,uCAAuC,qKAAqK,sCAAsC,yKAAyK,4CAA4C,klBAAklB,MAAM,0LAA0L,+hBAA+hB,+BAA+B,2vBAA2vB,m+BAAm+B,qBAAqB,oXAAoX,sBAAsB,uDAAuD,2BAA2B,2DAA2D,8CAA8C,uDAAuD,sBAAsB,ktBAAktB,8XAA8X,4cAA4c,0S;;;;;;;;;;;ACAzmT,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyE;AACX;AACM;AACzB;AACE;AACD;AACU;AACyB;AACA;AACT;AACb;AAC3B;AAC0B;AAQxD;IAiEE,6BACU,cAA8B,EAC9B,EAAe,EACf,YAAsB,EACvB,MAAc,EACb,eAAgC,EAChC,eAAgC,EAChC,YAA0B,EAC1B,KAAqB;QAR/B,iBA2DC;QA1DS,mBAAc,GAAd,cAAc,CAAgB;QAC9B,OAAE,GAAF,EAAE,CAAa;QACf,iBAAY,GAAZ,YAAY,CAAU;QACvB,WAAM,GAAN,MAAM,CAAQ;QACb,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QArE/B,cAAS,GAAwB,IAAI,CAAC,SAAS,GAAG;YAChD,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE;gBACR,UAAU,EAAE,eAAe;gBAC3B,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,0BAA0B;gBACtC,IAAI,EAAE,uDAAuD;gBAC7D,SAAS,EAAE,4BAA4B;gBACvC,YAAY,EAAE,kCAAkC;gBAChD,WAAW,EAAE,EAAE;gBACf,cAAc,EAAE,uBAAuB;gBACvC,WAAW,EAAE,6BAA6B;gBAC1C,UAAU,EAAE,sCAAsC;gBAClD,QAAQ,EAAE;oBACR,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,UAAU;oBACpB,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE,QAAQ;iBACf;gBACD,IAAI,EAAE;oBACJ,aAAa,EAAE,qDAAqD;oBACpE,cAAc,EAAE,sDAAsD;iBACvE;aACF;SAEF,CAAC;QACF,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;QAGxC,aAAQ,GAAQ,EAAE,CAAC;QAMnB,cAAS,GAAU,EAAE,CAAC;QAEtB,gBAAW,GAAW,CAAC,CAAC;QAExB,gBAAW,GAAW,EAAE;QAQxB,gBAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC;QAEF,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC;QAEF,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC;QAaA,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,sBAAsB,GAAG,EAAE;QAEhC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC;YAEvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG;gBACtB,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;oBACpB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW;gBACpC,CAAC;gBACD,KAAI,CAAC,mBAAmB,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC;gBACjD,KAAI,CAAC,oBAAoB,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,QAAQ,EAAE;gBAElD,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,SAAS;gBACjC,KAAI,CAAC,sBAAsB,GAAG,EAAE;gBAChC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;oBAE/B,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;oBACnD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM;gBAC/B,CAAC,CAAC,CAAC;YAEL,CAAC,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;YAE1D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAG;gBAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACX,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;gBACtC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBAEN,KAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG;wBAC/D,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,QAAQ;oBACjC,CAAC,CAAC;gBAGJ,CAAC;YAEH,CAAC,CAAC;QAEJ,CAAC;QAKD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE;IAIjE,CAAC;IA7FC,CAAC;IAkGH,sCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE;QACtB,IAAI,CAAC,gBAAgB,EAAE;IACzB,CAAC;IAED,6CAAe,GAAf;QAAA,iBASC;QARC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACtD,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBACtB,OAAO,CAAC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM;YAC/E,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,QAAQ,GAAG,QAAQ;QAE1B,CAAC,CAAC;IACJ,CAAC;IAED,8CAAgB,GAAhB;QAAA,iBAQC;QAPC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YACnD,KAAI,CAAC,SAAS,GAAG,GAAG;YACpB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ;gBAC7B,QAAQ,CAAC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAC,QAAQ,CAAC,IAAI,CAAC,WAAW;YAEvF,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,gDAAkB,GAAlB;QAEE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO;QACzD,sCAAsC;QACtC,wCAAwC;QACxC,KAAK;QACL,qFAAqF;IACvF,CAAC;IAED,iDAAmB,GAAnB;QAEE,CAAC,CAAC,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAgB;YAC/D,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC;YAClD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpE,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,iDAAmB,GAAnB,UAAoB,MAAc,EAAE,MAAM;QAExC,CAAC,CAAC,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC;QAE9C,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,KAAK,GAAG;gBAEN,IAAI,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC;gBAChD,IAAI,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC;gBAEpD,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,GAAG,MAAM;gBAC5C,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM;gBAEhD,KAAK,CAAC;YAER,KAAK,GAAG;gBAEN,IAAI,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC;gBAChD,IAAI,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC;gBAEnD,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,GAAG,KAAK;gBAC3C,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM;gBAEhD,KAAK,CAAC;YAER;gBACE,KAAK,CAAC;QACV,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;IACvB,CAAC;IAED,0CAAY,GAAZ;QAAA,iBA0JC;QAxJC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9B,mDAAI,CAAC,mBAAmB,EAAE,6BAA6B,EAAE,OAAO,CAAC;QAEnE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACtC,mDAAI,CAAC,mBAAmB,EAAE,8BAA8B,EAAE,OAAO,CAAC;QACpE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACnD,mDAAI,CAAC,mBAAmB,EAAE,uCAAuC,EAAE,OAAO,CAAC;QAC7E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC;gBAEvB,mDAAI,CAAC;oBACH,KAAK,EAAE,cAAc;oBACrB,IAAI,EAAE,mDAAmD;oBACzD,IAAI,EAAE,UAAU;oBAChB,gBAAgB,EAAE,IAAI;oBACtB,gBAAgB,EAAE,UAAU;oBAC5B,kBAAkB,EAAE,SAAS;oBAC7B,iBAAiB,EAAE,MAAM;oBACzB,iBAAiB,EAAE,cAAc;iBAClC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBACjB,IAAI,QAAQ,GAAG;4BACb,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK;4BAC3C,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK;4BAC3C,MAAM,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM;4BAC7C,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK;4BAC3C,WAAW,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW;4BACvD,YAAY,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY;yBAC1D;wBAED,IAAI,OAAO,GAAG;4BACZ,MAAM,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM;4BAC5C,MAAM,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM;4BAC5C,SAAS,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS;4BAClD,QAAQ,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ;4BAChD,MAAM,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM;yBAC7C;wBAED,IAAI,SAAS,GAAG,EAAE;wBAElB,KAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,kBAAQ;4BAC1C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAC5B,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;4BAC/C,CAAC;4BACD,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;wBAC1Q,CAAC,CAAC,CAAC;wBAGH,IAAI,KAAK,GAAG;4BACV,MAAM,EAAE,KAAI,CAAC,WAAW;4BACxB,OAAO,EAAE,OAAO;4BAChB,QAAQ,EAAE,QAAQ;4BAClB,SAAS,EAAE,SAAS;4BACpB,KAAK,EAAE,IAAI,IAAI,EAAE;4BACjB,WAAW,EAAE,KAAI,CAAC,WAAW;yBAC9B;wBACD,IAAM,EAAE,GAAG,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,CAAC;wBAEzD,KAAI,CAAC,SAAS,EAAE;wBAChB,mDAAI,CACF,QAAQ,EACR,uCAAuC,EACvC,SAAS,CACV;wBAED,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,GAAG,EAAE,CAAC,CAAC,CAAC;oBAM1D,CAAC;gBACH,CAAC,CAAC;YAIJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBAGN,mDAAI,CAAC;oBACH,KAAK,EAAE,cAAc;oBACrB,IAAI,EAAE,qDAAqD;oBAC3D,IAAI,EAAE,UAAU;oBAChB,gBAAgB,EAAE,IAAI;oBACtB,gBAAgB,EAAE,UAAU;oBAC5B,kBAAkB,EAAE,SAAS;oBAC7B,iBAAiB,EAAE,MAAM;oBACzB,iBAAiB,EAAE,gBAAgB;iBACpC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBACjB,IAAI,QAAQ,GAAG;4BACb,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK;4BAC3C,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK;4BAC3C,MAAM,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM;4BAC7C,KAAK,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK;4BAC3C,WAAW,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW;4BACvD,YAAY,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY;yBAC1D;wBAED,IAAI,OAAO,GAAG;4BACZ,MAAM,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM;4BAC5C,MAAM,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM;4BAC5C,SAAS,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS;4BAClD,QAAQ,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ;4BAChD,MAAM,EAAE,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM;yBAC7C;wBAED,IAAI,SAAS,GAAG,EAAE;wBAIlB,KAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,kBAAQ;4BAC1C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAC5B,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;4BAC/C,CAAC;4BACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBAC/B,CAAC,CAAC,CAAC;wBAGH,IAAI,KAAK,GAAG;4BACV,MAAM,EAAE,KAAI,CAAC,WAAW;4BACxB,OAAO,EAAE,OAAO;4BAChB,QAAQ,EAAE,QAAQ;4BAClB,SAAS,EAAE,SAAS;4BACpB,WAAW,EAAE,KAAI,CAAC,WAAW;yBAC9B;wBACD,KAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAI,CAAC,EAAE,EAAE,KAAK,CAAC;wBAEhD,KAAI,CAAC,SAAS,EAAE;wBAEhB,mDAAI,CACF,QAAQ,EACR,2CAA2C,EAC3C,SAAS,CACV;wBAED,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,GAAG,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;oBAK/D,CAAC;gBACH,CAAC,CAAC;YAGJ,CAAC;QAEH,CAAC;IAKH,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,mBAAmB,GAAG,IAAI;QAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI;QAChC,IAAI,CAAC,sBAAsB,GAAG,EAAE;QAEhC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC;QAIF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC;IACJ,CAAC;IAED,8CAAgB,GAAhB,UAAiB,MAAM;QAAvB,iBA6BC;QAzBC,mDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,yDAAyD;YAC/D,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,gBAAgB,EAAE,UAAU;YAC5B,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;SACnC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,CAAC,CAAC,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC;gBAC9C,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC7C,mDAAI,CACF,QAAQ,EACR,kCAAkC,EAClC,SAAS,CACV;gBACD,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE;YACvB,CAAC;QACH,CAAC,CAAC;IAKJ,CAAC;IAED,iDAAmB,GAAnB;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ;IAC9D,CAAC;IAED,kCAAI,GAAJ,UAAK,OAAO;QAAZ,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YACjE,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAC9C,CAAC,EAAE,UAAC,MAAM;QAEV,CAAC,CAAC,CAAC;IACL,CAAC;IAnaD;QADC,+DAAS,CAAC,sEAAkB,CAAC;kCACnB,sEAAkB;0DAAC;IAHnB,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;YAG3B,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;SACjC,CAAC;yCAmE0B,yEAAc;YAC1B,0DAAW;YACD,mEAAQ;YACf,sDAAM;YACI,oFAAe;YACf,oFAAe;YAClB,2EAAY;YACnB,8DAAc;OAzEpB,mBAAmB,CAwa/B;IAAD,0BAAC;CAAA;AAxa+B;;;;;;;;;;;;ACpBhC,sD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,gsBAAgsB,yCAAyC,8IAA8I,mEAAmE,uHAAuH,mCAAmC,2HAA2H,mCAAmC,iHAAiH,mCAAmC,KAAK,mCAAmC,KAAK,yDAAyD,sUAAsU,aAAa,MAAM,oBAAoB,mIAAmI,6BAA6B,qYAAqY,cAAc,6CAA6C,2CAA2C,MAAM,MAAM,yCAAyC,cAAc,+CAA+C,sCAAsC,MAAM,MAAM,yCAAyC,cAAc,uCAAuC,0CAA0C,MAAM,yCAAyC,cAAc,uCAAuC,yCAAyC,MAAM,kgFAAkgF,mBAAmB,+BAA+B,iBAAiB,+BAA+B,sBAAsB,mCAAmC,2DAA2D,qDAAqD,iBAAiB,0GAA0G,sBAAsB,4GAA4G,+BAA+B,gqBAAgqB,oHAAoH,kCAAkC,m5BAAm5B,ygBAAygB,mbAAmb,kCAAkC,8HAA8H,2CAA2C,iIAAiI,4EAA4E,0HAA0H,yEAAyE,iSAAiS,gEAAgE,yHAAyH,0DAA0D,uHAAuH,wDAAwD,4HAA4H,4DAA4D,2HAA2H,gDAAgD,gqBAAgqB,6DAA6D,+BAA+B,0DAA0D,+BAA+B,qBAAqB,6U;;;;;;;;;;;ACA5jW,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAED;AACwB;AACnB;AACI;AACO;AAEhC;AAGH;AACyC;AASvE;IAsBE,+BAAoB,KAAqB,EAC/B,YAAsB,EACtB,YAA0B,EAC1B,cAA8B,EAC9B,EAAoB;QAJ9B,iBAkCC;QAlCmB,UAAK,GAAL,KAAK,CAAgB;QAC/B,iBAAY,GAAZ,YAAY,CAAU;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,OAAE,GAAF,EAAE,CAAkB;QAtB9B,mBAAc,GAAW,CAAC,CAAC;QAE3B,SAAI,GAAK,EAAE;QACX,eAAU,GAAW,CAAC,CAAC;QAEvB,gBAAW,GAAW,EAAE;QAExB,gBAAW,GAAW,CAAC;QAIvB,UAAK,GAAG;YACN,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;SAChB;QAUC,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG;YACtB,EAAE,EAAC,GAAG,CAAC,WAAW,CAAC,EAAC;gBAClB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW;YAEpC,CAAC;YACD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS;YAC9B,KAAI,CAAC,cAAc,GAAG,CAAC;YACvB,KAAI,CAAC,WAAW,GAAG,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,CAAC;YACnB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;gBAE5B,KAAI,CAAC,cAAc,IAAG,OAAO,CAAC,cAAc,GAAC,OAAO,CAAC,QAAQ,GAAC,EAAE;gBAChE,EAAE,EAAC,OAAO,CAAC,MAAM,IAAE,cAAc,CAAC,EAAC;oBAEjC,KAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;YAIH,CAAC,CAAC,CAAC;QAIL,CAAC,CAAC;IAEJ,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAKC;QAHC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,aAAG;YAClD,KAAI,CAAC,IAAI,GAAG,GAAG;QACf,CAAC,CAAC;IACJ,CAAC;IAED,+CAAe,GAAf,UAAgB,KAAK;QAArB,iBA2BC;QAzBC,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,cAAc;SAClC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,eAAe;gBAC9C,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE;gBAC7C,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC;qBACxE,IAAI,CAAC,aAAG;oBACP,kDAAI,CACF,QAAQ,EACR,+BAA+B,EAC/B,SAAS,CACV;gBACH,CAAC,CAAC;YAEN,CAAC;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,oDAAoB,GAApB,UAAqB,KAAK;QAIxB,iBAAiB;QACjB,IAAM,cAAc,GAAG,0CAAU,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,cAAc,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACzG,IAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,cAAc,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ;QAGtG,SAAS;QACT,IAAI,MAAM,GAAG,mCAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACnE,IAAI,MAAM,GAAG,mCAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAChE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;QACnC,IAAM,QAAQ,GAAG,0CAAU,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAE5D,QAAQ;QAER,IAAI,MAAM,GAAG,CAAC;QAEd,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;gBACxC,IAAI,MAAM,GAAG,mCAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBACnD,IAAI,MAAM,GAAG,mCAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAChD,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gBACrC,MAAM,IAAI,KAAK;YACjB,CAAC,CAAC,CAAC;QACL,CAAC;QAID,aAAa;QACb,IAAM,IAAI,GAAG,IAAI,GAAG,MAAM;QAC1B,IAAI,UAAU,GAAG,0CAAU,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAG5D,IAAM,UAAU,GAAG,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAIlE,MAAM,CAAC;YACL,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,iBAAiB;SAClC;IAEH,CAAC;IAID,iDAAiB,GAAjB,UAAkB,KAAK;QAAvB,iBA8BC;QA5BC,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,4CAA4C;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,gBAAgB;SACpC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,cAAc;gBAC/C,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE;gBAC1C,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;oBAElF,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,YAAY,GAAG,KAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;oBACrE,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;wBAClF,kDAAI,CACF,QAAQ,EACR,iCAAiC,EACjC,SAAS,CACV;oBACH,CAAC,CAAC;gBAEJ,CAAC,CAAC;YAEF,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,oCAAI,GAAJ,UAAK,OAAO,EAAE,KAAK;QAAnB,iBASC;QARC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACjD,+DAA+D;QAC/D,IAAI,CAAC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YACjE,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAC9C,CAAC,EAAE,UAAC,MAAM;QAEV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAK,GAAL,UAAM,OAAO,EAAE,KAAK;QAApB,iBASC;QARC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAEjD,IAAI,CAAC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YACjE,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAC9C,CAAC,EAAE,UAAC,MAAM;QAEV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAM,GAAN;QAAA,iBAkCC;QAjCC,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;QAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,EAAE;QAC3C,CAAC;QACD,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,aAAa;SACjC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEjB,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,yBAAyB;gBAChE,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,EAAE;gBAC9C,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM;gBAC7D,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE,KAAI,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBACjG,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC;qBACxE,IAAI,CAAC,aAAG;oBACP,kDAAI,CACF,QAAQ,EACR,8BAA8B,EAC9B,SAAS,CACV;gBACH,CAAC,CAAC;YAEN,CAAC;QACH,CAAC,CAAC;IAGJ,CAAC;IAED,gDAAgB,GAAhB,UAAiB,MAAM;QAAvB,iBAmCC;QAhCC,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;SACnC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEjB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,eAAe;gBAC/C,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;oBACzC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACnD,KAAK,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE;oBAC5B,CAAC;gBACH,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;oBAClF,kDAAI,CACF,QAAQ,EACR,gCAAgC,EAChC,SAAS,CACV;gBACH,CAAC,CAAC;YAGJ,CAAC;QACH,CAAC,CAAC;IAIJ,CAAC;IA/QU,qBAAqB;QANjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;YAG7B,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;SACjC,CAAC;yCAuB2B,8DAAc;YACjB,mEAAQ;YACR,2EAAY;YACV,yEAAc;YAC1B,uEAAgB;OA1BnB,qBAAqB,CAiRjC;IAAD,4BAAC;CAAA;AAjRiC;;;;;;;;;;;;ACrBlC,qqBAAqqB,yCAAyC,kHAAkH,mEAAmE,uHAAuH,mCAAmC,2HAA2H,mCAAmC,iHAAiH,mCAAmC,49CAA49C,mPAAmP,mBAAmB,2BAA2B,iBAAiB,2BAA2B,sBAAsB,2BAA2B,2DAA2D,2BAA2B,iBAAiB,uW;;;;;;;;;;;ACAhxG,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACC;AACnB;AACM;AACqB;AACzB;AACD;AACwB;AACtC;AACG;AACyB;AACJ;AACE;AACoB;AAS5E;IAwDE,mCACU,KAAqB,EACrB,EAAoB,EACpB,YAA0B,EAC1B,EAAe,EACf,cAA8B,EAC9B,YAAsB,EACtB,cAA8B;QAPxC,iBA2BC;QA1BS,UAAK,GAAL,KAAK,CAAgB;QACrB,OAAE,GAAF,EAAE,CAAkB;QACpB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,OAAE,GAAF,EAAE,CAAa;QACf,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAU;QACtB,mBAAc,GAAd,cAAc,CAAgB;QA1DxC,cAAS,GAAwB,IAAI,CAAC,SAAS,GAAG;YAChD,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE;gBACR,UAAU,EAAE,eAAe;gBAC3B,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,0BAA0B;gBACtC,IAAI,EAAE,uDAAuD;gBAC7D,SAAS,EAAE,4BAA4B;gBACvC,YAAY,EAAE,kCAAkC;gBAChD,WAAW,EAAE,EAAE;gBACf,cAAc,EAAE,uBAAuB;gBACvC,WAAW,EAAE,6BAA6B;gBAC1C,UAAU,EAAE,sCAAsC;gBAClD,QAAQ,EAAE;oBACR,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,UAAU;oBACpB,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE,QAAQ;iBACf;gBACD,IAAI,EAAE;oBACJ,aAAa,EAAE,qDAAqD;oBACpE,cAAc,EAAE,sDAAsD;iBACvE;aACF;SAEF,CAAC;QACF,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;QAIxC,iBAAY,GAAQ,EAAE;QAMtB,gBAAW,GAAW,EAAE;QAExB,UAAK,GAAG;YACN,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;SAChB;QAID,gBAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnC,CAAC;QAWA,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,IAAI,CAAC,oBAAoB,GAAG,EAAE;QAC9B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG;YACtB,EAAE,EAAC,GAAG,CAAC,WAAW,CAAC,EAAC;gBAClB,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW;YACpC,CAAC;YACD,KAAI,CAAC,YAAY,GAAG,GAAG;YAEvB,CAAC,CAAC,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC;YAC9C,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS;YAC9B,KAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,SAAS;YACzC,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE;QACvB,CAAC,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IAGxD,CAAC;IAnDC,CAAC;IAqDH,mDAAe,GAAf;QACE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC;IACvD,CAAC;IAED,wCAAI,GAAJ,UAAK,OAAO,EAAE,KAAK;QAAnB,iBASC;QARC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACjD,+DAA+D;QAC/D,IAAI,CAAC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YACjE,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAC9C,CAAC,EAAE,UAAC,MAAM;QAEV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAK,GAAL,UAAM,OAAO,EAAE,KAAK;QAApB,iBASC;QARC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAEjD,IAAI,CAAC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YACjE,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAC9C,CAAC,EAAE,UAAC,MAAM;QAEV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAkB,GAAlB,UAAmB,QAAQ,EAAE,KAAK;QAAlC,iBAkCC;QA/BC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC/B,kDAAI,CAAC,kBAAkB,EAAE,8BAA8B,EAAE,OAAO,CAAC;QACnE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,kDAAI,CAAC;gBACH,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,6BAA6B,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAgB,GAAG,QAAQ,CAAC,WAAW;gBAC7G,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,SAAS;gBAC7B,iBAAiB,EAAE,MAAM;gBACzB,gBAAgB,EAAE,UAAU;gBAC5B,iBAAiB,EAAE,cAAc;aAClC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,CAAC,CAAC,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC;oBAE9C,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ;oBAClD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,yBAAyB;oBACxD,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,MAAM,EAAE,yBAAyB,EAAE,CAAC;yBAC7G,IAAI,CAAC,aAAG;wBACP,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE;wBACrB,kDAAI,CACF,QAAQ,EACR,6CAA6C,EAC7C,SAAS,CACV;oBACH,CAAC,CAAC;gBAEJ,CAAC;YACH,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,oDAAgB,GAAhB,UAAiB,MAAM;QAAvB,iBA4BC;QA3BC,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,2CAA2C;YACjD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,eAAe;SACnC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEjB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,eAAe;gBAC/C,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;oBACzC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACnD,KAAK,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE;oBAC5B,CAAC;gBACH,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;oBAClF,kDAAI,CACF,QAAQ,EACR,gCAAgC,EAChC,SAAS,CACV;gBACH,CAAC,CAAC;YACJ,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,wDAAoB,GAApB,UAAqB,KAAK;QAGxB,iBAAiB;QACjB,IAAM,cAAc,GAAG,0CAAU,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,cAAc,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACzG,IAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,cAAc,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ;QAGtG,SAAS;QACT,IAAI,MAAM,GAAG,mCAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACnE,IAAI,MAAM,GAAG,mCAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAChE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;QACnC,IAAM,QAAQ,GAAG,0CAAU,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAE5D,QAAQ;QAER,IAAI,MAAM,GAAG,CAAC;QAEd,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;gBACxC,IAAI,MAAM,GAAG,mCAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBACnD,IAAI,MAAM,GAAG,mCAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBAChD,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gBACrC,MAAM,IAAI,KAAK;YACjB,CAAC,CAAC,CAAC;QACL,CAAC;QAID,aAAa;QACb,IAAM,IAAI,GAAG,IAAI,GAAG,MAAM;QAC1B,IAAI,UAAU,GAAG,0CAAU,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAG5D,IAAM,UAAU,GAAG,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAGlE,MAAM,CAAC;YACL,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,iBAAiB;SAClC;IAEH,CAAC;IAGD,mDAAe,GAAf,UAAgB,KAAK;QAArB,iBA2BC;QAzBC,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,cAAc;SAClC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,eAAe;gBAC9C,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE;gBAC7C,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC;qBACxE,IAAI,CAAC,aAAG;oBACP,kDAAI,CACF,QAAQ,EACR,+BAA+B,EAC/B,SAAS,CACV;gBACH,CAAC,CAAC;YAEN,CAAC;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,0CAAM,GAAN;QAAA,iBAkCC;QAjCC,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;QAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,EAAE;QAC3C,CAAC;QACD,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,aAAa;SACjC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEjB,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,yBAAyB;gBAChE,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,EAAE;gBAC9C,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM;gBAC7D,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE,KAAI,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBACjG,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC;qBACxE,IAAI,CAAC,aAAG;oBACP,kDAAI,CACF,QAAQ,EACR,8BAA8B,EAC9B,SAAS,CACV;gBACH,CAAC,CAAC;YAEN,CAAC;QACH,CAAC,CAAC;IAGJ,CAAC;IAGD,qDAAiB,GAAjB,UAAkB,KAAK;QAAvB,iBA8BC;QA5BC,kDAAI,CAAC;YACH,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,4CAA4C;YAClD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,UAAU;YAC5B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,gBAAgB;SACpC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,cAAc;gBAC/C,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE;gBAC1C,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;oBAElF,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,YAAY,GAAG,KAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;oBACrE,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,aAAG;wBAClF,kDAAI,CACF,QAAQ,EACR,iCAAiC,EACjC,SAAS,CACV;oBACH,CAAC,CAAC;gBAEJ,CAAC,CAAC;YAEF,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,4CAAQ,GAAR;IAEA,CAAC;IAnUD;QADC,+DAAS,CAAC,sEAAkB,CAAC;kCACnB,sEAAkB;gEAAC;IAHnB,yBAAyB;QAPrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;YAGjC,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;SAEjC,CAAC;yCA0DiB,8DAAc;YACjB,uEAAgB;YACN,2EAAY;YACtB,0DAAW;YACC,yEAAc;YAChB,oEAAQ;YACN,kFAAc;OA/D7B,yBAAyB,CAwUrC;IAAD,gCAAC;CAAA;AAxUqC;;;;;;;;;;;;ACtBtC,wpEAAwpE,yBAAyB,yEAAyE,yBAAyB,KAAK,yBAAyB,KAAK,0BAA0B,yEAAyE,+BAA+B,yEAAyE,kCAAkC,iFAAiF,0BAA0B,iJAAiJ,0BAA0B,kR;;;;;;;;;;;ACAzzF,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACE;AACU;AAEQ;AAQtE;IAME,6BAAoB,MAAuB,EAAU,YAA0B;QAA3D,WAAM,GAAN,MAAM,CAAiB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAC7E,IAAI,CAAC,SAAS,GAAC,EAAE;IAClB,CAAC;IAEF,sCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,cAAc,EAAE;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAG;YAC5B,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG;QAC1B,CAAC,CAAC;IAEJ,CAAC;IAED,4CAAc,GAAd;QAAA,iBAgCC;QA/BC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAElD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAG;YACxB,KAAI,CAAC,MAAM,GAAG,EAAE;YAChB,GAAG,CAAC,OAAO,CAAC,iBAAO;gBACjB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ;oBAGrC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACvB,QAAQ,CAAC,QAAQ,GAAG,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE;oBAC9C,CAAC;oBAED,IAAM,MAAM,GAAG,EAAE;oBACjB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;wBACpB,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;4BAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;gCACrC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM;4BACvC,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;oBAGD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAG1G,CAAC,CAAC,CAAC;YAGL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IAEJ,CAAC;IAlDU,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;YAG3B,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;SACjC,CAAC;yCAO4B,iEAAe,EAAwB,2EAAY;OANpE,mBAAmB,CAoD/B;IAAD,0BAAC;CAAA;AApD+B;;;;;;;;;;;;ACZhC,0kCAA0kC,UAAU,mWAAmW,UAAU,QAAQ,mCAAmC,oCAAoC,uDAAuD,+BAA+B,kDAAkD,+BAA+B,2BAA2B,+BAA+B,2BAA2B,yDAAyD,2BAA2B,KAAK,2BAA2B,KAAK,4BAA4B,yN;;;;;;;;;;;ACAj6D,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACC;AACnB;AAC2B;AACd;AAQxD;IAoCE,4BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAjC9C,cAAS,GAAuB,IAAI,CAAC,SAAS,GAAG;YAC/C,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE;gBACR,UAAU,EAAE,eAAe;gBAC3B,MAAM,EAAE,SAAS;gBACjB,UAAU,EAAE,0BAA0B;gBACtC,IAAI,EAAE,uDAAuD;gBAC7D,SAAS,EAAE,4BAA4B;gBACvC,YAAY,EAAE,kCAAkC;gBAChD,WAAW,EAAE,EAAE;gBACf,cAAc,EAAE,uBAAuB;gBACvC,WAAW,EAAE,6BAA6B;gBAC1C,UAAU,EAAE,sCAAsC;gBAClD,QAAQ,EAAE;oBACR,KAAK,EAAE,SAAS;oBAChB,QAAQ,EAAE,UAAU;oBACpB,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE,QAAQ;iBACf;gBACD,IAAI,EAAE;oBACJ,aAAa,EAAE,qDAAqD;oBACpE,cAAc,EAAE,sDAAsD;iBACvE;aACF;SAEF,CAAC;QACF,cAAS,GAAiB,IAAI,4CAAO,EAAE,CAAC;IAOxC,CAAC;IARC,CAAC;IAUH,qCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE;IACvB,CAAC;IAED,2CAAc,GAAd;QAAA,iBASC;QAPC,IAAI,CAAC,OAAO,GAAE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAEjD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAG;YACxB,CAAC,CAAC,oBAAoB,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC;YAC9C,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC;IAEJ,CAAC;IAnDD;QADC,+DAAS,CAAC,qEAAkB,CAAC;kCACnB,qEAAkB;yDAAC;IAFnB,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;SACjC,CAAC;yCAqCkC,2EAAY;OApCnC,kBAAkB,CAuD9B;IAAD,yBAAC;CAAA;AAvD8B;;;;;;;;;;;;ACZ/B,sD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPO;AACM;AACU;AACiB;AACY;AACM;AAC5C;AACM;AACY;AACd;AACM;AACG;AACA;AACQ;AACf;AACY;AACQ;AACmB;AACb;AAClB;AACE;AACiB;AAsBjF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAlB9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,oEAAgB;gBAChB,wDAAgB;gBAChB,mEAAc;gBACd,kEAAmB;gBACnB,0DAAW;gBACX,oEAAS,CAAC,OAAO,EAAE;gBACnB,sEAAa;gBACb,yEAAc;gBACd,yEAAc;gBACd,oEAAgB;gBAChB,yEAAc;aACf;YACD,OAAO,EAAC,CAAC,yEAAe,EAAC,uEAAc,CAAC;YACxC,YAAY,EAAE,CAAC,sFAAmB,EAAE,kGAAuB,EAAE,wGAAyB,EAAE,kFAAkB,EAAE,+EAAqB,EAAE,uFAAmB,EAAE,0GAAqB,EAAE,6FAAqB,EAAE,yEAAe,EAAE,8FAAsB,CAAC;SAC/O,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CY;AACyC;AAC/C;AAKrC;IAKE,sBAA6B,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;QAChD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,iCAAU,GAAV,UAAW,KAAK,EAAE,SAAc;QAC9B,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;QACrD,MAAM,CAAC,EAAE;IACX,CAAC;IAED,qCAAc,GAAd,UAAe,EAAE,EAAE,KAAK;QACtB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QACxD,MAAM,CAAC,EAAE;IACX,CAAC;IAED,oCAAa,GAAb,UAAc,EAAE;QACd,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE;IAE5D,CAAC;IAED,qCAAc,GAAd;IAEA,CAAC;IAGD,6CAAsB,GAAtB,UAAuB,KAAK,EAAE,KAAK;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,eAAK,IAAE,YAAK,CAAC,KAAK,CAAC,KAAK,EAAC,IAAI,EAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC;IACjF,CAAC;IAED,0CAAmB,GAAnB,UAAoB,MAAM,EAAE,GAAG;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,eAAK,IAAG,YAAK,CAAC,KAAK,CAAC,OAAO,EAAC,IAAI,EAAC,MAAM,CAAC,CAAC,KAAK,CAAC,OAAO,EAAC,IAAI,EAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,EAAjF,CAAiF,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CACzJ,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,WAAC;YAE1B,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAS,CAAC;YACzC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YAC5B,MAAM,CAAC,EAAE,EAAE,MAAE,IAAI,QAAE,CAAC;QACtB,CAAC,CAAC,EALa,CAKb,CAAC,CACJ,CAAC;IACJ,CAAC;IAED,qCAAc,GAAd;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,eAAK,IAAG,YAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,EAA/B,CAA+B,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CACvG,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,WAAC;YAE1B,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAS,CAAC;YACzC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YAC5B,MAAM,CAAC,EAAE,EAAE,MAAE,IAAI,QAAE,CAAC;QACtB,CAAC,CAAC,EALa,CAKb,CAAC,CACJ,CAAC;IACJ,CAAC;IAED,yCAAkB,GAAlB;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,eAAK,IAAG,YAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC,YAAY,EAAE;IAC5G,CAAC;IAED,sCAAe,GAAf,UAAgB,EAAE;QAChB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,YAAY,EAAE;IAClE,CAAC;IAED,uCAAgB,GAAhB,UAAiB,EAAE;QACjB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,eAAe,EAAE,CAAC,IAAI,CACnG,0DAAG,CAAC,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,WAAC;YAC1B,IAAM,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAS,CAAC;YACzC,IAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YAC5B,MAAM,CAAC,EAAE,EAAE,MAAE,IAAI,QAAE,CAAC;QACtB,CAAC,CAAC,EAJa,CAIb,CAAC,CACJ,CAAC;IACJ,CAAC;IAED,wCAAiB,GAAjB,UAAkB,KAAK,EAAE,KAAK;QAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IAhFU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMkC,uEAAgB;OALvC,YAAY,CAiFxB;IAAD,mBAAC;CAAA;AAjFwB","file":"orden-trabajo-orden-trabajo-module~reporte-reporte-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CrearOrdenComponent } from './crear-orden/crear-orden.component';\r\nimport { ConsultarOrdenComponent } from './consultar-orden/consultar-orden.component';\r\nimport { InformacionOrdenComponent } from './informacion-orden/informacion-orden.component';\r\nimport { OperacionComponent } from './operacion/operacion.component';\r\nimport { MisOrdenesComponent } from './mis-ordenes/mis-ordenes.component';\r\nimport { DetalleOrdenComponent } from './detalleOrden/detalle-orden/detalle-orden.component';\r\nimport { ConfiguracionComponent } from './configuracion/configuracion.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'crearorden/:id',\r\n    component: CrearOrdenComponent\r\n  },\r\n  {\r\n    path: 'consultarorden',\r\n    component: ConsultarOrdenComponent\r\n  },\r\n  {\r\n    path: 'informacionorden/:id',\r\n    component: InformacionOrdenComponent\r\n  },\r\n  {\r\n    path: 'detalleorden/:id',\r\n    component: DetalleOrdenComponent\r\n  },\r\n  {\r\n    path: 'operaciones',\r\n    component: OperacionComponent\r\n  },\r\n  {\r\n    path: 'misoperaciones',\r\n    component: MisOrdenesComponent\r\n  },\r\n  {\r\n    path: 'configuracion',\r\n    component: ConfiguracionComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Configuración órdenes de trabajo'\\\" [nuevo]=\\\"'/orden/crearorden/nuevo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\n\\n\\n      <div class=\\\"card mb-3\\\">\\n        <div class=\\\"card-header\\\">Ordenes de trabajo</div>\\n        <div class=\\\"card-body table-responsive\\\">\\n\\n    \\n\\n          <div class=\\\"form-inline\\\">\\n            <div class=\\\"form-group mb-2 mx-sm-2\\\">\\n              <label for=\\\"staticEmail2\\\" class=\\\"\\\">Inicio numeración Ordenes de Trabajo <span style=\\\"color: red\\\">* &nbsp; &nbsp; &nbsp;</span></label>\\n              <input autofocus type=\\\"number\\\" [(ngModel)]=\\\"numeroInicial\\\"   style=\\\"max-width: 100px;\\\" class=\\\"form-control\\\"\\n                id=\\\"staticEmail2\\\">\\n            </div>\\n            <button title=\\\"Guardar\\\" type=\\\"button\\\" (click)=\\\"guardarNumeracion()\\\" class=\\\"btn btn-primary mb-2\\\">Guardar</button>\\n          </div>\\n\\n\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { OrdenService } from '../../../servicios/orden/orden.service';\nimport { PersonaService } from '../../../servicios/persona.service';\nimport swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-configuracion',\n  templateUrl: './configuracion.component.html',\n  styleUrls: ['./configuracion.component.scss'],\n  animations: [routerTransition()]\n})\nexport class ConfiguracionComponent implements OnInit {\n\n  numeroInicial: number = 1;\n\n  constructor(private ordenService: OrdenService, private personaService: PersonaService) { }\n\n  ngOnInit() {\n    this.personaService.obtenerEmpresa().valueChanges().subscribe(empresa => {\n      this.numeroInicial = empresa.otInicio\n    })\n  }\n\n  guardarNumeracion(){\n    if (this.numeroInicial == null) {\n      swal('Existió un error', 'El número inicial no puede estar vacio', 'error')\n    } else if(this.numeroInicial<=0){\n      swal('Existió un error', 'El número inicial no puede ser 0 o menor a 0', 'error')\n    }else if(!Number.isInteger(this.numeroInicial)){\n      swal('Existió un error', 'El número inicial no puede ser decimal', 'error')\n\n    }else{\n      swal({\n        title: 'Está seguro?',\n        text: \"Desea modificar el número inicial de las Órdenes de Trabajo?\",\n        type: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Si, modificar!',\n        cancelButtonText: 'Cancelar'\n      }).then((result) => {\n        if (result.value) {\n\n          this.personaService.editarNumeracionInicial(this.numeroInicial).then(res=>{\n            swal(\n              'Listo!',\n              'Número inicial modificado correctamente.',\n              'success'\n            )\n          }, error=>{\n\n          })\n          \n        }\n      })\n    }\n  }\n\n}\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Consultar órdenes de trabajo'\\\" (myEvent)=\\\"imprimirReporte($event)\\\" [nuevo]=\\\"'/orden/crearorden/nuevo'\\\" [pdf]=\\\"true\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"card mb-3\\\">\\r\\n        <div  class=\\\"card-header\\\">Ordenes de trabajo</div>\\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n          <table   class=\\\"table \\\" datatable id=\\\"example-datatable\\\" [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th></th>\\r\\n                <th>No. OT</th>\\r\\n                <th>Fecha OT</th>\\r\\n                <th>Hora</th>\\r\\n                <th>ID Cliente</th>\\r\\n                <th>Nombre del cliente</th>\\r\\n                <th>ID/Placa</th>\\r\\n     \\r\\n\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let orden of ordenes\\\">\\r\\n                <td>\\r\\n                  <div class=\\\"btn-group\\\">\\r\\n                    <a title=\\\"Editar Orden de trabajo\\\" routerLink=\\\"/orden/crearorden/{{orden.id}}\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                    <button title=\\\"Eliminar Orden de Trabajo\\\"  class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"eliminarOrden(orden)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\r\\n                    <a  title=\\\"Operaciones\\\" routerLink=\\\"/orden/detalleorden/{{orden.id}}\\\" class=\\\"btn btn-success btn-sm\\\"><i class=\\\"fa fa-clock-o\\\"></i></a>\\r\\n                     <!-- <button title=\\\"Generar PDF Orden de Trabajo\\\"  class=\\\"btn btn-warning btn-sm\\\" (click)=\\\"print(orden)\\\"><i class=\\\"fa fa-file-pdf-o\\\"></i></button>  -->\\r\\n                    <!-- <a *ngIf=\\\"orden.esUsuario\\\" title=\\\"Operaciones\\\" routerLink=\\\"/orden/detalleorden/{{orden.id}}\\\" class=\\\"btn btn-success btn-sm\\\"><i class=\\\"fa fa-clock-o\\\"></i></a>\\r\\n                    -->\\r\\n                  </div>\\r\\n\\r\\n                </td>\\r\\n\\r\\n\\r\\n                <td><a routerLink=\\\"/orden/informacionorden/{{orden.id}}\\\">OT-{{orden.data.numero | anadirCeros:5}}</a></td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'dd/MM/yyyy'}}</td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'HH:mm'}}</td>\\r\\n                <td>{{orden.data.cliente.cedula}}</td>\\r\\n                <td>{{orden.data.cliente.nombre}}</td>\\r\\n\\r\\n                <td>\\r\\n                  {{orden.data.vehiculo.placa}}\\r\\n\\r\\n                </td>\\r\\n\\r\\n                \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n\\r\\n         \\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { OrdenService } from '../../../servicios/orden/orden.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\nimport swal from 'sweetalert2'\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\n\r\nimport { ReporteService } from '../../../servicios/reporte/reporte.service';\r\nimport { PersonaService } from '../../../servicios/persona.service';\r\n\r\nvar jsPDF = require('jspdf')\r\nrequire('jspdf-autotable')\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-consultar-orden',\r\n  templateUrl: './consultar-orden.component.html',\r\n  styleUrls: ['./consultar-orden.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class ConsultarOrdenComponent implements OnInit {\r\n  @ViewChild(DataTableDirective)\r\n  dtElement: DataTableDirective;\r\n  user: any = ''\r\n  dtOptions: DataTables.Settings = this.dtOptions = {\r\n    pagingType: 'full_numbers',\r\n    pageLength: 25,\r\n    autoWidth: true,\r\n    language: {\r\n      processing: \"Procesando...\",\r\n      search: \"Buscar:\",\r\n      lengthMenu: \"Mostrar _MENU_ elementos\",\r\n      info: \"Mostrando desde _START_ al _END_ de _TOTAL_ elementos\",\r\n      infoEmpty: \"Mostrando ningún elemento.\",\r\n      infoFiltered: \"(filtrado _MAX_ elementos total)\",\r\n      infoPostFix: \"\",\r\n      loadingRecords: \"Cargando registros...\",\r\n      zeroRecords: \"No se encontraron registros\",\r\n      emptyTable: \"No hay datos disponibles en la tabla\",\r\n      paginate: {\r\n        first: \"Primero\",\r\n        previous: \"Anterior\",\r\n        next: \"Siguiente\",\r\n        last: \"Último\"\r\n      },\r\n      aria: {\r\n        sortAscending: \": Activar para ordenar la tabla en orden ascendente\",\r\n        sortDescending: \": Activar para ordenar la tabla en orden descendente\"\r\n      }\r\n    }\r\n\r\n  };;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  ordenes: any[] = [];\r\n\r\n\r\n  constructor(private personaService: PersonaService, private ordenService: OrdenService, private aFaut: AngularFireAuth, private reporteService: ReporteService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.obtenerOrdenes()\r\n\r\n    this.personaService.obtenerUsuario().subscribe(res => {\r\n      this.user = res\r\n    })\r\n  }\r\n\r\n  print(orden) {\r\n    this.reporteService.reporteCliente(orden)\r\n  }\r\n\r\n  imprimirReporte(){\r\n    this.reporteService.reporteDatos(this.ordenes, 'Órdenes de Trabajo')\r\n    \r\n  }\r\n\r\n  obtenerOrdenes() {\r\n\r\n    this.ordenService.obtenerOrdenes()\r\n      .subscribe(res => {\r\n        $('#example-datatable').DataTable().destroy();\r\n\r\n\r\n\r\n        this.ordenes = res\r\n        this.ordenes.forEach(orden => {\r\n          orden.esUsuario == false\r\n\r\n          orden.data.servicios.forEach(servicio => {\r\n\r\n\r\n            if (servicio.operador.data.correo == this.user.email) {\r\n              orden.esUsuario = true\r\n            }\r\n          });\r\n\r\n\r\n        });\r\n        this.dtTrigger.next();\r\n      })\r\n\r\n  }\r\n\r\n  imprimirOrden(orden) {\r\n    var pdf = new jsPDF('p', 'pt', 'letter');\r\n    var source = $('#imprimir')[0];\r\n\r\n    var specialElementHandlers = {\r\n      '#bypassme': function (element, renderer) {\r\n        return true\r\n      }\r\n    };\r\n    var margins = {\r\n      top: 80,\r\n      bottom: 60,\r\n      left: 40,\r\n      width: 522\r\n    };\r\n\r\n    pdf.fromHTML(\r\n      source,\r\n      margins.left, // x coord\r\n      margins.top, { // y coord\r\n        'width': margins.width,\r\n        'elementHandlers': specialElementHandlers\r\n      },\r\n\r\n      function (dispose) {\r\n        pdf.save('Prueba.pdf');\r\n      }, margins\r\n    );\r\n\r\n  }\r\n\r\n  eliminarOrden(orden) {\r\n    swal({\r\n      title: 'Está seguro?',\r\n      text: \"Está seguro que desea eliminar la orden seleccionada\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      cancelButtonText: 'Cancelar',\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, eliminar!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n\r\n        this.ordenService.eliminarOrden(orden.id).then(res => {\r\n\r\n          swal(\r\n            'Listo!',\r\n            'Orden de trabajo eliminada correctamente.',\r\n            'success'\r\n          )\r\n        })\r\n\r\n\r\n      }\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Crear orden de trabajo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n      <hr>\\r\\n      <h5>OT-{{numeroOrden | anadirCeros:5}}</h5>\\r\\n      <hr>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">Informacion del cliente <span style=\\\"color: red\\\">*</span></div>\\r\\n\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <table class=\\\"table table-sm table-bordered\\\">\\r\\n                <tr>\\r\\n                  <th>Buscar:</th>\\r\\n                  <td>\\r\\n\\r\\n                    <div class=\\\"btn-group\\\" style=\\\"font-size: 8px\\\">\\r\\n                      <form class=\\\"form\\\" [formGroup]=\\\"ClienteForm\\\" (ngSubmit)=\\\"seleccionarPersona()\\\">\\r\\n                        <ng-select class=\\\"form-control\\\" style=\\\"font-size: 10px\\\" autofocus style=\\\"width: 250px;\\\" (change)=\\\"seleccionarPersona()\\\" class=\\\"form-control\\\"\\r\\n                          [items]=\\\"personas\\\" bindLabel=\\\"data.nombreCedula\\\" formControlName=\\\"persona\\\">\\r\\n                        </ng-select>\\r\\n                      </form>\\r\\n                      <button class=\\\"btn btn-white btn-sm\\\" (click)=\\\"open(content)\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Nombre:</th>\\r\\n                  <td>\\r\\n                    {{ (personaSeleccionada)?.data.nombre }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Cédula/RUC:</th>\\r\\n                  <td>{{ (personaSeleccionada)?.data.cedula }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Dirección:</th>\\r\\n                  <td>{{ (personaSeleccionada)?.data.direccion}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Teléfono:</th>\\r\\n                  <td>{{ (personaSeleccionada)?.data.telefono }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Correo:</th>\\r\\n                  <td>{{ (personaSeleccionada)?.data.correo }}</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">Información del vehículo <span style=\\\"color: red\\\">*</span></div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n\\r\\n              <table class=\\\"table table-sm table-bordered\\\">\\r\\n                <tr>\\r\\n                  <th>Buscar:</th>\\r\\n                  <td>\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                      <form class=\\\"form\\\" [formGroup]=\\\"VehiculoForm\\\" (ngSubmit)=\\\"seleccionarPersona()\\\">\\r\\n                        <ng-select class=\\\"form-control\\\" autofocus style=\\\"width: 250px;\\\" (change)=\\\"seleccionarVehiculo()\\\" class=\\\"form-control\\\" [items]=\\\"vehiculos | async\\\"\\r\\n                          bindLabel=\\\"data.placa\\\" formControlName=\\\"vehiculo\\\">\\r\\n                        </ng-select>\\r\\n                      </form>\\r\\n                      <button class=\\\"btn btn-white btn-sm\\\" (click)=\\\"open(content2)\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                    </div>\\r\\n\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>ID/Placa:</th>\\r\\n                  <td>\\r\\n                    {{ (vehiculoSeleccionado)?.data.placa }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Marca:</th>\\r\\n                  <td>\\r\\n                    {{ (vehiculoSeleccionado)?.data.marca }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Modelo:</th>\\r\\n                  <td>\\r\\n                    {{ (vehiculoSeleccionado)?.data.modelo }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Color:</th>\\r\\n                  <td>\\r\\n                    {{ (vehiculoSeleccionado)?.data.color }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <th>Motor:</th>\\r\\n                  <td>\\r\\n                    {{ (vehiculoSeleccionado)?.data.numeroMotor }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Registro de productos o servicios <span style=\\\"color: red\\\">*</span>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"btn-group\\\">\\r\\n              <p>Seleccione productos o servicios: &nbsp;&nbsp;</p>\\r\\n              <form class=\\\"form\\\" [formGroup]=\\\"ServicioForm\\\" (ngSubmit)=\\\"seleccionarServicio()\\\">\\r\\n                  <ng-select class=\\\"form-control\\\" style=\\\"width: 500px;\\\" (change)=\\\"seleccionarServicio()\\\" class=\\\"form-control\\\" [items]=\\\"servicios\\\"\\r\\n                  bindLabel=\\\"data.descripcionCod\\\" formControlName=\\\"servicio\\\">\\r\\n                </ng-select>\\r\\n              </form>\\r\\n              <button class=\\\"btn btn-white btn-sm\\\" (click)=\\\"open(contentServicio)\\\">\\r\\n                <i class=\\\"fa fa-plus\\\"></i>\\r\\n              </button>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <hr>\\r\\n\\r\\n          <p>\\r\\n            <strong>Servicios seleccionados: </strong>{{serviciosSeleccionados.length}}</p>\\r\\n          <table *ngIf=\\\"serviciosSeleccionados.length>0\\\" class=\\\"table table-bordered table-responsive-sm table-sm\\\" datatable id=\\\"example-datatable\\\" [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n                <th scope=\\\"col\\\">#</th>\\r\\n                <th scope=\\\"col\\\">Cantidad</th>\\r\\n                <th scope=\\\"col\\\">Código</th>\\r\\n                <th scope=\\\"col\\\">Servicio</th>\\r\\n\\r\\n                <th scope=\\\"col\\\">Tiempo estándar</th>\\r\\n                <th scope=\\\"col\\\">Estado</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let servicio of serviciosSeleccionados;let i = index\\\">\\r\\n                <td>\\r\\n                  <button [disabled]=\\\"servicio.data.estado=='POR FACTURAR'|| servicio.data.estado=='EN PRODUCCIÓN' || servicio.data.estado=='EN PRODUCCIÓN - PAUSADO'\\\" (click)=\\\"eliminarServicio(i)\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\">\\r\\n                    <i class=\\\"fa fa-trash\\\"></i>\\r\\n                  </button>\\r\\n                </td>\\r\\n                <td>\\r\\n\\r\\n              \\r\\n                      <button title=\\\"Subir una posición\\\" class=\\\"btn btn-sm \\\" [disabled]=\\\"i==0\\\" (click)=\\\"modificarPosiciones('+', i)\\\"><i class=\\\"fa fa-angle-up\\\"></i></button>\\r\\n       \\r\\n      \\r\\n                      <button title=\\\"Bajar una posición\\\" class=\\\"btn btn-sm \\\" [disabled]=\\\"i==serviciosSeleccionados.length-1\\\" (click)=\\\"modificarPosiciones('-', i)\\\"><i class=\\\"fa fa-angle-down\\\"></i></button>\\r\\n \\r\\n                  \\r\\n                  \\r\\n                  \\r\\n                </td>\\r\\n                <td>{{i+1 | anadirCeros:2}}</td>\\r\\n                <td *ngIf=\\\"servicio.data\\\"><input [disabled]=\\\"servicio.data.estado=='POR FACTURAR'|| servicio.data.estado=='EN PRODUCCIÓN' || servicio.data.estado=='EN PRODUCCIÓN - PAUSADO'\\\" style=\\\"max-width: 60px\\\" class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"servicio.data.cantidad\\\"></td>\\r\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.codigo}}</td>\\r\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.descripcion}}</td>\\r\\n\\r\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.tiempoEstandar*60 | formatTime}}</td>\\r\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.estado}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr>\\r\\n          <label for=\\\"txtDescripcion\\\">Observación</label>\\r\\n          <textarea [(ngModel)]=\\\"observacion\\\"  id=\\\"txtDescripcion\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"2\\\"></textarea>\\r\\n          <hr>\\r\\n\\r\\n          <button  class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"guardarOrden()\\\">Guardar</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <app-crear-persona></app-crear-persona>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <app-crear-vehiculo [id]=\\\"nuevo\\\"></app-crear-vehiculo>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #contentServicio let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <app-crear-servicio></app-crear-servicio>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cerrar</button>\\r\\n  </div>\\r\\n</ng-template>\"","module.exports = \"\"","import { Component, OnInit, forwardRef, ViewChild } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { PersonaService } from '../../../servicios/persona.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { VehiculoService } from '../../../servicios/vehiculo/vehiculo.service';\r\nimport { ServicioService } from '../../../servicios/servicio/servicio.service';\r\nimport { OrdenService } from '../../../servicios/orden/orden.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport swal from 'sweetalert2'\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n  selector: 'app-crear-orden',\r\n  templateUrl: './crear-orden.component.html',\r\n  styleUrls: ['./crear-orden.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class CrearOrdenComponent implements OnInit {\r\n\r\n  @ViewChild(DataTableDirective)\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings = this.dtOptions = {\r\n    pagingType: 'full_numbers',\r\n    pageLength: 50,\r\n    autoWidth: true,\r\n    language: {\r\n      processing: \"Procesando...\",\r\n      search: \"Buscar:\",\r\n      lengthMenu: \"Mostrar _MENU_ elementos\",\r\n      info: \"Mostrando desde _START_ al _END_ de _TOTAL_ elementos\",\r\n      infoEmpty: \"Mostrando ningún elemento.\",\r\n      infoFiltered: \"(filtrado _MAX_ elementos total)\",\r\n      infoPostFix: \"\",\r\n      loadingRecords: \"Cargando registros...\",\r\n      zeroRecords: \"No se encontraron registros\",\r\n      emptyTable: \"No hay datos disponibles en la tabla\",\r\n      paginate: {\r\n        first: \"Primero\",\r\n        previous: \"Anterior\",\r\n        next: \"Siguiente\",\r\n        last: \"Último\"\r\n      },\r\n      aria: {\r\n        sortAscending: \": Activar para ordenar la tabla en orden ascendente\",\r\n        sortDescending: \": Activar para ordenar la tabla en orden descendente\"\r\n      }\r\n    }\r\n\r\n  };;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  persona: any;\r\n  personas: any = [];\r\n  personaSeleccionada: any\r\n  vehiculoSeleccionado: any\r\n  vehiculoSeleccionadoaux: any\r\n  closeResult: string;\r\n  vehiculos: Observable<any[]>;\r\n  servicios: any[] = [];\r\n  ultimaOrden: Observable<any[]>;\r\n  numeroOrden: number = 0;\r\n  serviciosSeleccionados: any[];\r\n  observacion: String = ''\r\n\r\n  id: any\r\n  orden: Observable<any>;\r\n  serviciosRes: any;\r\n\r\n\r\n\r\n  ClienteForm = this.fb.group({\r\n    persona: [{}, Validators.required]\r\n  })\r\n\r\n  ServicioForm = this.fb.group({\r\n    servicio: [{}, Validators.required]\r\n  })\r\n\r\n  VehiculoForm = this.fb.group({\r\n    vehiculo: [{}, Validators.required]\r\n  })\r\n\r\n  constructor(\r\n    private personaService: PersonaService,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    public router: Router,\r\n    private vehiculoService: VehiculoService,\r\n    private servicioService: ServicioService,\r\n    private ordenService: OrdenService,\r\n    private route: ActivatedRoute,\r\n\r\n  ) {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.serviciosSeleccionados = []\r\n\r\n    if (this.id != 'nuevo') {\r\n\r\n      this.orden = this.ordenService.obtenerUnaOrden(this.id);\r\n      this.orden.subscribe(res => {\r\n        if (res.observacion) {\r\n          this.observacion = res.observacion\r\n        }\r\n        this.personaSeleccionada = { data: res.cliente };\r\n        this.vehiculoSeleccionado = { data: res.vehiculo }\r\n\r\n        this.serviciosRes = res.servicios\r\n        this.serviciosSeleccionados = []\r\n        this.serviciosRes.forEach(element => {\r\n\r\n          this.serviciosSeleccionados.push({ data: element })\r\n          this.numeroOrden = res.numero\r\n        });\r\n\r\n      })\r\n    } else {\r\n      this.ultimaOrden = this.ordenService.obtenerUltimaOrden();\r\n\r\n      this.ultimaOrden.subscribe(res => {\r\n        if (res[0]) {\r\n          this.numeroOrden = res[0].numero + 1\r\n        } else {\r\n\r\n          this.personaService.obtenerEmpresa().valueChanges().subscribe(res => {\r\n            this.numeroOrden = res.otInicio\r\n          })\r\n\r\n\r\n        }\r\n\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    this.vehiculos = this.vehiculoService.obtenerVehiculosActivos()\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.obtenerPersonas()\r\n    this.obtenerServicios()\r\n  }\r\n\r\n  obtenerPersonas() {\r\n    this.personaService.obtenerClientes().subscribe(personas => {\r\n      personas.forEach(persona => {\r\n        persona.data.nombreCedula = persona.data.cedula + \" - \" + persona.data.nombre\r\n      });\r\n\r\n      this.personas = personas\r\n\r\n    })\r\n  }\r\n\r\n  obtenerServicios() {\r\n    this.servicioService.obtenerServicios().subscribe(res => {\r\n      this.servicios = res\r\n      this.servicios.forEach(servicio => {\r\n        servicio.data.descripcionCod = servicio.data.codigo + \" - \"+servicio.data.descripcion\r\n\r\n      });\r\n    })\r\n  }\r\n\r\n  seleccionarPersona() {\r\n\r\n    this.personaSeleccionada = this.ClienteForm.value.persona\r\n    // this.VehiculoForm = this.fb.group({\r\n    //   vehiculo: [{}, Validators.required]\r\n    // })\r\n    // this.vehiculos = this.personaService.obtenerVehiculos(this.personaSeleccionada.id)\r\n  }\r\n\r\n  seleccionarServicio() {\r\n\r\n    $('#example-datatable').DataTable().destroy();\r\n    if (this.ServicioForm.value.servicio.data) {\r\n\r\n      this.ServicioForm.value.servicio.data.estado = 'CITA/RECEPCION'\r\n      this.ServicioForm.value.servicio.data.cantidad = 1\r\n      this.serviciosSeleccionados.push(this.ServicioForm.value.servicio)\r\n    }\r\n\r\n    this.dtTrigger.next();\r\n  }\r\n\r\n  modificarPosiciones(opcion: String, indice) {\r\n\r\n    $('#example-datatable').DataTable().destroy();\r\n\r\n    switch (opcion) {\r\n      case \"+\":\r\n\r\n        var actual = this.serviciosSeleccionados[indice]\r\n        var arriba = this.serviciosSeleccionados[indice - 1]\r\n\r\n        this.serviciosSeleccionados[indice] = arriba\r\n        this.serviciosSeleccionados[indice - 1] = actual\r\n\r\n        break;\r\n\r\n      case \"-\":\r\n\r\n        var actual = this.serviciosSeleccionados[indice]\r\n        var abajo = this.serviciosSeleccionados[indice + 1]\r\n\r\n        this.serviciosSeleccionados[indice] = abajo\r\n        this.serviciosSeleccionados[indice + 1] = actual\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.dtTrigger.next()\r\n  }\r\n\r\n  guardarOrden() {\r\n\r\n    if (!this.personaSeleccionada) {\r\n      swal('Existió un error!', 'Debe seleccionar un cliente', 'error')\r\n\r\n    } else if (!this.vehiculoSeleccionado) {\r\n      swal('Existió un error!', 'Debe seleccionar un vehículo', 'error')\r\n    } else if (this.serviciosSeleccionados.length <= 0) {\r\n      swal('Existió un error!', 'Debe seleccionar al menos un servicio', 'error')\r\n    } else {\r\n      if (this.id == 'nuevo') {\r\n\r\n        swal({\r\n          title: 'Está seguro?',\r\n          text: \"Está seguro que desea guardar la Orden de Trabajo\",\r\n          type: 'question',\r\n          showCancelButton: true,\r\n          cancelButtonText: 'Cancelar',\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Si, guardar!'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            var vehiculo = {\r\n              placa: this.vehiculoSeleccionado.data.placa,\r\n              marca: this.vehiculoSeleccionado.data.marca,\r\n              modelo: this.vehiculoSeleccionado.data.modelo,\r\n              color: this.vehiculoSeleccionado.data.color,\r\n              numeroMotor: this.vehiculoSeleccionado.data.numeroMotor,\r\n              numeroChasis: this.vehiculoSeleccionado.data.numeroChasis\r\n            }\r\n\r\n            var cliente = {\r\n              cedula: this.personaSeleccionada.data.cedula,\r\n              nombre: this.personaSeleccionada.data.nombre,\r\n              direccion: this.personaSeleccionada.data.direccion,\r\n              telefono: this.personaSeleccionada.data.telefono,\r\n              correo: this.personaSeleccionada.data.correo\r\n            }\r\n\r\n            var servicios = []\r\n\r\n            this.serviciosSeleccionados.forEach(servicio => {\r\n              if (!servicio.data.operador) {\r\n                servicio.data.operador = { id: '', data: {} }\r\n              }\r\n              servicios.push({ cantidad: servicio.data.cantidad, operador: servicio.data.operador, codigo: servicio.data.codigo, estado: servicio.data.estado, descripcion: servicio.data.descripcion, detalle: servicio.data.detalle, tiempoEstandar: servicio.data.tiempoEstandar })\r\n            });\r\n\r\n\r\n            var orden = {\r\n              numero: this.numeroOrden,\r\n              cliente: cliente,\r\n              vehiculo: vehiculo,\r\n              servicios: servicios,\r\n              fecha: new Date(),\r\n              observacion: this.observacion\r\n            }\r\n            const id = this.ordenService.crearOrden(orden, servicios)\r\n\r\n            this.reiniciar()\r\n            swal(\r\n              'Listo!',\r\n              'Orden de Trabajo creada exitosamente.',\r\n              'success'\r\n            )\r\n\r\n            this.router.navigate(['/orden/informacionorden/' + id]);\r\n\r\n\r\n\r\n\r\n\r\n          }\r\n        })\r\n\r\n\r\n\r\n      } else {\r\n\r\n\r\n        swal({\r\n          title: 'Está seguro?',\r\n          text: \"Está seguro que desea modificar la Orden de Trabajo\",\r\n          type: 'question',\r\n          showCancelButton: true,\r\n          cancelButtonText: 'Cancelar',\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Si, modificar!'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            var vehiculo = {\r\n              placa: this.vehiculoSeleccionado.data.placa,\r\n              marca: this.vehiculoSeleccionado.data.marca,\r\n              modelo: this.vehiculoSeleccionado.data.modelo,\r\n              color: this.vehiculoSeleccionado.data.color,\r\n              numeroMotor: this.vehiculoSeleccionado.data.numeroMotor,\r\n              numeroChasis: this.vehiculoSeleccionado.data.numeroChasis\r\n            }\r\n\r\n            var cliente = {\r\n              cedula: this.personaSeleccionada.data.cedula,\r\n              nombre: this.personaSeleccionada.data.nombre,\r\n              direccion: this.personaSeleccionada.data.direccion,\r\n              telefono: this.personaSeleccionada.data.telefono,\r\n              correo: this.personaSeleccionada.data.correo\r\n            }\r\n\r\n            var servicios = []\r\n\r\n\r\n\r\n            this.serviciosSeleccionados.forEach(servicio => {\r\n              if (!servicio.data.operador) {\r\n                servicio.data.operador = { id: '', data: {} }\r\n              }\r\n              servicios.push(servicio.data)\r\n            });\r\n\r\n\r\n            var orden = {\r\n              numero: this.numeroOrden,\r\n              cliente: cliente,\r\n              vehiculo: vehiculo,\r\n              servicios: servicios,\r\n              observacion: this.observacion\r\n            }\r\n            this.ordenService.modificarOrden(this.id, orden)\r\n\r\n            this.reiniciar()\r\n\r\n            swal(\r\n              'Listo!',\r\n              'Orden de Trabajo modificada exitosamente.',\r\n              'success'\r\n            )\r\n\r\n            this.router.navigate(['/orden/informacionorden/' + this.id]);\r\n\r\n\r\n\r\n\r\n          }\r\n        })\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  reiniciar() {\r\n    this.personaSeleccionada = null\r\n    this.vehiculoSeleccionado = null\r\n    this.serviciosSeleccionados = []\r\n\r\n    this.ClienteForm = this.fb.group({\r\n      persona: [{}, Validators.required]\r\n    })\r\n\r\n\r\n\r\n    this.VehiculoForm = this.fb.group({\r\n      vehiculo: [{}, Validators.required]\r\n    })\r\n  }\r\n\r\n  eliminarServicio(indice): void {\r\n\r\n\r\n\r\n    swal({\r\n      title: 'Esta seguro?',\r\n      text: \"Está seguro que desea eliminar el servicio seleccionado\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      cancelButtonText: 'Cancelar',\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, eliminar!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        $('#example-datatable').DataTable().destroy();\r\n        this.serviciosSeleccionados.splice(indice, 1)\r\n        swal(\r\n          'Listo!',\r\n          'Servicio eliminado correctamente',\r\n          'success'\r\n        )\r\n        this.dtTrigger.next()\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  seleccionarVehiculo() {\r\n    this.vehiculoSeleccionado = this.VehiculoForm.value.vehiculo\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\n  detalle-tarea works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-detalle-tarea',\n  templateUrl: './detalle-tarea.component.html',\n  styleUrls: ['./detalle-tarea.component.scss']\n})\nexport class DetalleTareaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Información Orden de trabajo'\\\" [pdf]=\\\"true\\\" (myEvent)=\\\"imprimirReporte($event)\\\" [nuevo]=\\\"'/orden/crearorden/nuevo'\\\"\\r\\n  [edicion]=\\\"'/orden/crearorden/'+id\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Información de la orden de trabajo\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <table class=\\\"table table-sm table-bordered\\\">\\r\\n\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <th>No. OT </th>\\r\\n                <td>\\r\\n                    OT-{{(orden | async)?.numero | anadirCeros:5}}\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n              <tr>\\r\\n                <th>Fecha OT </th>\\r\\n                <td>{{ (orden | async)?.fecha.seconds*1000 | date : 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              </tr>\\r\\n\\r\\n              <tr>\\r\\n                <th>ID Cliente</th>\\r\\n                <td>{{ (orden | async)?.cliente.cedula }}</td>\\r\\n              </tr>\\r\\n\\r\\n              <tr>\\r\\n                <th>Nombre cliente</th>\\r\\n                <td>{{ (orden | async)?.cliente.nombre }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Vehículo</th>\\r\\n                <td>{{ (orden | async)?.vehiculo.placa }} - {{ (orden | async)?.vehiculo.marca }} - {{ (orden | async)?.vehiculo.modelo\\r\\n                  }}\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <table class=\\\"table table-sm\\\">\\r\\n\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <th>Operaciones finalizadas </th>\\r\\n                <td>{{finalizadas}} de {{ servicios.length }}</td>\\r\\n              </tr>\\r\\n\\r\\n              <tr>\\r\\n                <th>Total Tiempo Estándar </th>\\r\\n                <td>{{tiempoEstandar | formatTime}}</td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Operaciones\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"btn-group\\\">\\r\\n            <div style=\\\"width: 20px; height: 20px;\\\" class=\\\"table-danger border\\\"></div>&nbsp;\\r\\n            <p>CITA/RECEPCIÓN</p>&nbsp;&nbsp;&nbsp;\\r\\n            <div style=\\\"width: 20px; height: 20px;\\\" class=\\\"table-warning  border\\\"></div>&nbsp;\\r\\n            <p>EN ESPERA</p>&nbsp;&nbsp;&nbsp;\\r\\n            <div style=\\\"width: 20px; height: 20px;\\\" class=\\\"table-primary\\\"></div>&nbsp;\\r\\n            <p>EN PRODUCCIÓN</p>&nbsp;&nbsp;\\r\\n            <div style=\\\"width: 20px; height: 20px;\\\" class=\\\"table-success\\\"></div>&nbsp;\\r\\n            <p>POR FACTURAR</p>&nbsp;&nbsp;\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n          <table class=\\\"table table-bordered table-responsive-sm table-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Acciones</th>\\r\\n                <th>Cantidad</th>\\r\\n                <th>Código</th>\\r\\n                <th>Servicio</th>\\r\\n\\r\\n                <th>Tiempo estándar</th>\\r\\n                <th>Estado</th>\\r\\n                <th>Operador asignado</th>\\r\\n\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let servicio of servicios let index = index\\\" [class.table-danger]=\\\"servicio.estado=='CITA/RECEPCION'\\\" [class.table-warning]=\\\"servicio.estado=='EN ESPERA DE PRODUCCIÓN'\\\"\\r\\n                [class.table-primary]=\\\"servicio.estado=='EN PRODUCCIÓN'\\\" [class.table-success]=\\\"servicio.estado=='POR FACTURAR'\\\"\\r\\n                [class.table-warning]=\\\"servicio.estado=='EN PRODUCCIÓN - PAUSADO' || servicio.estado=='EN ESPERA DE PRODUCCIÓN'\\\">\\r\\n                <td>\\r\\n\\r\\n                <!--   <div class=\\\"*ngIf=\\\"servicio.operador.data.correo == user.email\\\"\\\"></div> -->\\r\\n\\r\\n                  <div >\\r\\n                      <button *ngIf=\\\"servicio.estado=='EN ESPERA DE PRODUCCIÓN'\\\" (click)=\\\"iniciarServicio(index)\\\" class=\\\"btn btn-success btn-sm\\\"\\r\\n                      title=\\\"Iniciar\\\">\\r\\n                      <i class=\\\"fa fa-play\\\"></i>\\r\\n\\r\\n                    </button>\\r\\n\\r\\n                    <button *ngIf=\\\"servicio.estado=='EN PRODUCCIÓN'\\\" (click)=\\\"open(content, index)\\\" class=\\\"btn btn-warning btn-sm\\\" title=\\\"Pausar\\\">\\r\\n                      <i class=\\\"fa fa-pause\\\"></i>\\r\\n                    </button>\\r\\n\\r\\n                    <button *ngIf=\\\"servicio.estado=='EN PRODUCCIÓN'\\\" (click)=\\\"finalizarServicio(index)\\\" title=\\\"Detener\\\" class=\\\"btn btn-danger btn-sm\\\">\\r\\n                      <i class=\\\"fa fa-stop\\\"></i>\\r\\n                    </button>\\r\\n                    <button *ngIf=\\\"servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\" (click)=\\\"reanudarServicio(index)\\\" class=\\\"btn btn-success btn-sm text-white\\\"\\r\\n                      title=\\\"Reanudar\\\">\\r\\n                      <i class=\\\"fa fa-play\\\"></i>\\r\\n                    </button>\\r\\n\\r\\n                  </div>\\r\\n                 \\r\\n                  <button *ngIf=\\\"servicio.estado=='POR FACTURAR'\\\" (click)=\\\"open2(content2, index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                    <i class=\\\"fa fa-eye\\\"></i>\\r\\n                  </button>\\r\\n                </td>\\r\\n                <td>{{servicio.cantidad}}</td>\\r\\n                <td>{{servicio.codigo}}</td>\\r\\n                <td>{{servicio.descripcion}}</td>\\r\\n\\r\\n                <td>{{servicio.tiempoEstandar*60*servicio.cantidad | formatTime}}</td>\\r\\n                <td>\\r\\n                  {{servicio.estado}}\\r\\n                  <p *ngIf=\\\"servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\"> <strong>Motivo: </strong>{{servicio.motivoPausa}}</p>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <p *ngIf=\\\"servicio.operador\\\">{{servicio.operador.data.nombre}}</p>\\r\\n                </td>\\r\\n\\r\\n\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n\\r\\n          <hr>\\r\\n      <label for=\\\"txtObservacion\\\">Observación</label>\\r\\n      <textarea disabled [(ngModel)]=\\\"observacion\\\" id=\\\"txtObservacion\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"2\\\"></textarea>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h5>Pausar operación</h5>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p><strong>Servicio: </strong>{{servicioSeleccionado.descripcion}}</p>\\r\\n      <p><strong>Motivo pausa:</strong>\\r\\n        <select [(ngModel)]=\\\"pausa.motivo\\\">\\r\\n          <option value=\\\"\\\">Seleccionar un motivo...</option>\\r\\n          <option value=\\\"FALTA DE AUTORIZACIÓN\\\">FALTA DE AUTORIZACIÓN</option>\\r\\n          <option value=\\\"FALTA DE REPUESTOS\\\">FALTA DE REPUESTOS</option>\\r\\n          <option value=\\\"TRABAJOS DE TERCEROS\\\">TRABAJOS DE TERCEROS</option>\\r\\n          <option value=\\\"OTRO TRABAJO\\\">OTRO TRABAJO</option>\\r\\n          <option value=\\\"BREAK\\\">BREAK</option>\\r\\n          <option value=\\\"ALMUERZO\\\">ALMUERZO</option>\\r\\n          <option value=\\\"FINALIZACIÓN DE JORNADA LABORAL\\\">FINALIZACIÓN DE JORNADA LABORAL</option>\\r\\n        </select></p>\\r\\n\\r\\n      <p><strong>Observación:</strong> <input [(ngModel)]=\\\"pausa.observacion\\\" type=\\\"text\\\"></p>\\r\\n      <p><button [disabled]=\\\"pausa.motivo==''\\\" class=\\\"btn btn-primary\\\" (click)=\\\"pausar(); c('Close click')\\\">Guardar</button></p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cerrar</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h5>Detalle de la operación</h5>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">información</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <table class=\\\"table table-bordered table-sm\\\">\\r\\n                <tr>\\r\\n                  <th>Servicio:</th>\\r\\n                  <td>{{servicioSeleccionado.descripcion}}</td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <th>Operador:</th>\\r\\n                  <td>{{servicioSeleccionado.operador.data.nombre}}</td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <th>Hora Inicio </th>\\r\\n                  <td>{{ servicioSeleccionado.horaInicio.seconds*1000 | date : 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Hora Fin </th>\\r\\n                  <td>{{ servicioSeleccionado.horaFin.seconds*1000 | date : 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                </tr>\\r\\n\\r\\n              </table>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <table class=\\\"table table-bordered table-sm\\\">\\r\\n\\r\\n                <tr>\\r\\n                  <th>Tiempo estándar</th>\\r\\n                  <td>{{ servicioSeleccionado.estadisticas.tiempoEstandar | formatTime}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>LeadTime</th>\\r\\n                  <td>{{ servicioSeleccionado.estadisticas.leadTime | formatTime}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Pausas</th>\\r\\n                  <td>{{ servicioSeleccionado.estadisticas.pausas | formatTime}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Tiempo real</th>\\r\\n                  <td>{{ servicioSeleccionado.estadisticas.tiempoReal | formatTime}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Eficiencia</th>\\r\\n                  <td>{{ servicioSeleccionado.estadisticas.eficiencia }}%</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Pausas\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Hora inicio</th>\\r\\n                <th>Hora fin</th>\\r\\n                <th>Motivo</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let pausa of servicioSeleccionado.pausas\\\">\\r\\n                <td>{{ pausa.horaInicio.seconds*1000 | date : 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                <td>{{ pausa.horaFin.seconds*1000 | date : 'dd/MM/yyyy HH:mm' }}</td>\\r\\n                <td>{{pausa.motivo.motivo}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cerrar</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrdenService } from '../../../../servicios/orden/orden.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { routerTransition } from '../../../../router.animations';\r\n\r\nimport * as moment from 'moment';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\nimport swal from 'sweetalert2'\r\nimport { PersonaService } from '../../../../servicios/persona.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-detalle-orden',\r\n  templateUrl: './detalle-orden.component.html',\r\n  styleUrls: ['./detalle-orden.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class DetalleOrdenComponent implements OnInit {\r\n\r\n  id: any\r\n  orden: Observable<any>;\r\n  tiempoEstandar: number = 0;\r\n  tiempoEstandarFor: any;\r\n  user:any=''\r\n  tiempoReal: number = 0;\r\n  tiempoRealFor: any;\r\n  observacion: String = ''\r\n\r\n  finalizadas: number = 0\r\n  servicios: any;\r\n  newIndex: any\r\n  closeResult: string;\r\n  pausa = {\r\n    motivo: '',\r\n    observacion: ''\r\n  }\r\n\r\n  servicioSeleccionado: any\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    private ordenService: OrdenService,\r\n    private personaService: PersonaService,\r\n    private db: AngularFirestore) {\r\n\r\n    this.servicios = []\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.orden = this.ordenService.obtenerUnaOrden(this.id);\r\n    this.orden.subscribe(res => {\r\n      if(res.observacion){\r\n        this.observacion = res.observacion\r\n        \r\n      }\r\n      this.servicios = res.servicios\r\n      this.tiempoEstandar = 0\r\n      this.finalizadas = 0\r\n      this.tiempoReal = 0\r\n      this.servicios.forEach(element => {\r\n\r\n        this.tiempoEstandar+= element.tiempoEstandar*element.cantidad*60\r\n        if(element.estado==\"POR FACTURAR\"){\r\n          \r\n          this.finalizadas++;\r\n        }\r\n\r\n       \r\n\r\n      });\r\n\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.personaService.obtenerUsuario().subscribe(res=>{\r\n    this.user = res\r\n    })\r\n  }\r\n\r\n  iniciarServicio(index) {\r\n\r\n    swal({\r\n      title: 'Está seguro?',\r\n      text: \"Desea inicia la operación seleccionada!\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonText: 'Cancelar',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, iniciar!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.servicios[index].estado = 'EN PRODUCCIÓN'\r\n        this.servicios[index].horaInicio = new Date()\r\n        this.ordenService.modificarServicio(this.id, { servicios: this.servicios })\r\n          .then(res => {\r\n            swal(\r\n              'Listo!',\r\n              'La operación ha sido iniciada',\r\n              'success'\r\n            )\r\n          })\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  calcularEstadisticas(index) {\r\n \r\n\r\n\r\n    //tiempo estandar\r\n    const tiempoEstandar = moment.utc((this.servicios[index].tiempoEstandar * 60) * 1000).format('HH:mm:ss');\r\n    const tiempoEstandarSec = (this.servicios[index].tiempoEstandar * 60) * this.servicios[index].cantidad\r\n\r\n\r\n    //leadtim\r\n    var fecha1 = moment(this.servicios[index].horaInicio.seconds, 'X');\r\n    var fecha2 = moment(this.servicios[index].horaFin.seconds, 'X');\r\n    var diff = fecha2.diff(fecha1, 's');\r\n    var lead = fecha2.diff(fecha1, 's')\r\n    const leadTime = moment.utc(diff * 1000).format('HH:mm:ss');\r\n\r\n    //pausas\r\n\r\n    var pausas = 0\r\n\r\n    if (this.servicios[index].pausas) {\r\n      this.servicios[index].pausas.forEach(pausa => {\r\n        var fecha1 = moment(pausa.horaInicio.seconds, 'X');\r\n        var fecha2 = moment(pausa.horaFin.seconds, 'X');\r\n        var diff2 = fecha2.diff(fecha1, 's');\r\n        pausas += diff2\r\n      });\r\n    } \r\n\r\n\r\n\r\n    //tiempo real\r\n    const real = lead - pausas\r\n    var tiempoReal = moment.utc(real * 1000).format('HH:mm:ss');\r\n\r\n   \r\n    const eficiencia = (((tiempoEstandarSec) / real) * 100).toFixed(2)\r\n\r\n\r\n\r\n    return {\r\n      eficiencia: eficiencia,\r\n      tiempoReal: real,\r\n      pausas: pausas,\r\n      leadTime: lead,\r\n      tiempoEstandar: tiempoEstandarSec\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  finalizarServicio(index) {\r\n\r\n    swal({\r\n      title: 'Está seguro?',\r\n      text: \"Desea finalizar la operación seleccionada?\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonText: 'Cancelar',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, finalizar!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.servicios[index].estado = 'POR FACTURAR'\r\n      this.servicios[index].horaFin = new Date()\r\n      this.ordenService.modificarServicio(this.id, { servicios: this.servicios }).then(res => {\r\n\r\n        this.servicios[index].estadisticas = this.calcularEstadisticas(index)\r\n        this.ordenService.modificarServicio(this.id, { servicios: this.servicios }).then(res=>{\r\n          swal(\r\n            'Listo!',\r\n            'La operación ha sido finalizada',\r\n            'success'\r\n          )\r\n        })\r\n        \r\n      })\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  open(content, index) {\r\n    this.servicioSeleccionado = this.servicios[index]\r\n    // const leadTime = moment.utc(diff * 1000).format('HH:mm:ss');\r\n    this.newIndex = index\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n\r\n    });\r\n  }\r\n\r\n  open2(content, index) {\r\n    this.servicioSeleccionado = this.servicios[index]\r\n\r\n    this.newIndex = index\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n\r\n    });\r\n  }\r\n\r\n  pausar() {\r\n    const id = this.db.createId()\r\n    if (!this.servicios[this.newIndex].pausas) {\r\n      this.servicios[this.newIndex].pausas = []\r\n    }\r\n    swal({\r\n      title: 'Está seguro?',\r\n      text: \"Desea pausar la operación seleccionada!\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonText: 'Cancelar',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, pausar!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n\r\n        this.servicios[this.newIndex].estado = 'EN PRODUCCIÓN - PAUSADO'\r\n        this.servicios[this.newIndex].pausaActual = id\r\n        this.servicios[this.newIndex].motivoPausa = this.pausa.motivo\r\n        this.servicios[this.newIndex].pausas.push({ horaInicio: new Date(), motivo: this.pausa, id: id })\r\n        this.ordenService.modificarServicio(this.id, { servicios: this.servicios })\r\n          .then(res => {\r\n            swal(\r\n              'Listo!',\r\n              'La operación ha sido pausada',\r\n              'success'\r\n            )\r\n          })\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  reanudarServicio(indice) {\r\n\r\n\r\n    swal({\r\n      title: 'Está seguro?',\r\n      text: \"Desea reanudar la operación seleccionada?\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonText: 'Cancelar',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, reanudar!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n\r\n        this.servicios[indice].estado = 'EN PRODUCCIÓN'\r\n        this.servicios[indice].pausas.forEach(pausa => {\r\n          if (pausa.id == this.servicios[indice].pausaActual) {\r\n            pausa.horaFin = new Date()\r\n          }\r\n        });\r\n        this.ordenService.modificarServicio(this.id, { servicios: this.servicios }).then(res => {\r\n          swal(\r\n            'Listo!',\r\n            'La operación ha sido reanudada',\r\n            'success'\r\n          )\r\n        })\r\n\r\n\r\n      }\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Información Orden de trabajo'\\\" [pdf]=\\\"true\\\" (myEvent)=\\\"imprimirReporte($event)\\\" [nuevo]=\\\"'/orden/crearorden/nuevo'\\\"\\r\\n  [edicion]=\\\"'/orden/crearorden/'+id\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Información de la orden de trabajo\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <table class=\\\"table table-sm table-bordered\\\" >\\r\\n\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <th>Número </th>\\r\\n                <td>OT-{{(orden | async)?.numero | anadirCeros:5}}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Fecha OT </th>\\r\\n                <td>{{ (orden | async)?.fecha.seconds*1000 | date : 'dd/MM/yyyy HH:mm' }}</td>\\r\\n              </tr>\\r\\n\\r\\n              <tr>\\r\\n                <th>ID Cliente</th>\\r\\n                <td>{{ (orden | async)?.cliente.cedula }}</td>\\r\\n              </tr>\\r\\n\\r\\n              <tr>\\r\\n                <th>Nombre Cliente</th>\\r\\n                <td>{{ (orden | async)?.cliente.nombre }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>ID/Placa</th>\\r\\n                <td>{{ (orden | async)?.vehiculo.placa }}\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Asignación de operadores\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <table class=\\\"table  table-responsive-sm\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th></th>\\r\\n            <th>Operador asignado</th>\\r\\n            <th>Cantidad</th>\\r\\n            <th>Código</th>\\r\\n            <th>Servicio</th>\\r\\n            <th>Tiempo estándar</th>\\r\\n            <th>Estado</th>\\r\\n          \\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let servicio of servicios let index = index\\\">\\r\\n            <td>\\r\\n              <button [disabled]=\\\"servicio.estado=='POR FACTURAR'|| servicio.estado=='EN PRODUCCIÓN' || servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\" title=\\\"Guardar cambios\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"seleccionarPersona(servicio, index)\\\"><i class=\\\"fa fa-floppy-o \\\"></i></button>\\r\\n            </td>\\r\\n            <td>\\r\\n\\r\\n              <div class=\\\"\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <ng-select [disabled]=\\\"servicio.estado=='POR FACTURAR'|| servicio.estado=='EN PRODUCCIÓN' || servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\"  class=\\\"form-control\\\" style=\\\"font-size: 14px\\\" [(ngModel)]=\\\"servicio.operador\\\" autofocus style=\\\"width: 230px;\\\" class=\\\"form-control\\\"\\r\\n                    [items]=\\\"personas | async\\\" bindLabel=\\\"data.nombre\\\">\\r\\n                  </ng-select>\\r\\n\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </td>\\r\\n            <td>{{servicio.cantidad}}</td>\\r\\n            <td>{{servicio.codigo}}</td>\\r\\n            <td>{{servicio.descripcion}}</td>\\r\\n            <td>{{servicio.tiempoEstandar*servicio.cantidad*60 | formatTime}}</td>\\r\\n            <td>{{servicio.estado}}</td>\\r\\n           \\r\\n\\r\\n          </tr>\\r\\n\\r\\n\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <hr>\\r\\n      <label for=\\\"txtObservacion\\\">Observación</label>\\r\\n      <textarea disabled [(ngModel)]=\\\"observacion\\\" id=\\\"txtObservacion\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"2\\\"></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { Observable, Subject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdenService } from '../../../servicios/orden/orden.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { PersonaService } from '../../../servicios/persona.service';\nimport swal from 'sweetalert2'\nimport * as moment from 'moment';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ReporteService } from '../../../servicios/reporte/reporte.service';\n\n@Component({\n  selector: 'app-informacion-orden',\n  templateUrl: './informacion-orden.component.html',\n  styleUrls: ['./informacion-orden.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class InformacionOrdenComponent implements OnInit {\n\n  @ViewChild(DataTableDirective)\n  dtElement: DataTableDirective;\n\n  dtOptions: DataTables.Settings = this.dtOptions = {\n    pagingType: 'full_numbers',\n    pageLength: 10,\n    autoWidth: true,\n    language: {\n      processing: \"Procesando...\",\n      search: \"Buscar:\",\n      lengthMenu: \"Mostrar _MENU_ elementos\",\n      info: \"Mostrando desde _START_ al _END_ de _TOTAL_ elementos\",\n      infoEmpty: \"Mostrando ningún elemento.\",\n      infoFiltered: \"(filtrado _MAX_ elementos total)\",\n      infoPostFix: \"\",\n      loadingRecords: \"Cargando registros...\",\n      zeroRecords: \"No se encontraron registros\",\n      emptyTable: \"No hay datos disponibles en la tabla\",\n      paginate: {\n        first: \"Primero\",\n        previous: \"Anterior\",\n        next: \"Siguiente\",\n        last: \"Último\"\n      },\n      aria: {\n        sortAscending: \": Activar para ordenar la tabla en orden ascendente\",\n        sortDescending: \": Activar para ordenar la tabla en orden descendente\"\n      }\n    }\n\n  };;\n  dtTrigger: Subject<any> = new Subject();\n\n  id: any\n  orden: any;\n  ordenReporte: any = []\n  servicios: any;\n  serviciosOperaciones: any;\n  newIndex: any\n  servicioSeleccionado: any\n  closeResult: string;\n  observacion: String = ''\n\n  pausa = {\n    motivo: '',\n    observacion: ''\n  }\n\n  personas: Observable<any[]>;\n\n  PersonaForm = this.fb.group({\n    persona: [{}, Validators.required]\n  })\n\n  constructor(\n    private route: ActivatedRoute,\n    private db: AngularFirestore,\n    private ordenService: OrdenService,\n    private fb: FormBuilder,\n    private personaService: PersonaService,\n    private modalService: NgbModal,\n    private reporteService: ReporteService\n  ) {\n    this.servicios = []\n    this.serviciosOperaciones = []\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.orden = this.ordenService.obtenerUnaOrden(this.id);\n    this.orden.subscribe(res => {\n      if(res.observacion){\n        this.observacion = res.observacion\n      }\n      this.ordenReporte = res\n  \n      $('#example-datatable').DataTable().destroy();\n      this.servicios = res.servicios\n      this.serviciosOperaciones = res.servicios\n      this.dtTrigger.next()\n    })\n    this.personas = this.personaService.obtenerUsuarios();\n\n\n  }\n\n  imprimirReporte() {\n    this.reporteService.reporteCliente(this.ordenReporte)\n  }\n\n  open(content, index) {\n    this.servicioSeleccionado = this.servicios[index]\n    // const leadTime = moment.utc(diff * 1000).format('HH:mm:ss');\n    this.newIndex = index\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n\n    });\n  }\n\n  open2(content, index) {\n    this.servicioSeleccionado = this.servicios[index]\n\n    this.newIndex = index\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n\n    });\n  }\n\n  seleccionarPersona(servicio, index) {\n\n\n    if (servicio.operador.id == \"\") {\n      swal('Existió un error', 'Debe seleccionar un operador', 'error')\n    } else {\n      swal({\n        title: 'Está seguro?',\n        text: \"Desea asignar al operador: \" + servicio.operador.data.nombre + \" al servicio: \" + servicio.descripcion,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        cancelButtonText: 'Cancelar',\n        confirmButtonText: 'Si, asignar!'\n      }).then((result) => {\n        if (result.value) {\n          $('#example-datatable').DataTable().destroy();\n\n          this.servicios[index].operador = servicio.operador\n          this.servicios[index].estado = 'EN ESPERA DE PRODUCCIÓN'\n          this.ordenService.modificarServicio(this.id, { servicios: this.servicios, estado: 'EN ESPERA DE PRODUCCIÓN' })\n          .then(res=>{\n            this.dtTrigger.next()\n            swal(\n              'Listo!',\n              'El operador ha sido asignado correctamente.',\n              'success'\n            )\n          })\n          \n        }\n      })\n    }\n  }\n\n  reanudarServicio(indice) {\n    swal({\n      title: 'Está seguro?',\n      text: \"Desea reanudar la operación seleccionada?\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonText: 'Cancelar',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, reanudar!'\n    }).then((result) => {\n      if (result.value) {\n\n        this.servicios[indice].estado = 'EN PRODUCCIÓN'\n        this.servicios[indice].pausas.forEach(pausa => {\n          if (pausa.id == this.servicios[indice].pausaActual) {\n            pausa.horaFin = new Date()\n          }\n        });\n        this.ordenService.modificarServicio(this.id, { servicios: this.servicios }).then(res => {\n          swal(\n            'Listo!',\n            'La operación ha sido reanudada',\n            'success'\n          )\n        })\n      }\n    })\n  }\n\n  calcularEstadisticas(index) {\n  \n\n    //tiempo estandar\n    const tiempoEstandar = moment.utc((this.servicios[index].tiempoEstandar * 60) * 1000).format('HH:mm:ss');\n    const tiempoEstandarSec = (this.servicios[index].tiempoEstandar * 60) * this.servicios[index].cantidad\n\n\n    //leadtim\n    var fecha1 = moment(this.servicios[index].horaInicio.seconds, 'X');\n    var fecha2 = moment(this.servicios[index].horaFin.seconds, 'X');\n    var diff = fecha2.diff(fecha1, 's');\n    var lead = fecha2.diff(fecha1, 's')\n    const leadTime = moment.utc(diff * 1000).format('HH:mm:ss');\n\n    //pausas\n\n    var pausas = 0\n\n    if (this.servicios[index].pausas) {\n      this.servicios[index].pausas.forEach(pausa => {\n        var fecha1 = moment(pausa.horaInicio.seconds, 'X');\n        var fecha2 = moment(pausa.horaFin.seconds, 'X');\n        var diff2 = fecha2.diff(fecha1, 's');\n        pausas += diff2\n      });\n    } \n\n\n\n    //tiempo real\n    const real = lead - pausas\n    var tiempoReal = moment.utc(real * 1000).format('HH:mm:ss');\n\n\n    const eficiencia = (((tiempoEstandarSec) / real) * 100).toFixed(2)\n\n\n    return {\n      eficiencia: eficiencia,\n      tiempoReal: real,\n      pausas: pausas,\n      leadTime: lead,\n      tiempoEstandar: tiempoEstandarSec\n    }\n\n  }\n\n\n  iniciarServicio(index) {\n\n    swal({\n      title: 'Está seguro?',\n      text: \"Desea inicia la operación seleccionada!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonText: 'Cancelar',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, iniciar!'\n    }).then((result) => {\n      if (result.value) {\n        this.servicios[index].estado = 'EN PRODUCCIÓN'\n        this.servicios[index].horaInicio = new Date()\n        this.ordenService.modificarServicio(this.id, { servicios: this.servicios })\n          .then(res => {\n            swal(\n              'Listo!',\n              'La operación ha sido iniciada',\n              'success'\n            )\n          })\n\n      }\n    })\n\n  }\n\n  pausar() {\n    const id = this.db.createId()\n    if (!this.servicios[this.newIndex].pausas) {\n      this.servicios[this.newIndex].pausas = []\n    }\n    swal({\n      title: 'Está seguro?',\n      text: \"Desea pausar la operación seleccionada!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonText: 'Cancelar',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, pausar!'\n    }).then((result) => {\n      if (result.value) {\n\n        this.servicios[this.newIndex].estado = 'EN PRODUCCIÓN - PAUSADO'\n        this.servicios[this.newIndex].pausaActual = id\n        this.servicios[this.newIndex].motivoPausa = this.pausa.motivo\n        this.servicios[this.newIndex].pausas.push({ horaInicio: new Date(), motivo: this.pausa, id: id })\n        this.ordenService.modificarServicio(this.id, { servicios: this.servicios })\n          .then(res => {\n            swal(\n              'Listo!',\n              'La operación ha sido pausada',\n              'success'\n            )\n          })\n\n      }\n    })\n\n\n  }\n\n\n  finalizarServicio(index) {\n\n    swal({\n      title: 'Está seguro?',\n      text: \"Desea finalizar la operación seleccionada?\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonText: 'Cancelar',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, finalizar!'\n    }).then((result) => {\n      if (result.value) {\n        this.servicios[index].estado = 'POR FACTURAR'\n      this.servicios[index].horaFin = new Date()\n      this.ordenService.modificarServicio(this.id, { servicios: this.servicios }).then(res => {\n\n        this.servicios[index].estadisticas = this.calcularEstadisticas(index)\n        this.ordenService.modificarServicio(this.id, { servicios: this.servicios }).then(res=>{\n          swal(\n            'Listo!',\n            'La operación ha sido finalizada',\n            'success'\n          )\n        })\n        \n      })\n\n      }\n    })\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Operaciones'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\n\\n\\n      <div class=\\\"card mb-4\\\">\\n        <div class=\\\"card-header\\\">Ordenes de trabajo</div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"card\\\">\\n\\n              <div class=\\\"card-body\\\">\\n                <p><strong>Estado</strong></p>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\" class=\\\"table-success\\\" style=\\\"width: 15px\\\"></div>\\n                  <div class=\\\"col\\\">POR FACTURAR</div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\" class=\\\"table-warning\\\" style=\\\"width: 15px\\\"></div>\\n                  <div class=\\\"col\\\">EN PRODUCCIÓN</div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\" class=\\\"table-danger\\\" style=\\\"width: 15px\\\"></div>\\n                  <div class=\\\"col\\\">CITA/RECEPCIÓN-EN ESPERA</div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n\\n        </div>\\n        <div class=\\\"card-body table-responsive\\\">\\n\\n          <table class=\\\"table table-bordered table-sm table-responsive-sm\\\">\\n            <thead>\\n\\n              <tr>\\n\\n                <th>Cliente</th>\\n                <th>Vehículo</th>\\n                <th>Servicio</th>\\n                <th>T. estandar</th>\\n                <th>Estado</th>\\n     \\n\\n\\n\\n\\n              </tr>\\n            </thead>\\n            <tbody>\\n\\n\\n              <ng-container *ngFor=\\\"let servicio of tareas\\\">\\n                <tr *ngIf=\\\"servicio.servicio.operador.data.usuario == usuarioid\\\" [class.table-warning]=\\\"servicio.servicio.estado=='EN PRODUCCIÓN' || servicio.servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\"\\n                  [class.table-danger]=\\\"servicio.servicio.estado=='CITA/RECEPCION' || servicio.servicio.estado=='EN ESPERA DE PRODUCCIÓN'\\\"\\n                  [class.table-success]=\\\"servicio.servicio.estado=='POR FACTURAR'\\\">\\n\\n                  <td>\\n                    {{servicio.cliente.nombre}}\\n                  </td>\\n                  <td>\\n                    {{servicio.vehiculo.placa}} - {{servicio.vehiculo.marca}} - {{servicio.vehiculo.modelo}}\\n                  </td>\\n                  <td>\\n                    {{servicio.servicio.descripcion}}\\n                  </td>\\n                  <td>\\n                    {{servicio.servicio.tiempoEstandar}} minutos\\n                  </td>\\n                  <td>\\n                    {{servicio.servicio.estado}}\\n                    <div *ngIf=\\\"servicio.servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\">\\n\\n                      <p><strong>Motivo: </strong>{{servicio.servicio.motivo}}</p>\\n                    </div>\\n\\n                  </td>\\n\\n                \\n\\n\\n                </tr>\\n              </ng-container>\\n\\n\\n\\n            </tbody>\\n          </table>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n\\n\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { routerTransition } from '../../../router.animations';\nimport { Observable } from 'rxjs';\nimport { OrdenService } from '../../../servicios/orden/orden.service';\n\n@Component({\n  selector: 'app-mis-ordenes',\n  templateUrl: './mis-ordenes.component.html',\n  styleUrls: ['./mis-ordenes.component.scss'],\n  animations: [routerTransition()]\n})\nexport class MisOrdenesComponent implements OnInit {\n\n  ordenes: Observable<any[]>;\n  tareas: any\n  usuarioid:any\n\n  constructor(private afAuth: AngularFireAuth, private ordenService: OrdenService) {\n    this.usuarioid=''\n   }\n\n  ngOnInit() {\n    this.obtenerOrdenes()\n    this.afAuth.user.subscribe(res=>{\n      this.usuarioid = res.uid\n    })\n    \n  }\n\n  obtenerOrdenes() {\n    this.ordenes = this.ordenService.obtenerOrdenes();\n\n    this.ordenes.subscribe(res => {\n      this.tareas = []\n      res.forEach(element => {\n        element.data.servicios.forEach(servicio => {\n\n\n          if (!servicio.operador) {\n            servicio.operador = { data: { nombre: '' } }\n          }\n\n          const motivo = ''\n          if (servicio.pausas) {\n            servicio.pausas.forEach(pausa => {\n              if (pausa.id == servicio.pausaActual) {\n                servicio.motivo = pausa.motivo.motivo\n              }\n            });\n          }\n\n\n          this.tareas.push({ cliente: element.data.cliente, servicio: servicio, vehiculo: element.data.vehiculo })\n\n\n        });\n \n\n      });\n    })\n\n  }\n\n}\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Ordenes de trabajo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">Ordenes de trabajo</div>\\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n          <table class=\\\"table\\\" datatable id=\\\"example-datatable\\\" [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th></th>\\r\\n                <th>No. OT</th>\\r\\n                <th>Fecha OT</th>\\r\\n                <th>Hora</th>\\r\\n                <th>ID Cliente</th>\\r\\n                <th>Nombre del cliente</th>\\r\\n                <th>Vehículo</th>\\r\\n               \\r\\n\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let orden of ordenes | async\\\">\\r\\n                  <td>\\r\\n                      <div class=\\\"btn-group\\\">\\r\\n                        <a href=\\\"/vehiculo/crearvehiculo/{{orden.id}}\\\" class=\\\"btn btn-primary btn-sm disabled\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                        <button disabled class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"eliminarVehiculo(orden)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\r\\n                      </div>\\r\\n    \\r\\n                    </td>\\r\\n                <td><a href=\\\"/orden/detalleorden/{{orden.id}}\\\">OT-{{orden.data.numero | anadirCeros:5}}</a> </td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'dd/MM/yyyy'}}</td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'HH:mm'}}</td>\\r\\n                <td>{{orden.data.cliente.cedula}}</td>\\r\\n                <td>{{orden.data.cliente.nombre}}</td>\\r\\n\\r\\n                <td>\\r\\n                  {{orden.data.vehiculo.placa}} - {{orden.data.vehiculo.marca}} - {{orden.data.vehiculo.modelo}}\\r\\n\\r\\n                </td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { OrdenService } from '../../../servicios/orden/orden.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n  selector: 'app-operacion',\r\n  templateUrl: './operacion.component.html',\r\n  styleUrls: ['./operacion.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class OperacionComponent implements OnInit {\r\n  @ViewChild(DataTableDirective)\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings= this.dtOptions = {\r\n    pagingType: 'full_numbers',\r\n    pageLength: 25,\r\n    autoWidth: true,\r\n    language: {\r\n      processing: \"Procesando...\",\r\n      search: \"Buscar:\",\r\n      lengthMenu: \"Mostrar _MENU_ elementos\",\r\n      info: \"Mostrando desde _START_ al _END_ de _TOTAL_ elementos\",\r\n      infoEmpty: \"Mostrando ningún elemento.\",\r\n      infoFiltered: \"(filtrado _MAX_ elementos total)\",\r\n      infoPostFix: \"\",\r\n      loadingRecords: \"Cargando registros...\",\r\n      zeroRecords: \"No se encontraron registros\",\r\n      emptyTable: \"No hay datos disponibles en la tabla\",\r\n      paginate: {\r\n        first: \"Primero\",\r\n        previous: \"Anterior\",\r\n        next: \"Siguiente\",\r\n        last: \"Último\"\r\n      },\r\n      aria: {\r\n        sortAscending: \": Activar para ordenar la tabla en orden ascendente\",\r\n        sortDescending: \": Activar para ordenar la tabla en orden descendente\"\r\n      }\r\n    }\r\n\r\n  };;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  ordenes: Observable<any[]>;\r\n\r\n\r\n  constructor(private ordenService: OrdenService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.obtenerOrdenes()\r\n  }\r\n\r\n  obtenerOrdenes() {\r\n    \r\n    this.ordenes =this.ordenService.obtenerOrdenes();\r\n\r\n    this.ordenes.subscribe(res=>{\r\n      $('#example-datatable').DataTable().destroy();\r\n      this.dtTrigger.next();\r\n    })\r\n  \r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\n  orden-trabajo works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-orden-trabajo',\n  templateUrl: './orden-trabajo.component.html',\n  styleUrls: ['./orden-trabajo.component.scss']\n})\nexport class OrdenTrabajoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { CrearOrdenComponent } from './crear-orden/crear-orden.component';\r\nimport { ConsultarOrdenComponent } from './consultar-orden/consultar-orden.component';\r\nimport { InformacionOrdenComponent } from './informacion-orden/informacion-orden.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap'\r\nimport { PersonaModule } from '../persona/persona.module';\r\nimport { VehiculoModule } from '../vehiculo/vehiculo.module';\r\nimport { ServicioModule } from '../servicio/servicio.module';\r\nimport { OperacionComponent } from './operacion/operacion.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { OrdenTrabajoComponent } from './orden-trabajo.component';\r\nimport { MisOrdenesComponent } from './mis-ordenes/mis-ordenes.component';\r\nimport { DetalleOrdenComponent } from './detalleOrden/detalle-orden/detalle-orden.component';\r\nimport { DetalleTareaComponent } from './detalle-tarea/detalle-tarea.component';\r\nimport { FormatTimePipe } from '../../pipes/format-time.pipe';\r\nimport { AnadirCerosPipe } from '../../pipes/anadir-ceros.pipe';\nimport { ConfiguracionComponent } from './configuracion/configuracion.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    PageHeaderModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbModule.forRoot(),\r\n    PersonaModule,\r\n    VehiculoModule,\r\n    ServicioModule,\r\n    DataTablesModule,\r\n    ServicioModule\r\n  ],\r\n  exports:[AnadirCerosPipe,FormatTimePipe],\r\n  declarations: [CrearOrdenComponent, ConsultarOrdenComponent, InformacionOrdenComponent, OperacionComponent, OrdenTrabajoComponent, MisOrdenesComponent, DetalleOrdenComponent, DetalleTareaComponent, AnadirCerosPipe, ConfiguracionComponent]\r\n})\r\nexport class OrdenTrabajoModule { }\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdenService {\n\n  private empresa: AngularFirestoreDocument;\n  private orden: AngularFirestoreDocument;\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.empresa = this.afs.doc(localStorage.getItem('empresa'));\n  }\n\n  crearOrden(orden, servicios: any) {\n    const id = this.afs.createId();\n    this.empresa.collection('ordenes').doc(id).set(orden)\n    return id\n  }\n\n  modificarOrden(id, orden) {\n    this.empresa.collection('ordenes').doc(id).update(orden)\n    return id\n  }\n\n  eliminarOrden(id) {\n    return this.empresa.collection('ordenes').doc(id).delete()\n    \n  }\n\n  agregarDetalle(){\n    \n  }\n\n\n  obtenerOrdenesPorFecha(campo, valor){\n    this.empresa = this.afs.doc(localStorage.getItem('empresa'));\n    return this.empresa.collection('ordenes', query=>query.where(campo,'==',valor))\n  }\n\n  obtenerOrdenesFecha(inicio, fin) {\n    this.empresa = this.afs.doc(localStorage.getItem('empresa'));\n    return this.empresa.collection('ordenes', query=> query.where('fecha','>=',inicio).where('fecha','<=',fin).orderBy('fecha', 'desc')).snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n   \n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, data };\n      }))\n    );\n  }\n\n  obtenerOrdenes() {\n    this.empresa = this.afs.doc(localStorage.getItem('empresa'));\n    return this.empresa.collection('ordenes', query=> query.orderBy('numero', 'desc')).snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n   \n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, data };\n      }))\n    );\n  }\n\n  obtenerUltimaOrden(){\n    this.empresa = this.afs.doc(localStorage.getItem('empresa'));\n    return this.empresa.collection('ordenes', query=> query.orderBy('numero', 'desc').limit(1)).valueChanges()\n  }\n\n  obtenerUnaOrden(id) {\n    return this.empresa.collection('ordenes').doc(id).valueChanges()\n  }\n\n  obtenerServicios(id) {\n    return this.empresa.collection('ordenes').doc(id).collection('ordenServicios').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, data };\n      }))\n    );\n  }\n\n  modificarServicio(orden, datos){\n    return this.empresa.collection('ordenes').doc(orden).update(datos);\n  }\n}\n"],"sourceRoot":""}