{"version":3,"sources":["webpack:///./src/app/layout/orden-trabajo/app-routing.module.ts","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.html","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.html","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/detalle-tarea/detalle-tarea.component.html","webpack:///./src/app/layout/orden-trabajo/detalle-tarea/detalle-tarea.component.scss","webpack:///./src/app/layout/orden-trabajo/detalle-tarea/detalle-tarea.component.ts","webpack:///./src/app/layout/orden-trabajo/detalleOrden/detalle-orden/detalle-orden.component.html","webpack:///./src/app/layout/orden-trabajo/detalleOrden/detalle-orden/detalle-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/detalleOrden/detalle-orden/detalle-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.html","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/mis-ordenes/mis-ordenes.component.html","webpack:///./src/app/layout/orden-trabajo/mis-ordenes/mis-ordenes.component.scss","webpack:///./src/app/layout/orden-trabajo/mis-ordenes/mis-ordenes.component.ts","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.html","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.scss","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.ts","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.component.html","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.component.scss","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.component.ts","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.module.ts"],"names":[],"mappings":"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","file":"orden-trabajo-orden-trabajo-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CrearOrdenComponent } from './crear-orden/crear-orden.component';\r\nimport { ConsultarOrdenComponent } from './consultar-orden/consultar-orden.component';\r\nimport { InformacionOrdenComponent } from './informacion-orden/informacion-orden.component';\r\nimport { OperacionComponent } from './operacion/operacion.component';\r\nimport { MisOrdenesComponent } from './mis-ordenes/mis-ordenes.component';\r\nimport { DetalleOrdenComponent } from './detalleOrden/detalle-orden/detalle-orden.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'crearorden',\r\n    component: CrearOrdenComponent\r\n  },\r\n  {\r\n    path: 'consultarorden',\r\n    component: ConsultarOrdenComponent\r\n  },\r\n  {\r\n    path: 'informacionorden/:id',\r\n    component: InformacionOrdenComponent\r\n  },\r\n  {\r\n    path: 'detalleorden/:id',\r\n    component: DetalleOrdenComponent\r\n  },\r\n  {\r\n    path: 'operaciones',\r\n    component: OperacionComponent\r\n  },\r\n  {\r\n    path: 'misoperaciones',\r\n    component: MisOrdenesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Consultar ordenes de trabajo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">Ordenes de trabajo</div>\\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\" datatable id=\\\"example-datatable\\\" [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th></th>\\r\\n                <th>No.</th>\\r\\n                <th>Fecha</th>\\r\\n                <th>Hora</th>\\r\\n                <th>ID Cliente</th>\\r\\n                <th>Nombre del cliente</th>\\r\\n                <th>Vehículo</th>\\r\\n\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let orden of ordenes | async\\\">\\r\\n                <td>\\r\\n                  <a href=\\\"/orden/informacionorden/{{orden.id}}\\\" class=\\\"btn btn-sm btn-primary\\\">\\r\\n                    <i class=\\\"fa fa-eye\\\"></i>\\r\\n                  </a>\\r\\n\\r\\n\\r\\n                </td>\\r\\n                <td>{{orden.data.numero}}</td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'dd/MM/yyyy'}}</td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'hh:mm a'}}</td>\\r\\n                <td>{{orden.data.cliente.cedula}}</td>\\r\\n                <td>{{orden.data.cliente.nombre}}</td>\\r\\n\\r\\n                <td>\\r\\n                  {{orden.data.vehiculo.placa}} - {{orden.data.vehiculo.marca}} - {{orden.data.vehiculo.modelo}}\\r\\n\\r\\n                </td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { OrdenService } from '../../../servicios/orden/orden.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-consultar-orden',\r\n  templateUrl: './consultar-orden.component.html',\r\n  styleUrls: ['./consultar-orden.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class ConsultarOrdenComponent implements OnInit {\r\n  @ViewChild(DataTableDirective)\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings= this.dtOptions = {\r\n    pagingType: 'full_numbers',\r\n    pageLength: 5,\r\n    autoWidth: true,\r\n\r\n  };;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  ordenes: Observable<any[]>;\r\n\r\n\r\n  constructor(private ordenService: OrdenService) { }\r\n\r\n  ngOnInit() {\r\n    this.obtenerOrdenes()\r\n  }\r\n\r\n  obtenerOrdenes() {\r\n    \r\n    this.ordenes =this.ordenService.obtenerOrdenes();\r\n\r\n    this.ordenes.subscribe(res=>{\r\n      $('#example-datatable').DataTable().destroy();\r\n      this.dtTrigger.next();\r\n    })\r\n  \r\n  }\r\n\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Crear orden de trabajo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Información de la orden de trabajo\\n        </div>\\n        <div class=\\\"card-body\\\" style=\\\"font-size: 14px\\\">\\n          <p> <strong>Número: </strong>{{numeroOrden+1}}</p>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Cliente:</label>\\n              <form class=\\\"form\\\" [formGroup]=\\\"ClienteForm\\\" (ngSubmit)=\\\"seleccionarPersona()\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-10 col-sm-10 col-xs-10\\\">\\n                    <ng-select class=\\\"form-control\\\" style=\\\"font-size: 14px\\\" autofocus style=\\\"width: 250px;\\\" (change)=\\\"seleccionarPersona()\\\" class=\\\"form-control\\\"\\n                      [items]=\\\"personas | async\\\" bindLabel=\\\"data.nombre\\\" formControlName=\\\"persona\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\n                    <button class=\\\"btn btn-white disabled\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                  </div>\\n\\n\\n                </div>\\n\\n              </form>\\n            </div>\\n            <div *ngIf=\\\"\\\">\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Cédula</label>\\n              <br> {{ (personaSeleccionada)?.data.cedula | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Dirección</label>\\n              <br> {{ (personaSeleccionada)?.data.direccion | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Teléfono</label>\\n              <br> {{ (personaSeleccionada)?.data.telefono | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Correo</label>\\n              <br> {{ (personaSeleccionada)?.data.correo }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </label>\\n              <button class=\\\"btn btn-primary \\\" (click)=\\\"open(content)\\\">\\n                <i class=\\\"fa fa-plus\\\"></i> Nuevo\\n              </button>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Vehículo:</label>\\n              <form class=\\\"form\\\" [formGroup]=\\\"VehiculoForm\\\" (ngSubmit)=\\\"seleccionarPersona()\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-10 col-sm-10 col-xs-10\\\">\\n                    <ng-select class=\\\"form-control\\\" autofocus style=\\\"width: 250px;\\\" (change)=\\\"seleccionarVehiculo()\\\" class=\\\"form-control\\\" [items]=\\\"vehiculos | async\\\"\\n                      bindLabel=\\\"data.placa\\\" formControlName=\\\"vehiculo\\\">\\n                    </ng-select>\\n                  </div>\\n\\n                  <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\n                    <div class=\\\"\\\">\\n                      <button class=\\\"btn btn-white disabled\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                  </div>\\n\\n                </div>\\n              </form>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Placa</label>\\n              <br> {{ (vehiculoSeleccionado)?.data.placa | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Marca</label>\\n              <br> {{ (vehiculoSeleccionado)?.data.marca | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Modelo</label>\\n              <br> {{ (vehiculoSeleccionado)?.data.modelo | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Color</label>\\n              <br> {{ (vehiculoSeleccionado)?.data.color | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </label>\\n              <button class=\\\"btn btn-primary \\\" (click)=\\\"open(content2)\\\">\\n                <i class=\\\"fa fa-plus\\\"></i> Nuevo\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Servicios\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            Servicios disponibles:\\n            <form class=\\\"form\\\" [formGroup]=\\\"ServicioForm\\\" (ngSubmit)=\\\"seleccionarServicio()\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                  <ng-select class=\\\"form-control\\\" style=\\\"width: 250px;\\\" (change)=\\\"seleccionarServicio()\\\" class=\\\"form-control\\\" [items]=\\\"servicios | async\\\"\\n                    bindLabel=\\\"data.descripcion\\\" formControlName=\\\"servicio\\\">\\n                  </ng-select>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"\\\">\\n                    <button class=\\\"btn btn-white disabled\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </form>\\n            <button class=\\\"btn btn-primary \\\" (click)=\\\"open(contentServicio)\\\">\\n              <i class=\\\"fa fa-plus\\\"></i> Nuevo\\n            </button>\\n          </div>\\n          <hr>\\n          <p>\\n            <strong>Servicios seleccionados: </strong>{{serviciosSeleccionados.length}}</p>\\n          <table class=\\\"table table-bordered table-responsive-sm table-sm\\\">\\n            <thead>\\n              <tr>\\n                <th></th>\\n                <th scope=\\\"col\\\">Código</th>\\n                <th scope=\\\"col\\\">Servicio</th>\\n                <th scope=\\\"col\\\">Descripción</th>\\n                <th scope=\\\"col\\\">Tiempo estandar</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let servicio of serviciosSeleccionados;let i = index\\\">\\n                <td>\\n                  <button (click)=\\\"eliminarServicio(i)\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\">\\n                    <i class=\\\"fa fa-trash\\\"></i>\\n                  </button>\\n                </td>\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.codigo}}</td>\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.descripcion}}</td>\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.detalle}}</td>\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.tiempoEstandar}} minutos</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr>\\n\\n          <button [disabled]=\\\"serviciosSeleccionados.length==0 || ClienteForm.persona=={} || VehiculoForm.vehiculo=={}\\\" class=\\\"btn btn-primary\\\"\\n            (click)=\\\"guardarOrden()\\\">Guardar</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-crear-persona></app-crear-persona>\\n  </div>\\n</ng-template>\\n<ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-crear-vehiculo [id]=\\\"nuevo\\\"></app-crear-vehiculo>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n  </div>\\n</ng-template>\\n\\n\\n<ng-template #contentServicio let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-crear-servicio></app-crear-servicio>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cerrar</button>\\n  </div>\\n</ng-template>\"","module.exports = \"\"","import { Component, OnInit, forwardRef } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { PersonaService } from '../../../servicios/persona.service';\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { VehiculoService } from '../../../servicios/vehiculo/vehiculo.service';\r\nimport { ServicioService } from '../../../servicios/servicio/servicio.service';\r\nimport { OrdenService } from '../../../servicios/orden/orden.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-crear-orden',\r\n  templateUrl: './crear-orden.component.html',\r\n  styleUrls: ['./crear-orden.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class CrearOrdenComponent implements OnInit {\r\n\r\n  persona: any;\r\n  personas: Observable<any[]>;\r\n  personaSeleccionada: any\r\n  vehiculoSeleccionado: any\r\n  vehiculoSeleccionadoaux: any\r\n  closeResult: string;\r\n  vehiculos: Observable<any[]>;\r\n  servicios: Observable<any[]>;\r\n  ultimaOrden: Observable<any[]>;\r\n  numeroOrden: number = 0;\r\n  serviciosSeleccionados: any[];\r\n\r\n\r\n\r\n  ClienteForm = this.fb.group({\r\n    persona: [{}, Validators.required]\r\n  })\r\n\r\n  ServicioForm = this.fb.group({\r\n    servicio: [{}, Validators.required]\r\n  })\r\n\r\n  VehiculoForm = this.fb.group({\r\n    vehiculo: [{}, Validators.required]\r\n  })\r\n\r\n  constructor(\r\n    private personaService: PersonaService,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    public router: Router,\r\n    private vehiculoService: VehiculoService,\r\n    private servicioService: ServicioService,\r\n    private ordenService: OrdenService\r\n\r\n  ) {\r\n\r\n    this.vehiculos = this.vehiculoService.obtenerVehiculos()\r\n    this.serviciosSeleccionados = []\r\n\r\n    this.ultimaOrden = this.ordenService.obtenerUltimaOrden();\r\n\r\n    this.ultimaOrden.subscribe(res=>{\r\n      this.numeroOrden = res[0].numero\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.obtenerPersonas()\r\n    this.obtenerServicios()\r\n  }\r\n\r\n  obtenerPersonas() {\r\n    this.personas = this.personaService.obtenerClientes()\r\n  }\r\n\r\n  obtenerServicios() {\r\n    this.servicios = this.servicioService.obtenerServicios()\r\n  }\r\n\r\n  seleccionarPersona() {\r\n    this.personaSeleccionada = this.ClienteForm.value.persona\r\n    // this.VehiculoForm = this.fb.group({\r\n    //   vehiculo: [{}, Validators.required]\r\n    // })\r\n    // this.vehiculos = this.personaService.obtenerVehiculos(this.personaSeleccionada.id)\r\n  }\r\n\r\n  seleccionarServicio() {\r\n    if (this.ServicioForm.value.servicio.data) {\r\n      this.serviciosSeleccionados.push(this.ServicioForm.value.servicio)\r\n    }\r\n  }\r\n\r\n  guardarOrden() {\r\n    var confirmacion = confirm(\"¿Está seguro que desea guardar la orden\");\r\n    if (confirmacion) {\r\n      var vehiculo = {\r\n        placa: this.vehiculoSeleccionado.data.placa,\r\n        marca: this.vehiculoSeleccionado.data.marca,\r\n        modelo: this.vehiculoSeleccionado.data.modelo,\r\n        color: this.vehiculoSeleccionado.data.color,\r\n        numeroMotor: this.vehiculoSeleccionado.data.numeroMotor,\r\n        numeroChasis: this.vehiculoSeleccionado.data.numeroChasis\r\n      }\r\n\r\n      var cliente = {\r\n        cedula: this.personaSeleccionada.data.cedula,\r\n        nombre: this.personaSeleccionada.data.nombre,\r\n        direccion: this.personaSeleccionada.data.direccion,\r\n        telefono: this.personaSeleccionada.data.direccion,\r\n        correo: this.personaSeleccionada.data.correo\r\n      }\r\n\r\n      var servicios = []\r\n\r\n      this.serviciosSeleccionados.forEach(servicio => {\r\n        servicios.push({ codigo: servicio.data.codigo, descripcion: servicio.data.descripcion, detalle: servicio.data.detalle, tiempoEstandar: servicio.data.tiempoEstandar, estado: 'CITA/RECEPCION' })\r\n      });\r\n      \r\n\r\n      var orden = {\r\n        numero: this.numeroOrden+1,\r\n        cliente: cliente,\r\n        vehiculo: vehiculo,\r\n        servicios: servicios,\r\n        fecha: new Date()\r\n      }\r\n     const id =  this.ordenService.crearOrden(orden, servicios)\r\n     \r\n     this.reiniciar()\r\n\r\n     this.router.navigate(['/orden/informacionorden/'+id]);\r\n\r\n    \r\n\r\n    } \r\n  }\r\n\r\n  reiniciar(){\r\n    this.personaSeleccionada=null\r\n    this.vehiculoSeleccionado = null\r\n    this.serviciosSeleccionados=[]\r\n\r\n    this.ClienteForm = this.fb.group({\r\n      persona: [{}, Validators.required]\r\n    })\r\n  \r\n    \r\n  \r\n    this.VehiculoForm = this.fb.group({\r\n      vehiculo: [{}, Validators.required]\r\n    })\r\n  }\r\n\r\n  eliminarServicio(indice): void {\r\n    this.serviciosSeleccionados.splice(indice, 1)\r\n  }\r\n\r\n  seleccionarVehiculo() {\r\n    this.vehiculoSeleccionado = this.VehiculoForm.value.vehiculo\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\n  detalle-tarea works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-detalle-tarea',\n  templateUrl: './detalle-tarea.component.html',\n  styleUrls: ['./detalle-tarea.component.scss']\n})\nexport class DetalleTareaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Detalle orden'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Información de la orden de trabajo\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <table class=\\\"table table-sm table-bordered\\\">\\r\\n\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <th>Número </th>\\r\\n                <td>{{ (orden | async)?.numero }}</td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n              <tr>\\r\\n                <th>Fecha </th>\\r\\n                <td>{{ (orden | async)?.fecha.seconds*1000 | date : 'dd/MM/yyyy hh:mm a' }}</td>\\r\\n              </tr>\\r\\n\\r\\n              <tr>\\r\\n                <th>ID Cliente</th>\\r\\n                <td>{{ (orden | async)?.cliente.cedula }}</td>\\r\\n              </tr>\\r\\n\\r\\n              <tr>\\r\\n                <th>Nombre cliente</th>\\r\\n                <td>{{ (orden | async)?.cliente.nombre }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Vehículo</th>\\r\\n                <td>{{ (orden | async)?.vehiculo.placa }} - {{ (orden | async)?.vehiculo.marca }} - {{ (orden | async)?.vehiculo.modelo\\r\\n                  }}\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Operaciones\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <table class=\\\"table table-bordered table-responsive-sm table-sm\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Servicio</th>\\r\\n            <th>Descripción</th>\\r\\n            <th>T.E. (min)</th>\\r\\n            <th>Estado</th>\\r\\n            <th>Operador asignado</th>\\r\\n            <th>Acciones</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let servicio of servicios let index = index\\\">\\r\\n            <td>{{servicio.descripcion}}</td>\\r\\n            <td>{{servicio.detalle}}</td>\\r\\n            <td>{{servicio.tiempoEstandar}}</td>\\r\\n            <td>\\r\\n              {{servicio.estado}}\\r\\n              <p *ngIf=\\\"servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\"> <strong>Motivo: </strong>{{servicio.motivoPausa}}</p>\\r\\n            </td>\\r\\n            <td>\\r\\n              <p *ngIf=\\\"servicio.operador\\\">{{servicio.operador.data.nombre}}</p>\\r\\n            </td>\\r\\n            <td>\\r\\n              <button *ngIf=\\\"servicio.estado=='EN ESPERA DE PRODUCCIÓN'\\\" (click)=\\\"iniciarServicio(index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                <i class=\\\"fa fa-play\\\"></i>\\r\\n\\r\\n              </button>\\r\\n\\r\\n              <button *ngIf=\\\"servicio.estado=='EN PRODUCCIÓN'\\\" (click)=\\\"open(content, index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                <i class=\\\"fa fa-pause\\\"></i>\\r\\n              </button>\\r\\n\\r\\n              <button *ngIf=\\\"servicio.estado=='EN PRODUCCIÓN'\\\" (click)=\\\"finalizarServicio(index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                <i class=\\\"fa fa-stop\\\"></i>\\r\\n              </button>\\r\\n              <button *ngIf=\\\"servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\" (click)=\\\"reanudarServicio(index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                <i class=\\\"fa fa-play\\\"></i>\\r\\n              </button>\\r\\n\\r\\n              <button *ngIf=\\\"servicio.estado=='POR FACTURAR'\\\" (click)=\\\"open2(content2, index)\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                <i class=\\\"fa fa-eye\\\"></i>\\r\\n              </button>\\r\\n            </td>\\r\\n\\r\\n          </tr>\\r\\n\\r\\n\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h5>Pausar operación</h5>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p><strong>Servicio: </strong>{{servicioSeleccionado.descripcion}}</p>\\r\\n      <p><strong>Motivo pausa:</strong>\\r\\n        <select [(ngModel)]=\\\"pausa.motivo\\\">\\r\\n          <option value=\\\"\\\">Seleccionar un motivo...</option>\\r\\n          <option value=\\\"FALTA DE AUTORIZACIÓN\\\">FALTA DE AUTORIZACIÓN</option>\\r\\n          <option value=\\\"FALTA DE REPUESTOS\\\">FALTA DE REPUESTOS</option>\\r\\n          <option value=\\\"TRABAJOS DE TERCEROS\\\">TRABAJOS DE TERCEROS</option>\\r\\n          <option value=\\\"OTRO TRABAJO\\\">OTRO TRABAJO</option>\\r\\n          <option value=\\\"BREAK\\\">BREAK</option>\\r\\n          <option value=\\\"ALMUERZO\\\">ALMUERZO</option>\\r\\n          <option value=\\\"FINALIZACIÓN DE JORNADA LABORAL\\\">FINALIZACIÓN DE JORNADA LABORAL</option>\\r\\n        </select></p>\\r\\n\\r\\n      <p><strong>Observación:</strong> <input [(ngModel)]=\\\"pausa.observacion\\\" type=\\\"text\\\"></p>\\r\\n      <p><button [disabled]=\\\"pausa.motivo==''\\\" class=\\\"btn btn-primary\\\" (click)=\\\"pausar(); c('Close click')\\\">Guardar</button></p>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cerrar</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h5>Detalle de la operación</h5>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">información</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <table class=\\\"table table-bordered table-sm\\\">\\r\\n                <tr>\\r\\n                  <th>Servicio:</th>\\r\\n                  <td>{{servicioSeleccionado.descripcion}}</td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <th>Operador:</th>\\r\\n                  <td>{{servicioSeleccionado.operador.data.nombre}}</td>\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                  <th>Hora Inicio </th>\\r\\n                  <td>{{ servicioSeleccionado.horaInicio.seconds*1000 | date : 'dd/MM/yyyy hh:mm a' }}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Hora Fin </th>\\r\\n                  <td>{{ servicioSeleccionado.horaFin.seconds*1000 | date : 'dd/MM/yyyy hh:mm a' }}</td>\\r\\n                </tr>\\r\\n\\r\\n              </table>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <table class=\\\"table table-bordered table-sm\\\">\\r\\n\\r\\n                <tr>\\r\\n                  <th>Tiempo estandar</th>\\r\\n                  <td>{{ servicioSeleccionado.te}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>LeadTime</th>\\r\\n                  <td>{{ servicioSeleccionado.leadTime}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Pausas</th>\\r\\n                  <td>{{ servicioSeleccionado.tiempoPausas}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Tiempo real</th>\\r\\n                  <td>{{ servicioSeleccionado.tiempoReal}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>Eficiencia</th>\\r\\n                  <td>{{ servicioSeleccionado.eficiencia}}%</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Pausas\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Hora inicio</th>\\r\\n                <th>Hora fin</th>\\r\\n                <th>Motivo</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let pausa of servicioSeleccionado.pausas\\\">\\r\\n                <td>{{ pausa.horaInicio.seconds*1000 | date : 'dd/MM/yyyy hh:mm a' }}</td>\\r\\n                <td>{{ pausa.horaFin.seconds*1000 | date : 'dd/MM/yyyy hh:mm a' }}</td>\\r\\n                <td>{{pausa.motivo.motivo}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cerrar</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrdenService } from '../../../../servicios/orden/orden.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { routerTransition } from '../../../../router.animations';\r\n\r\nimport * as moment from 'moment';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-detalle-orden',\r\n  templateUrl: './detalle-orden.component.html',\r\n  styleUrls: ['./detalle-orden.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class DetalleOrdenComponent implements OnInit {\r\n\r\n  id: any\r\n  orden: Observable<any>;\r\n  servicios: any;\r\n  newIndex: any\r\n  closeResult: string;\r\n  pausa = {\r\n    motivo: '',\r\n    observacion: ''\r\n  }\r\n\r\n  servicioSeleccionado: any\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    private ordenService: OrdenService,\r\n    private db: AngularFirestore) {\r\n\r\n    this.servicios = []\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.orden = this.ordenService.obtenerUnaOrden(this.id);\r\n    this.orden.subscribe(res => {\r\n      this.servicios = res.servicios\r\n      console.log(this.servicios)\r\n\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  iniciarServicio(index) {\r\n    const confirmacion = confirm(\"¿Está seguro que desea iniciar la tarea seleccionada?\")\r\n    if (confirmacion) {\r\n      this.servicios[index].estado = 'EN PRODUCCIÓN'\r\n      this.servicios[index].horaInicio = new Date()\r\n      this.ordenService.modificarServicio(this.id, { servicios: this.servicios })\r\n    } else {\r\n    }\r\n  }\r\n\r\n  finalizarServicio(index) {\r\n    const confirmacion = confirm(\"¿Está seguro que desea finalizar la tarea seleccionada?\")\r\n    if (confirmacion) {\r\n      this.servicios[index].estado = 'POR FACTURAR'\r\n      this.servicios[index].horaFin = new Date()\r\n      this.ordenService.modificarServicio(this.id, { servicios: this.servicios })\r\n    } else {\r\n    }\r\n  }\r\n\r\n  open(content, index) {\r\n    this.servicioSeleccionado = this.servicios[index]\r\n\r\n\r\n\r\n    // const leadTime = moment.utc(diff * 1000).format('HH:mm:ss');\r\n\r\n\r\n\r\n    this.newIndex = index\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n\r\n    });\r\n  }\r\n\r\n  open2(content, index) {\r\n    this.servicioSeleccionado = this.servicios[index]\r\n\r\n    //tiempo estandar\r\n\r\n    this.servicioSeleccionado.te = moment.utc((this.servicioSeleccionado.tiempoEstandar * 60) * 1000).format('HH:mm:ss');\r\n\r\n    //leadtime\r\n    var fecha1 = moment(this.servicioSeleccionado.horaInicio.seconds, 'X');\r\n    var fecha2 = moment(this.servicioSeleccionado.horaFin.seconds, 'X');\r\n    var diff = fecha2.diff(fecha1, 's');\r\n    var lead = fecha2.diff(fecha1, 's')\r\n    this.servicioSeleccionado.leadTime = moment.utc(diff * 1000).format('HH:mm:ss');\r\n\r\n    //pausas\r\n\r\n    var pausas = 0\r\n\r\n    if (this.servicioSeleccionado.pausas) {\r\n\r\n\r\n      this.servicioSeleccionado.pausas.forEach(pausa => {\r\n        console.log(pausa)\r\n        var fecha1 = moment(pausa.horaInicio.seconds, 'X');\r\n        var fecha2 = moment(pausa.horaFin.seconds, 'X');\r\n        var diff2 = fecha2.diff(fecha1, 's');\r\n        pausas += diff2\r\n\r\n      });\r\n\r\n    } else {\r\n\r\n    }\r\n\r\n    this.servicioSeleccionado.tiempoPausas = moment.utc(pausas * 1000).format('HH:mm:ss');\r\n\r\n\r\n    //tiempo real\r\n    const real  = lead-pausas\r\n    this.servicioSeleccionado.tiempoReal = moment.utc(real * 1000).format('HH:mm:ss');\r\n\r\n\r\n    const eficiencia = ((this.servicioSeleccionado.tiempoEstandar*60)/real)*100\r\n\r\n    this.servicioSeleccionado.eficiencia = eficiencia.toFixed(2)\r\n\r\n\r\n\r\n    this.newIndex = index\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n\r\n    });\r\n  }\r\n\r\n  pausar() {\r\n    const id = this.db.createId()\r\n\r\n    if (!this.servicios[this.newIndex].pausas) {\r\n      this.servicios[this.newIndex].pausas = []\r\n    }\r\n    this.servicios[this.newIndex].estado = 'EN PRODUCCIÓN - PAUSADO'\r\n    this.servicios[this.newIndex].pausaActual = id\r\n    this.servicios[this.newIndex].motivoPausa = this.pausa.motivo\r\n    this.servicios[this.newIndex].pausas.push({ horaInicio: new Date(), motivo: this.pausa, id: id })\r\n    this.ordenService.modificarServicio(this.id, { servicios: this.servicios })\r\n  }\r\n\r\n  reanudarServicio(indice) {\r\n\r\n    const confirmacion = confirm(\"¿Está seguro que desea finalizar la tarea seleccionada?\")\r\n    if (confirmacion) {\r\n      this.servicios[indice].estado = 'EN PRODUCCIÓN'\r\n      this.servicios[indice].pausas.forEach(pausa => {\r\n        if (pausa.id == this.servicios[indice].pausaActual) {\r\n          pausa.horaFin = new Date()\r\n        }\r\n      });\r\n      this.ordenService.modificarServicio(this.id, { servicios: this.servicios })\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Información Orden de trabajo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Información de la orden de trabajo\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <table class=\\\"table table-sm table-bordered\\\">\\n\\n            <tbody>\\n              <tr>\\n                <th>Número </th>\\n                <td>{{ (orden | async)?.numero }}</td>\\n              </tr>\\n              <tr>\\n                <th>Fecha </th>\\n                <td>{{ (orden | async)?.fecha.seconds*1000 | date : 'dd/MM/yyyy hh:mm a' }}</td>\\n              </tr>\\n\\n              <tr>\\n                <th>ID Cliente</th>\\n                <td>{{ (orden | async)?.cliente.cedula }}</td>\\n              </tr>\\n\\n              <tr>\\n                <th>Nombre cliente</th>\\n                <td>{{ (orden | async)?.cliente.nombre }}</td>\\n              </tr>\\n              <tr>\\n                <th>Vehículo</th>\\n                <td>{{ (orden | async)?.vehiculo.placa }} - {{ (orden | async)?.vehiculo.marca }} - {{ (orden | async)?.vehiculo.modelo\\n                  }}\\n                </td>\\n              </tr>\\n\\n\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Servicios\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-responsive-sm\\\">\\n        <thead>\\n          <tr>\\n            <th>Servicio</th>\\n            <th>Descripción</th>\\n            <th>Tiempo estandar</th>\\n            <th>Estado</th>\\n            <th>Operador asignado</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let servicio of servicios let index = index\\\">\\n            <td>{{servicio.descripcion}}</td>\\n            <td>{{servicio.detalle}}</td>\\n            <td>{{servicio.tiempoEstandar}} minutos</td>\\n            <td>{{servicio.estado}}</td>\\n            <td>\\n\\n              <div class=\\\"\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-9\\\">\\n                    <ng-select class=\\\"form-control\\\" style=\\\"font-size: 14px\\\" [(ngModel)]=\\\"servicio.operador\\\" autofocus style=\\\"width: 230px;\\\" class=\\\"form-control\\\"\\n                      [items]=\\\"personas | async\\\" bindLabel=\\\"data.nombre\\\" (change)=\\\"seleccionarPersona(servicio, index)\\\">\\n                    </ng-select>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <button class=\\\"btn btn-white\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                  </div>\\n                </div>\\n\\n              </div>\\n\\n            </td>\\n\\n          </tr>\\n\\n\\n\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdenService } from '../../../servicios/orden/orden.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { PersonaService } from '../../../servicios/persona.service';\n\n@Component({\n  selector: 'app-informacion-orden',\n  templateUrl: './informacion-orden.component.html',\n  styleUrls: ['./informacion-orden.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class InformacionOrdenComponent implements OnInit {\n\n  id: any\n  orden: Observable<any>;\n  servicios:any;\n\n  personas: Observable<any[]>;\n\n  PersonaForm = this.fb.group({\n    persona: [{}, Validators.required]\n  })\n\n  constructor(\n    private route: ActivatedRoute,\n    private ordenService: OrdenService,\n    private fb: FormBuilder,\n    private personaService: PersonaService\n  ) {\n    this.servicios = []\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.orden = this.ordenService.obtenerUnaOrden(this.id);\n    this.orden.subscribe(res=>{\n      this.servicios = res.servicios\n      console.log(this.servicios)\n    })\n    this.personas = this.personaService.obtenerUsuarios();\n\n\n  }\n\n  seleccionarPersona(servicio, index){\n\n    console.log(this.servicios[index])\n\n    this.servicios[index].operador = servicio.operador\n    this.servicios[index].estado = 'EN ESPERA DE PRODUCCIÓN'\n   \n  this.ordenService.modificarServicio(this.id, {servicios: this.servicios, estado: 'EN ESPERA DE PRODUCCIÓN'})\n\n}\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Operaciones'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\n\\n\\n      <div class=\\\"card mb-4\\\">\\n        <div class=\\\"card-header\\\">Ordenes de trabajo</div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"card\\\">\\n\\n              <div class=\\\"card-body\\\">\\n                <p><strong>Estado</strong></p>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\" class=\\\"table-success\\\" style=\\\"width: 15px\\\"></div>\\n                  <div class=\\\"col\\\">POR FACTURAR</div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\" class=\\\"table-warning\\\" style=\\\"width: 15px\\\"></div>\\n                  <div class=\\\"col\\\">EN PRODUCCIÓN</div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\" class=\\\"table-danger\\\" style=\\\"width: 15px\\\"></div>\\n                  <div class=\\\"col\\\">CITA/RECEPCIÓN-EN ESPERA</div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n\\n        </div>\\n        <div class=\\\"card-body table-responsive\\\">\\n\\n          <table class=\\\"table table-bordered table-sm table-responsive-sm\\\">\\n            <thead>\\n\\n              <tr>\\n\\n                <th>Cliente</th>\\n                <th>Vehículo</th>\\n                <th>Servicio</th>\\n                <th>T. estandar</th>\\n                <th>Estado</th>\\n     \\n\\n\\n\\n\\n              </tr>\\n            </thead>\\n            <tbody>\\n\\n\\n              <ng-container *ngFor=\\\"let servicio of tareas\\\">\\n                <tr *ngIf=\\\"servicio.servicio.operador.data.usuario == usuarioid\\\" [class.table-warning]=\\\"servicio.servicio.estado=='EN PRODUCCIÓN' || servicio.servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\"\\n                  [class.table-danger]=\\\"servicio.servicio.estado=='CITA/RECEPCION' || servicio.servicio.estado=='EN ESPERA DE PRODUCCIÓN'\\\"\\n                  [class.table-success]=\\\"servicio.servicio.estado=='POR FACTURAR'\\\">\\n\\n                  <td>\\n                    {{servicio.cliente.nombre}}\\n                  </td>\\n                  <td>\\n                    {{servicio.vehiculo.placa}} - {{servicio.vehiculo.marca}} - {{servicio.vehiculo.modelo}}\\n                  </td>\\n                  <td>\\n                    {{servicio.servicio.descripcion}}\\n                  </td>\\n                  <td>\\n                    {{servicio.servicio.tiempoEstandar}} minutos\\n                  </td>\\n                  <td>\\n                    {{servicio.servicio.estado}}\\n                    <div *ngIf=\\\"servicio.servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\">\\n\\n                      <p><strong>Motivo: </strong>{{servicio.servicio.motivo}}</p>\\n                    </div>\\n\\n                  </td>\\n\\n                \\n\\n\\n                </tr>\\n              </ng-container>\\n\\n\\n\\n            </tbody>\\n          </table>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n\\n\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { routerTransition } from '../../../router.animations';\nimport { Observable } from 'rxjs';\nimport { OrdenService } from '../../../servicios/orden/orden.service';\n\n@Component({\n  selector: 'app-mis-ordenes',\n  templateUrl: './mis-ordenes.component.html',\n  styleUrls: ['./mis-ordenes.component.scss'],\n  animations: [routerTransition()]\n})\nexport class MisOrdenesComponent implements OnInit {\n\n  ordenes: Observable<any[]>;\n  tareas: any\n  usuarioid:any\n\n  constructor(private afAuth: AngularFireAuth, private ordenService: OrdenService) {\n    this.usuarioid=''\n   }\n\n  ngOnInit() {\n    this.obtenerOrdenes()\n    this.afAuth.user.subscribe(res=>{\n      this.usuarioid = res.uid\n    })\n    \n  }\n\n  obtenerOrdenes() {\n    this.ordenes = this.ordenService.obtenerOrdenes();\n\n    this.ordenes.subscribe(res => {\n      this.tareas = []\n      res.forEach(element => {\n        element.data.servicios.forEach(servicio => {\n\n\n          if (!servicio.operador) {\n            servicio.operador = { data: { nombre: '' } }\n          }\n\n          const motivo = ''\n          if (servicio.pausas) {\n            servicio.pausas.forEach(pausa => {\n              if (pausa.id == servicio.pausaActual) {\n                servicio.motivo = pausa.motivo.motivo\n              }\n            });\n          }\n\n\n          this.tareas.push({ cliente: element.data.cliente, servicio: servicio, vehiculo: element.data.vehiculo })\n\n\n        });\n        console.log(this.tareas)\n\n      });\n    })\n\n  }\n\n}\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Ordenes de trabajo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">Ordenes de trabajo</div>\\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\" datatable id=\\\"example-datatable\\\" [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th></th>\\r\\n                <th>No.</th>\\r\\n                <th>Fecha</th>\\r\\n                <th>Hora</th>\\r\\n                <th>ID Cliente</th>\\r\\n                <th>Nombre del cliente</th>\\r\\n                <th>Vehículo</th>\\r\\n               \\r\\n\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let orden of ordenes | async\\\">\\r\\n                <td>\\r\\n                  <a href=\\\"/orden/detalleorden/{{orden.id}}\\\" class=\\\"btn btn-sm btn-primary\\\">\\r\\n                    <i class=\\\"fa fa-eye\\\"></i>\\r\\n                  </a>\\r\\n\\r\\n\\r\\n                </td>\\r\\n                <td>{{orden.data.numero}}</td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'dd/MM/yyyy'}}</td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'hh:mm a'}}</td>\\r\\n                <td>{{orden.data.cliente.cedula}}</td>\\r\\n                <td>{{orden.data.cliente.nombre}}</td>\\r\\n\\r\\n                <td>\\r\\n                  {{orden.data.vehiculo.placa}} - {{orden.data.vehiculo.marca}} - {{orden.data.vehiculo.modelo}}\\r\\n\\r\\n                </td>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { OrdenService } from '../../../servicios/orden/orden.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n  selector: 'app-operacion',\r\n  templateUrl: './operacion.component.html',\r\n  styleUrls: ['./operacion.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class OperacionComponent implements OnInit {\r\n  @ViewChild(DataTableDirective)\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings= this.dtOptions = {\r\n    pagingType: 'full_numbers',\r\n    pageLength: 5,\r\n    autoWidth: true,\r\n\r\n  };;\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  ordenes: Observable<any[]>;\r\n\r\n\r\n  constructor(private ordenService: OrdenService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.obtenerOrdenes()\r\n  }\r\n\r\n  obtenerOrdenes() {\r\n    \r\n    this.ordenes =this.ordenService.obtenerOrdenes();\r\n\r\n    this.ordenes.subscribe(res=>{\r\n      $('#example-datatable').DataTable().destroy();\r\n      this.dtTrigger.next();\r\n    })\r\n  \r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\n  orden-trabajo works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-orden-trabajo',\n  templateUrl: './orden-trabajo.component.html',\n  styleUrls: ['./orden-trabajo.component.scss']\n})\nexport class OrdenTrabajoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { CrearOrdenComponent } from './crear-orden/crear-orden.component';\r\nimport { ConsultarOrdenComponent } from './consultar-orden/consultar-orden.component';\r\nimport { InformacionOrdenComponent } from './informacion-orden/informacion-orden.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap'\r\nimport { PersonaModule } from '../persona/persona.module';\r\nimport { VehiculoModule } from '../vehiculo/vehiculo.module';\r\nimport { ServicioModule } from '../servicio/servicio.module';\r\nimport { OperacionComponent } from './operacion/operacion.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { OrdenTrabajoComponent } from './orden-trabajo.component';\r\nimport { MisOrdenesComponent } from './mis-ordenes/mis-ordenes.component';\r\nimport { DetalleOrdenComponent } from './detalleOrden/detalle-orden/detalle-orden.component';\nimport { DetalleTareaComponent } from './detalle-tarea/detalle-tarea.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    PageHeaderModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbModule.forRoot(),\r\n    PersonaModule,\r\n    VehiculoModule,\r\n    ServicioModule,\r\n    DataTablesModule\r\n  ],\r\n  declarations: [CrearOrdenComponent, ConsultarOrdenComponent, InformacionOrdenComponent, OperacionComponent, OrdenTrabajoComponent, MisOrdenesComponent, DetalleOrdenComponent, DetalleTareaComponent]\r\n})\r\nexport class OrdenTrabajoModule { }\r\n"],"sourceRoot":""}