{"version":3,"sources":["webpack:///./src/app/layout/orden-trabajo/app-routing.module.ts","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.html","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/consultar-orden/consultar-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.html","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/crear-orden/crear-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.html","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.scss","webpack:///./src/app/layout/orden-trabajo/informacion-orden/informacion-orden.component.ts","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.html","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.scss","webpack:///./src/app/layout/orden-trabajo/operacion/operacion.component.ts","webpack:///./src/app/layout/orden-trabajo/orden-trabajo.module.ts"],"names":[],"mappings":"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","file":"orden-trabajo-orden-trabajo-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CrearOrdenComponent } from './crear-orden/crear-orden.component';\r\nimport { ConsultarOrdenComponent } from './consultar-orden/consultar-orden.component';\r\nimport { InformacionOrdenComponent } from './informacion-orden/informacion-orden.component';\r\nimport { OperacionComponent } from './operacion/operacion.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'crearorden',\r\n    component: CrearOrdenComponent\r\n  },\r\n  {\r\n    path: 'consultarorden',\r\n    component: ConsultarOrdenComponent\r\n  },\r\n  {\r\n    path: 'informacionorden/:id',\r\n    component: InformacionOrdenComponent\r\n  },\r\n  {\r\n    path: 'operaciones',\r\n    component: OperacionComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Consultar ordenes de trabajo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">Ordenes de trabajo</div>\\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                  <th></th>\\r\\n                <th>Fecha</th>\\r\\n                <th>Hora</th>\\r\\n                <th>ID Cliente</th>\\r\\n                <th>Nombre del cliente</th>\\r\\n                <th>Vehículo</th>\\r\\n          \\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let orden of ordenes | async\\\">\\r\\n                  <td>\\r\\n                      <a href=\\\"/orden/informacionorden/{{orden.id}}\\\" class=\\\"btn btn-sm btn-primary\\\">\\r\\n                        <i class=\\\"fa fa-eye\\\"></i>\\r\\n                      </a>\\r\\n                     \\r\\n                      \\r\\n                      <button class=\\\"btn btn-sm btn-danger\\\">\\r\\n                        <i class=\\\"fa fa-trash\\\"></i>\\r\\n                      </button>\\r\\n                    </td>\\r\\n    \\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'dd/MM/yyyy'}}</td>\\r\\n                <td>{{(orden.data.fecha.seconds)*1000 | date : 'hh:mm a'}}</td>\\r\\n                <td>{{orden.data.cliente.cedula}}</td>\\r\\n                <td>{{orden.data.cliente.nombre}}</td>\\r\\n                <td>\\r\\n                  {{orden.data.vehiculo.placa}} - {{orden.data.vehiculo.marca}} - {{orden.data.vehiculo.modelo}}\\r\\n\\r\\n                </td>\\r\\n\\r\\n              \\r\\n               \\r\\n\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { routerTransition } from '../../../router.animations';\nimport { Observable } from 'rxjs';\nimport { OrdenService } from '../../../servicios/orden/orden.service';\n\n@Component({\n  selector: 'app-consultar-orden',\n  templateUrl: './consultar-orden.component.html',\n  styleUrls: ['./consultar-orden.component.scss'],\n  animations: [routerTransition()]\n})\nexport class ConsultarOrdenComponent implements OnInit {\n\n  ordenes: Observable<any[]>;\n\n\n  constructor(private ordenService: OrdenService) { }\n\n  ngOnInit() {\n    this.obtenerOrdenes()\n  }\n\n  obtenerOrdenes() {\n    this.ordenes =this.ordenService.obtenerOrdenes();\n\n    this.ordenes.forEach(element => {\n      console.log(element)\n    });\n  \n  }\n\n}\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Crear orden de trabajo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Información de la orden de trabajo\\n        </div>\\n        <div class=\\\"card-body\\\" style=\\\"font-size: 14px\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Cliente:</label>\\n              <form class=\\\"form\\\" [formGroup]=\\\"ClienteForm\\\" (ngSubmit)=\\\"seleccionarPersona()\\\">\\n                <div class=\\\"\\\">\\n                  <ng-select class=\\\"form-control\\\" style=\\\"font-size: 14px\\\" autofocus style=\\\"width: 250px;\\\" (change)=\\\"seleccionarPersona()\\\" class=\\\"form-control\\\"\\n                    [items]=\\\"personas | async\\\" bindLabel=\\\"data.nombre\\\" formControlName=\\\"persona\\\">\\n                  </ng-select>\\n                </div>\\n              </form>\\n            </div>\\n            <div *ngIf=\\\"\\\">\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Cédula</label>\\n              <br> {{ (personaSeleccionada)?.data.cedula | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Dirección</label>\\n              <br> {{ (personaSeleccionada)?.data.direccion | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Teléfono</label>\\n              <br> {{ (personaSeleccionada)?.data.telefono | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Correo</label>\\n              <br> {{ (personaSeleccionada)?.data.correo }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </label>\\n              <button class=\\\"btn btn-primary \\\" (click)=\\\"open(content)\\\">\\n                <i class=\\\"fa fa-plus\\\"></i> Nuevo\\n              </button>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Vehículo:</label>\\n              <form class=\\\"form\\\" [formGroup]=\\\"VehiculoForm\\\" (ngSubmit)=\\\"seleccionarPersona()\\\">\\n                <div class=\\\"\\\"  >\\n                  <ng-select class=\\\"form-control\\\" autofocus style=\\\"width: 250px;\\\" (change)=\\\"seleccionarVehiculo()\\\" class=\\\"form-control\\\" [items]=\\\"vehiculos | async\\\"  \\n                  bindLabel=\\\"data.placa\\\" formControlName=\\\"vehiculo\\\" >\\n                  </ng-select>\\n                </div>\\n              </form>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Placa</label>\\n              <br> {{ (vehiculoSeleccionado)?.data.placa | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Marca</label>\\n              <br> {{ (vehiculoSeleccionado)?.data.marca | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Modelo</label>\\n              <br> {{ (vehiculoSeleccionado)?.data.modelo | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\">Color</label>\\n              <br> {{ (vehiculoSeleccionado)?.data.color | uppercase }}\\n            </div>\\n            <div class=\\\"col\\\">\\n              <label for=\\\"\\\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </label>\\n              <button class=\\\"btn btn-primary \\\" (click)=\\\"open(content2)\\\">\\n                <i class=\\\"fa fa-plus\\\"></i> Nuevo\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Servicios\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            Servicios disponibles:\\n            <form class=\\\"form\\\" [formGroup]=\\\"ServicioForm\\\" (ngSubmit)=\\\"seleccionarServicio()\\\">\\n              <div class=\\\"\\\">\\n                <ng-select class=\\\"form-control\\\" style=\\\"width: 250px;\\\" (change)=\\\"seleccionarServicio()\\\" class=\\\"form-control\\\" [items]=\\\"servicios | async\\\"\\n                  bindLabel=\\\"data.descripcion\\\" formControlName=\\\"servicio\\\">\\n                </ng-select>\\n              </div>\\n            </form>\\n          </div>\\n          <hr>\\n          <p>\\n            <strong>Servicios seleccionados: </strong>{{serviciosSeleccionados.length}}</p>\\n          <table class=\\\"table table-bordered table-sm\\\">\\n            <thead>\\n              <tr>\\n                <th></th>\\n                <th scope=\\\"col\\\">Servicio</th>\\n                <th scope=\\\"col\\\">Descripción</th>\\n                <th scope=\\\"col\\\">Tiempo estandar</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let servicio of serviciosSeleccionados;let i = index\\\">\\n                <td>\\n                  <button (click)=\\\"eliminarServicio(i)\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\">\\n                    <i class=\\\"fa fa-trash\\\"></i>\\n                  </button>\\n                </td>\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.descripcion}}</td>\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.detalle}}</td>\\n                <td *ngIf=\\\"servicio.data\\\">{{servicio.data.tiempoEstandar}} minutos</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr>\\n\\n          <button [disabled]=\\\"serviciosSeleccionados.length==0 || ClienteForm.persona=={} || VehiculoForm.vehiculo=={}\\\" class=\\\"btn btn-primary\\\" (click)=\\\"guardarOrden()\\\">Guardar</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-crear-persona></app-crear-persona>\\n  </div>\\n</ng-template>\\n<ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-crear-vehiculo></app-crear-vehiculo>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n  </div>\\n</ng-template>\\n<ng-template #content3 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-crear-servicio></app-crear-servicio>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cerrar</button>\\n  </div>\\n</ng-template>\"","module.exports = \"\"","import { Component, OnInit, forwardRef } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { PersonaService } from '../../../servicios/persona.service';\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { VehiculoService } from '../../../servicios/vehiculo/vehiculo.service';\r\nimport { ServicioService } from '../../../servicios/servicio/servicio.service';\r\nimport { OrdenService } from '../../../servicios/orden/orden.service';\r\n\r\n@Component({\r\n  selector: 'app-crear-orden',\r\n  templateUrl: './crear-orden.component.html',\r\n  styleUrls: ['./crear-orden.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class CrearOrdenComponent implements OnInit {\r\n\r\n  persona: any;\r\n  personas: Observable<any[]>;\r\n  personaSeleccionada: any\r\n  vehiculoSeleccionado: any\r\n  vehiculoSeleccionadoaux: any\r\n  closeResult: string;\r\n  vehiculos: Observable<any[]>;\r\n  servicios: Observable<any[]>;\r\n  serviciosSeleccionados: any[];\r\n\r\n\r\n  ClienteForm = this.fb.group({\r\n    persona: [{}, Validators.required]\r\n  })\r\n\r\n  ServicioForm = this.fb.group({\r\n    servicio: [{}, Validators.required]\r\n  })\r\n\r\n  VehiculoForm = this.fb.group({\r\n    vehiculo: [{}, Validators.required]\r\n  })\r\n\r\n  constructor(\r\n    private personaService: PersonaService,\r\n    private fb: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private vehiculoService: VehiculoService,\r\n    private servicioService: ServicioService,\r\n    private ordenService: OrdenService\r\n\r\n  ) {\r\n\r\n    this.vehiculos = this.vehiculoService.obtenerVehiculos()\r\n    this.serviciosSeleccionados = []\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.obtenerPersonas()\r\n    this.obtenerServicios()\r\n  }\r\n\r\n  obtenerPersonas() {\r\n    this.personas = this.personaService.obtenerClientes()\r\n  }\r\n\r\n  obtenerServicios() {\r\n    this.servicios = this.servicioService.obtenerServicios()\r\n  }\r\n\r\n  seleccionarPersona() {\r\n    this.personaSeleccionada = this.ClienteForm.value.persona\r\n    // this.VehiculoForm = this.fb.group({\r\n    //   vehiculo: [{}, Validators.required]\r\n    // })\r\n    // this.vehiculos = this.personaService.obtenerVehiculos(this.personaSeleccionada.id)\r\n  }\r\n\r\n  seleccionarServicio() {\r\n    if (this.ServicioForm.value.servicio.data) {\r\n      this.serviciosSeleccionados.push(this.ServicioForm.value.servicio)\r\n    }\r\n  }\r\n\r\n  guardarOrden() {\r\n    var confirmacion = confirm(\"¿Está seguro que desea guardar la orden\");\r\n    if (confirmacion) {\r\n      var vehiculo = {\r\n        placa: this.vehiculoSeleccionado.data.placa,\r\n        marca: this.vehiculoSeleccionado.data.marca,\r\n        modelo: this.vehiculoSeleccionado.data.modelo,\r\n        color: this.vehiculoSeleccionado.data.color,\r\n        numeroMotor: this.vehiculoSeleccionado.data.numeroMotor,\r\n        numeroChasis: this.vehiculoSeleccionado.data.numeroChasis\r\n      }\r\n\r\n      var cliente = {\r\n        cedula: this.personaSeleccionada.data.cedula,\r\n        nombre: this.personaSeleccionada.data.nombre,\r\n        direccion: this.personaSeleccionada.data.direccion,\r\n        telefono: this.personaSeleccionada.data.direccion,\r\n        correo: this.personaSeleccionada.data.correo\r\n      }\r\n\r\n      var servicios = []\r\n\r\n      this.serviciosSeleccionados.forEach(servicio => {\r\n        servicios.push({ codigo: servicio.data.codigo, descripcion: servicio.data.descripcion, detalle: servicio.data.detalle, tiempoEstandar: servicio.data.tiempoEstandar, estado: 'CITA/RECEPCION' })\r\n      });\r\n      \r\n\r\n      var orden = {\r\n        cliente: cliente,\r\n        vehiculo: vehiculo,\r\n        servicios: servicios,\r\n        fecha: new Date()\r\n      }\r\n      this.ordenService.crearOrden(orden, servicios)\r\n\r\n      this.reiniciar()\r\n\r\n    } \r\n  }\r\n\r\n  reiniciar(){\r\n    this.personaSeleccionada=null\r\n    this.vehiculoSeleccionado = null\r\n    this.serviciosSeleccionados=[]\r\n\r\n    this.ClienteForm = this.fb.group({\r\n      persona: [{}, Validators.required]\r\n    })\r\n  \r\n    \r\n  \r\n    this.VehiculoForm = this.fb.group({\r\n      vehiculo: [{}, Validators.required]\r\n    })\r\n  }\r\n\r\n  eliminarServicio(indice): void {\r\n    this.serviciosSeleccionados.splice(indice, 1)\r\n  }\r\n\r\n  seleccionarVehiculo() {\r\n    this.vehiculoSeleccionado = this.VehiculoForm.value.vehiculo\r\n  }\r\n\r\n  open(content) {\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Información vehículo'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Información de la orden de trabajo\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <table class=\\\"table table-sm table-bordered\\\">\\n\\n            <tbody>\\n              <tr>\\n                <th>Fecha </th>\\n                <td>{{ (orden | async)?.fecha.seconds*1000 | date : 'dd/MM/yyyy hh:mm a' }}</td>\\n              </tr>\\n\\n              <tr>\\n                <th>ID Cliente</th>\\n                <td>{{ (orden | async)?.cliente.cedula }}</td>\\n              </tr>\\n\\n              <tr>\\n                <th>Nombre cliente</th>\\n                <td>{{ (orden | async)?.cliente.nombre }}</td>\\n              </tr>\\n              <tr>\\n                <th>Vehículo</th>\\n                <td>{{ (orden | async)?.vehiculo.placa }} - {{ (orden | async)?.vehiculo.marca }} - {{ (orden | async)?.vehiculo.modelo\\n                  }}\\n                </td>\\n              </tr>\\n\\n\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Servicios\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>Servicio</th>\\n            <th>Descripcioón</th>\\n            <th>Tiempo estandar</th>\\n            <th>Estado</th>\\n            <th>Operador asignado</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let servicio of servicios let index = index\\\">\\n            <td>{{servicio.descripcion}}</td>\\n            <td>{{servicio.detalle}}</td>\\n            <td>{{servicio.tiempoEstandar}} minutos</td>\\n            <td>{{servicio.estado}}</td>\\n            <td>\\n\\n              <div class=\\\"\\\">\\n                <ng-select class=\\\"form-control\\\" style=\\\"font-size: 14px\\\" [(ngModel)]=\\\"servicio.operador\\\" autofocus style=\\\"width: 250px;\\\"\\n                  class=\\\"form-control\\\" [items]=\\\"personas | async\\\" bindLabel=\\\"data.nombre\\\"  (change)=\\\"seleccionarPersona(servicio, index)\\\">\\n                </ng-select>\\n              </div>\\n\\n            </td>\\n\\n          </tr>\\n\\n\\n\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdenService } from '../../../servicios/orden/orden.service';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { PersonaService } from '../../../servicios/persona.service';\n\n@Component({\n  selector: 'app-informacion-orden',\n  templateUrl: './informacion-orden.component.html',\n  styleUrls: ['./informacion-orden.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class InformacionOrdenComponent implements OnInit {\n\n  id: any\n  orden: Observable<any>;\n  servicios:any;\n\n  personas: Observable<any[]>;\n\n  PersonaForm = this.fb.group({\n    persona: [{}, Validators.required]\n  })\n\n  constructor(\n    private route: ActivatedRoute,\n    private ordenService: OrdenService,\n    private fb: FormBuilder,\n    private personaService: PersonaService\n  ) {\n    this.servicios = []\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.orden = this.ordenService.obtenerUnaOrden(this.id);\n    this.orden.subscribe(res=>{\n      this.servicios = res.servicios\n      console.log(this.servicios)\n    })\n    this.personas = this.personaService.obtenerUsuarios();\n\n\n  }\n\n  seleccionarPersona(servicio, index){\n\n    console.log(this.servicios[index])\n\n    this.servicios[index].operador = servicio.operador\n    this.servicios[index].estado = 'EN ESPERA DE PRODUCCIÓN'\n   \n  this.ordenService.modificarServicio(this.id, {servicios: this.servicios, estado: 'EN ESPERA DE PRODUCCIÓN'})\n\n}\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Operaciones'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">Ordenes de trabajo</div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <p><strong>Eficiencia</strong></p>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\" class=\\\"table-success\\\" style=\\\"width: 15px\\\"></div>\\r\\n                  <div class=\\\"col\\\">POR FACTURAR</div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\" class=\\\"table-warning\\\" style=\\\"width: 15px\\\"></div>\\r\\n                  <div class=\\\"col\\\">EN PRODUCCIÓN</div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col\\\" class=\\\"table-danger\\\" style=\\\"width: 15px\\\"></div>\\r\\n                  <div class=\\\"col\\\">CITA/RECEPCIÓN</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div> \\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n\\r\\n          <table class=\\\"table table-bordered table-sm table-responsive-sm\\\">\\r\\n            <thead>\\r\\n\\r\\n              <tr>\\r\\n\\r\\n                <th>Cliente</th>\\r\\n                <th>Vehículo</th>\\r\\n                <th>Servicio</th>\\r\\n                <th>Estado</th>\\r\\n                <th>Tiempo Estandar</th>\\r\\n                <th>Operador</th>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let servicio of tareas \\\" [class.table-warning]=\\\"servicio.servicio.estado=='EN PRODUCCIÓN' || servicio.servicio.estado=='EN PRODUCCIÓN - PAUSADO'\\\"\\r\\n                [class.table-danger]=\\\"servicio.servicio.estado=='CITA/RECEPCION' || servicio.servicio.estado=='EN ESPERA DE PRODUCCIÓN'\\\"\\r\\n                [class.table-success]=\\\"servicio.servicio.estado=='POR FACTURAR'\\\">\\r\\n\\r\\n                <td>\\r\\n                  {{servicio.cliente.nombre}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{servicio.vehiculo.placa}} - {{servicio.vehiculo.marca}} - {{servicio.vehiculo.modelo}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{servicio.servicio.descripcion}}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{servicio.servicio.tiempoEstandar}} minutos\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{servicio.servicio.estado}}\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  {{servicio.servicio.operador.data.nombre}}\\r\\n                </td>\\r\\n\\r\\n\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { OrdenService } from '../../../servicios/orden/orden.service';\r\n\r\n@Component({\r\n  selector: 'app-operacion',\r\n  templateUrl: './operacion.component.html',\r\n  styleUrls: ['./operacion.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class OperacionComponent implements OnInit {\r\n\r\n  ordenes: Observable<any[]>;\r\n  tareas: any\r\n\r\n  constructor(private ordenService: OrdenService) { }\r\n\r\n  ngOnInit() {\r\n    this.obtenerOrdenes()\r\n  }\r\n  obtenerOrdenes() {\r\n    this.ordenes = this.ordenService.obtenerOrdenes();\r\n\r\n    this.ordenes.subscribe(res => {\r\n      this.tareas = []\r\n      res.forEach(element => {\r\n        element.data.servicios.forEach(servicio => {\r\n          \r\n\r\n          if (!servicio.operador) {\r\n            servicio.operador = {data: {nombre:''}}\r\n          }\r\n          this.tareas.push({ cliente: element.data.cliente, servicio: servicio, vehiculo: element.data.vehiculo })\r\n\r\n\r\n        });\r\n\r\n\r\n      });\r\n    })\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { CrearOrdenComponent } from './crear-orden/crear-orden.component';\r\nimport { ConsultarOrdenComponent } from './consultar-orden/consultar-orden.component';\r\nimport { InformacionOrdenComponent } from './informacion-orden/informacion-orden.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap'\r\nimport { PersonaModule } from '../persona/persona.module';\r\nimport { VehiculoModule } from '../vehiculo/vehiculo.module';\r\nimport { ServicioModule } from '../servicio/servicio.module';\r\nimport { OperacionComponent } from './operacion/operacion.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    PageHeaderModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbModule.forRoot(),\r\n    PersonaModule,\r\n    VehiculoModule,\r\n    ServicioModule\r\n  ],\r\n  declarations: [CrearOrdenComponent, ConsultarOrdenComponent, InformacionOrdenComponent, OperacionComponent]\r\n})\r\nexport class OrdenTrabajoModule { }\r\n"],"sourceRoot":""}