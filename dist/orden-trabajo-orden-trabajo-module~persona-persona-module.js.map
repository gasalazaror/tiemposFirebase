{"version":3,"sources":["webpack:///./src/app/layout/persona/app-routing.module.ts","webpack:///./src/app/layout/persona/consultar-persona/consultar-persona.component.html","webpack:///./src/app/layout/persona/consultar-persona/consultar-persona.component.scss","webpack:///./src/app/layout/persona/consultar-persona/consultar-persona.component.ts","webpack:///./src/app/layout/persona/crear-persona/crear-persona.component.html","webpack:///./src/app/layout/persona/crear-persona/crear-persona.component.scss","webpack:///./src/app/layout/persona/crear-persona/crear-persona.component.ts","webpack:///./src/app/layout/persona/informacion-persona/informacion-persona.component.html","webpack:///./src/app/layout/persona/informacion-persona/informacion-persona.component.scss","webpack:///./src/app/layout/persona/informacion-persona/informacion-persona.component.ts","webpack:///./src/app/layout/persona/persona.module.ts"],"names":[],"mappings":"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","file":"orden-trabajo-orden-trabajo-module~persona-persona-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CrearPersonaComponent } from './crear-persona/crear-persona.component';\r\nimport { ConsultarPersonaComponent } from './consultar-persona/consultar-persona.component';\r\nimport { InformacionPersonaComponent } from './informacion-persona/informacion-persona.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'crearpersona/:id',\r\n    component: CrearPersonaComponent\r\n  },\r\n  {\r\n    path: 'consultarpersona',\r\n    component: ConsultarPersonaComponent\r\n  },\r\n  {\r\n    path: 'informacionpersona/:id',\r\n    component: InformacionPersonaComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Consultar persona'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-12 col-lg-12\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"card mb-3\\\">\\r\\n        <div class=\\\"card-header\\\">Personas</div>\\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n          <table id=\\\"example-datatable\\\" class=\\\"table\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th></th>\\r\\n                <th>Tipo</th>\\r\\n                <th>Cédula</th>\\r\\n                <th>Nombre</th>\\r\\n                <th>Dirección</th>\\r\\n                <th>Correo</th>\\r\\n                <th>Teléfono</th>\\r\\n                <th>Roles</th>\\r\\n\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let persona of personas | async\\\">\\r\\n                <td>\\r\\n                  <div class=\\\"btn-group\\\">\\r\\n                      <a title=\\\"Editar persona\\\" href=\\\"/persona/crearpersona/{{persona.id}}\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\r\\n                      <button title=\\\"Eliminar persona\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"eliminarPersona(persona)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\r\\n                  </div>\\r\\n                  \\r\\n                </td>\\r\\n                <td>{{persona.data.tipo}}</td>\\r\\n                <td>{{persona.data.cedula }}</td>\\r\\n                <td><a href=\\\"/persona/informacionpersona/{{persona.id}}\\\">{{persona.data.nombre}}</a></td>\\r\\n                <td>{{persona.data.direccion}}</td>\\r\\n                <td>{{persona.data.correo }}</td>\\r\\n                <td>{{persona.data.telefono}}</td>\\r\\n                <td>\\r\\n                  <p *ngIf=\\\"persona.data.cliente\\\">Cliente</p>\\r\\n                  <p *ngIf=\\\"persona.data.empleado\\\">Empleado</p>\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { PersonaService } from '../../../servicios/persona.service';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject } from 'rxjs';\r\nimport swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-consultar-persona',\r\n  templateUrl: './consultar-persona.component.html',\r\n  styleUrls: ['./consultar-persona.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class ConsultarPersonaComponent implements  OnInit {\r\n  @ViewChild(DataTableDirective)\r\n  personas: Observable<any[]>;\r\n  personasq:any[]\r\n  dtElement: DataTableDirective;\r\n  dtOptions: DataTables.Settings =  {\r\n    pagingType: 'full_numbers',\r\n    pageLength: 5,\r\n    autoWidth: true,\r\n   responsive: true,\r\n   language: {\r\n    processing: \"Procesando...\",\r\n    search: \"Buscar:\",\r\n    lengthMenu: \"Mostrar _MENU_ elementos\",\r\n    info: \"Mostrando desde _START_ al _END_ de _TOTAL_ elementos\",\r\n    infoEmpty: \"Mostrando ningún elemento.\",\r\n    infoFiltered: \"(filtrado _MAX_ elementos total)\",\r\n    infoPostFix: \"\",\r\n    loadingRecords: \"Cargando registros...\",\r\n    zeroRecords: \"No se encontraron registros\",\r\n    emptyTable: \"No hay datos disponibles en la tabla\",\r\n    paginate: {\r\n      first: \"Primero\",\r\n      previous: \"Anterior\",\r\n      next: \"Siguiente\",\r\n      last: \"Último\"\r\n    },\r\n    aria: {\r\n      sortAscending: \": Activar para ordenar la tabla en orden ascendente\",\r\n      sortDescending: \": Activar para ordenar la tabla en orden descendente\"\r\n    }\r\n  }\r\n\r\n  };\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  constructor(private personaService: PersonaService) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n   this.obtenerPersonas()\r\n\r\n  }\r\n\r\n  obtenerPersonas() {\r\n \r\n    this.personas = this.personaService.obtenerPersonas()\r\n    this.personas.subscribe(res => {\r\n      $('#example-datatable').DataTable().destroy();\r\n      this.dtTrigger.next();\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n    this.dtTrigger.unsubscribe();\r\n  }\r\n\r\n  rerender(): void {\r\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      // Destroy the table first\r\n      dtInstance.destroy();\r\n      // Call the dtTrigger to rerender again\r\n      this.dtTrigger.next();\r\n    });\r\n  }\r\n  llenarTabla() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers'\r\n    };\r\n  }\r\n\r\n \r\n\r\n\r\n  eliminarPersona(persona) {\r\n\r\n\r\n    swal({\r\n      title: 'Está seguro?',\r\n      text: \"¿Está seguro que desea eliminar la persona: \"+persona.data.nombre+\"?\",\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, eliminar!',\r\n      cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n\r\n        \r\n    this.personaService.eliminarPersona(persona.id).then(res=>{\r\n\r\n      swal(\r\n        'Eliminado!',\r\n        'El registro ha sido eliminado.',\r\n        'success'\r\n      )\r\n    })\r\n       \r\n      }\r\n    })\r\n\r\n  }\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n    <app-page-header [heading]=\\\"'Crear persona'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"!existePersona\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n        Persona no encontrada\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div *ngIf=\\\"existePersona\\\" class=\\\"card\\\">\\r\\n\\r\\n        <div class=\\\"card-header\\\" >\\r\\n            Información de la persona\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form [formGroup]=\\\"personaForm\\\" (ngSubmit)=\\\"guardarPersona()\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"staticEmail2\\\" class=\\\"\\\">Estado</label>\\r\\n\\r\\n                                    <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"estado\\\" name=\\\"\\\" id=\\\"\\\">\\r\\n                                        <option value=\\\"Activo\\\">Activo</option>\\r\\n                                        <option value=\\\"Inactivo\\\">Inactivo</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"staticEmail2\\\" class=\\\"\\\">Tipo</label>\\r\\n\\r\\n                                    <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"tipo\\\" name=\\\"\\\" id=\\\"\\\">\\r\\n                                        <option value=\\\"Natural\\\">Natural</option>\\r\\n                                        <option value=\\\"Juridica\\\">Juridica</option>\\r\\n                                        <option value=\\\"Sin Ruc\\\">Sin Ruc</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group form-group-sm\\\">\\r\\n                            <label for=\\\"inputPassword2\\\" class=\\\"\\\">Cédula / RUC <span style=\\\"color: red\\\">*</span></label>\\r\\n                            <input autofocus type=\\\"text\\\" maxlength=\\\"15\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"cedula\\\" id=\\\"inputPassword2\\\" placeholder=\\\"Cédula o RUC\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group \\\">\\r\\n                            <label for=\\\"inputPassword2\\\" class=\\\"\\\">Nombre <span style=\\\"color: red\\\">*</span></label>\\r\\n                            <input type=\\\"text\\\" maxlength=\\\"30\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"nombre\\\" id=\\\"inputPassword2\\\" placeholder=\\\"Nombre\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"inputPassword2\\\" class=\\\"\\\">Dirección</label>\\r\\n                            <textarea maxlength=\\\"100\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"direccion\\\" cols=\\\"30\\\" rows=\\\"4\\\" placeholder=\\\"Dirección\\\"></textarea>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"inputPassword2\\\" class=\\\"\\\">Teléfono</label>\\r\\n                            <input maxlength=\\\"30\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"telefono\\\" id=\\\"inputPassword2\\\" placeholder=\\\"Teléfono\\\">\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"inputPassword2\\\" class=\\\"\\\">Correo <span style=\\\"color: red\\\">*</span></label>\\r\\n                            <input maxlength=\\\"50\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"correo\\\" id=\\\"inputPassword2\\\" placeholder=\\\"Correo\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Roles de la persona en la empresa</label>\\r\\n                            <div class=\\\"checkbox\\\">\\r\\n                                <label>\\r\\n                                    <input type=\\\"checkbox\\\" formControlName=\\\"cliente\\\"> Cliente\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"checkbox\\\">\\r\\n                                <label>\\r\\n                                    <input type=\\\"checkbox\\\" formControlName=\\\"empleado\\\"> Empleado\\r\\n                                </label>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"existePersona\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\r\\n                            Todos los campos marcados con <strong>(*)</strong> son obligatorios\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary mb-2\\\">Guardar Persona</button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"personaForm\\\" (ngSubmit)=\\\"guardarPersona()\\\">\\r\\n            <div class=\\\"col-lg-12\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { PersonaService } from '../../../servicios/persona.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport swal from'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-crear-persona',\r\n  templateUrl: './crear-persona.component.html',\r\n  styleUrls: ['./crear-persona.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class CrearPersonaComponent implements OnInit {\r\n\r\n\r\n  id: any\r\n  persona: Observable<any>;\r\n\r\n  existePersona: boolean = false\r\n\r\n  personaForm = this.fb.group({\r\n    estado: ['Activo', Validators.required],\r\n    tipo: ['Natural', Validators.required],\r\n    cedula: ['', [Validators.required]],\r\n    nombre: ['', [Validators.required]],\r\n    direccion: ['', []],\r\n    telefono: ['', []],\r\n    correo: ['', [Validators.required, Validators.email]],\r\n    cliente: [false],\r\n    empleado: [false],\r\n    roles: { Administrador: false, Asesor: false, Operador: false }\r\n  })\r\n\r\n  constructor(private fb: FormBuilder, private personaService: PersonaService, private route: ActivatedRoute, ) {\r\n\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    if (this.id != 'nuevo' && this.id != null) {\r\n\r\n\r\n      this.persona = this.personaService.obtenerUnaPersona(this.id);\r\n      this.persona.subscribe(persona => {\r\n\r\n        if (persona != null) {\r\n\r\n          this.existePersona = true\r\n          this.personaForm = this.fb.group({\r\n            estado: ['Activo', Validators.required],\r\n            tipo: ['Natural', Validators.required],\r\n            cedula: [persona.cedula, [Validators.required]],\r\n            nombre: [persona.nombre, [Validators.required]],\r\n            direccion: [persona.direccion, []],\r\n            telefono: [persona.telefono, []],\r\n            correo: [persona.correo, [Validators.required, Validators.email]],\r\n            cliente: [persona.cliente],\r\n            empleado: [persona.empleado]\r\n          })\r\n        } else {\r\n          this.existePersona = false\r\n\r\n        }\r\n\r\n      })\r\n\r\n\r\n    } else {\r\n      this.existePersona = true\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  guardarPersona() {\r\n\r\n    if (this.id == 'nuevo' || this.id == null) {\r\n\r\n      if (this.personaForm.value.cedula.trim() == '') {\r\n      \r\n        swal( 'Existió un error','El número de Cédula/RUC es obligatorio', 'error');\r\n    \r\n      } else {\r\n     \r\n        this.personaForm.value.cedula = this.personaForm.value.cedula.trim()\r\n        if (this.personaForm.value.nombre.trim() == '') {\r\n          swal( 'Existió un error','El nombre es obligatorio', 'error');\r\n\r\n        } else {\r\n      \r\n          this.personaForm.value.nombre = this.personaForm.value.nombre.trim()\r\n          if (this.personaForm.value.correo.trim() == '') {\r\n            swal( 'Existió un error','El correo es obligatorio', 'error');\r\n          } else {\r\n     \r\n            this.personaForm.value.correo = this.personaForm.value.correo.trim()\r\n            if (!this.validarEmail(this.personaForm.value.correo.trim())) {\r\n              swal( 'Existió un error','El correo ingresado no tiene el formato correcto', 'error');\r\n            } else {\r\n              \r\n              if (!this.personaForm.value.cliente && !this.personaForm.value.empleado) {\r\n                swal( 'Existió un error','Debe seleccionar al menos un rol', 'error')\r\n              } else {\r\n                 //validación si existe cédula\r\n              this.personaService.comprobar('cedula', this.personaForm.value.cedula)\r\n              .subscribe(res => {\r\n                if (res.length > 0) {\r\n                  swal( 'Existió un error','El número de cédula ingresado ya existen en la base de datos', 'error');\r\n                 \r\n                } else {\r\n                  \r\n\r\n                  this.personaService.crearPersona(this.personaForm.value).then(res=>{\r\n                    swal( 'Listo!','Persona guardada exitosamente', 'success');\r\n                    this.personaForm = this.fb.group({\r\n                      estado: ['Activo', Validators.required],\r\n                      tipo: ['Natural', Validators.required],\r\n                      cedula: ['', [Validators.required]],\r\n                      nombre: ['', [Validators.required]],\r\n                      direccion: ['', []],\r\n                      telefono: ['', []],\r\n                      correo: ['', [Validators.required, Validators.email]],\r\n                      cliente: [false],\r\n                      empleado: [false],\r\n                      roles: { Administrador: false, Asesor: false, Operador: false }\r\n                    })\r\n                  })\r\n           \r\n          \r\n                 \r\n                }\r\n              }, error => {\r\n\r\n              })\r\n                \r\n              }\r\n             \r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    } else {\r\n      if (this.personaForm.value.cedula.trim() == '') {\r\n        swal( 'Existió un error','El número de Cédula/RUC es obligatorio', 'error');\r\n      } else {\r\n  \r\n        this.personaForm.value.cedula = this.personaForm.value.cedula.trim()\r\n        if (this.personaForm.value.nombre.trim() == '') {\r\n          swal( 'Existió un error','El nombre es obligatorio', 'error');\r\n         \r\n        } else {\r\n        \r\n          this.personaForm.value.nombre = this.personaForm.value.nombre.trim()\r\n          if (this.personaForm.value.correo.trim() == '') {\r\n            swal( 'Existió un error','El correo es obligatorio', 'error');\r\n         \r\n          } else {\r\n        \r\n            this.personaForm.value.correo = this.personaForm.value.correo.trim()\r\n            if (!this.validarEmail(this.personaForm.value.correo.trim())) {\r\n  \r\n              swal( 'Existió un error','El correo ingresado no tiene el formato correcto', 'error');\r\n        \r\n            } else {\r\n\r\n              if(!this.personaForm.value.cliente && !this.personaForm.value.empleado){\r\n                swal( 'Existió un error','Debe seleccionar al menos un rol', 'error')\r\n              }else{\r\n                this.personaService.modificarPersona(this.id, this.personaForm.value).then(persona => {\r\n            \r\n                  swal( 'Listo!','Persona modificada exitosamente', 'success');\r\n                }, error => {\r\n                  swal( 'Existió un error','Existió un error al modificar la persona', 'error');\r\n                })\r\n              }\r\n         \r\n        \r\n              \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  validarEmail(email) {\r\n    var regex = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i;\r\n    return regex.test(email)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Información persona'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Información\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <table class=\\\"table table-sm table-bordered\\\">\\r\\n\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <th>Tipo</th>\\r\\n                <td>{{ (persona | async)?.tipo }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Cédula / RUC</th>\\r\\n                <td>{{ (persona | async)?.cedula }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Nombre / Razón social</th>\\r\\n                <td>{{ (persona | async)?.nombre }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Dirección</th>\\r\\n                <td>{{ (persona | async)?.direccion }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Correo</th>\\r\\n                <td>{{ (persona | async)?.correo }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Teléfono</th>\\r\\n                <td>{{ (persona | async)?.telefono }}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>Roles</th>\\r\\n                <td>\\r\\n                  <p *ngIf=\\\"(persona | async)?.cliente\\\">Cliente</p>\\r\\n                  <p *ngIf=\\\"(persona | async)?.empleado\\\">Empleado</p>\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"(persona | async)?.empleado\\\" class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Opciones de usuario\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n          <p>Roles del usuario en la empresa</p>\\r\\n          <input [checked]=\\\"personaq.roles.Administrador\\\" (change)=\\\"modificarRoles()\\\" [(ngModel)]=\\\"personaq.roles.Administrador\\\" class=\\\"form-check-input\\\"\\r\\n            type=\\\"checkbox\\\" value=\\\"1\\\" id=\\\"rol1\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"rol1\\\">\\r\\n            Administrador\\r\\n          </label>\\r\\n          <br>\\r\\n\\r\\n          <input [checked]=\\\"personaq.roles.Operador\\\" [(ngModel)]=\\\"personaq.roles.Operador\\\" (change)=\\\"modificarRoles()\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n            value=\\\"2\\\" id=\\\"rol2\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"rol2\\\">\\r\\n            Operador\\r\\n          </label>\\r\\n          <br>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <input [checked]=\\\"personaq.roles.Asesor\\\" [(ngModel)]=\\\"personaq.roles.Asesor\\\" (change)=\\\"modificarRoles()\\\" class=\\\"form-check-input\\\"\\r\\n            type=\\\"checkbox\\\" value=\\\"3\\\" id=\\\"rol3\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"rol3\\\">\\r\\n            Asesor de servicio\\r\\n          </label>\\r\\n          <br>\\r\\n          <br>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PersonaService } from '../../../servicios/persona.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport swal from 'sweetalert2'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-informacion-persona',\r\n  templateUrl: './informacion-persona.component.html',\r\n  styleUrls: ['./informacion-persona.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class InformacionPersonaComponent implements OnInit {\r\n  id: any\r\n  persona: Observable<any>;\r\n  personaq: any\r\n  empresa: AngularFirestoreDocument\r\n  user: AngularFirestoreDocument\r\n  error = ''\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private personaService: PersonaService,\r\n    private auth: AngularFireAuth,\r\n    private db: AngularFirestore\r\n  ) {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.persona = this.personaService.obtenerUnaPersona(this.id)\r\n    this.persona.subscribe(res => {\r\n      this.personaq = res\r\n    \r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  generarUsuario(persona) {\r\n    this.empresa = this.db.doc(localStorage.getItem('empresa'));\r\n    console.log(this.personaq)\r\n\r\n  \r\n    this.auth.auth.createUserWithEmailAndPassword(this.personaq.correo, this.personaq.cedula)\r\n      .then(ususario => {\r\n        const id = this.db.createId()\r\n        this.user = this.db.doc('usuario/'+this.auth.auth.currentUser.uid);\r\n        this.db.collection('empresaUsuario').doc(id).set({empresa: this.empresa.ref, correo: this.personaq.correo, tipo: 'usuario'})\r\n        .then(user=>{\r\n          swal( 'Listo!','Persona guardada exitosamente', 'success');\r\n          this.empresa.collection('personas').doc(this.id).update({usuario: this.auth.auth.currentUser.uid})\r\n         \r\n        })\r\n\r\n\r\n     \r\n      }, err => {\r\n      \r\n        console.log(this.auth.auth.currentUser.uid)\r\n\r\n        this.auth.user.subscribe(res=>{\r\n          console.log(res)\r\n        })\r\n\r\n        this.user = this.db.doc('usuario/'+this.auth.auth.currentUser.uid);\r\n\r\n  \r\n     \r\n        this.db.collection('empresaUsuario', \r\n        query=>query.where('empresa','==',this.empresa.ref).where('email','==',this.personaq.correo)).valueChanges().subscribe(res=>{\r\n     \r\n          if (res.length==0) {\r\n            const id = this.db.createId()\r\n            this.db.collection('empresaUsuario').doc(id).set({empresa: this.empresa.ref, correo: this.personaq.correo, tipo: 'usuario'})\r\n            .then(user=>{\r\n          \r\n              this.empresa.collection('personas').doc(this.id).update({usuario: this.auth.auth.currentUser.uid})\r\n              swal( 'Listo!','Usuario creado correctamente', 'success');\r\n            })\r\n          } else {\r\n            console.log('Ya existe un usuario con el correo electrónico ingresado')\r\n            this.error = 'Ya existe un usuario con el correo electrónico ingresado'\r\n          }\r\n        })\r\n        console.log(err)\r\n     //   this.db.collection('usuario').doc(this.auth.auth.currentUser.uid).set({empresa:this.empresa.ref, nombre: this.personaq.nombre,  id: this.auth.auth.currentUser.uid});\r\n    //    \r\n      })\r\n  }\r\n\r\n  enviarCorreoRecuperacion(persona){\r\n    console.log(persona)\r\n    this.auth.auth.sendPasswordResetEmail(persona.correo).then(email=>{\r\n      alert('Se envió un email de recuperación correctamente')\r\n    },error=>{\r\n      alert('Existió un error al enviar el email de recuperación')\r\n    })\r\n  }\r\n\r\n  modificarRoles(){\r\n    this.personaService.modificarPersona(this.id, {roles: this.personaq.roles})\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n} ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CrearPersonaComponent } from './crear-persona/crear-persona.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { ConsultarPersonaComponent } from './consultar-persona/consultar-persona.component';\r\nimport { InformacionPersonaComponent } from './informacion-persona/informacion-persona.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    PageHeaderModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    DataTablesModule\r\n  ],\r\n  exports: [CrearPersonaComponent],\r\n  declarations: [CrearPersonaComponent, ConsultarPersonaComponent, InformacionPersonaComponent]\r\n})\r\nexport class PersonaModule { }\r\n"],"sourceRoot":""}