{"version":3,"sources":["webpack:///./src/app/servicios/orden/orden.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdenService {\n\n  private empresa: AngularFirestoreDocument;\n  private orden: AngularFirestoreDocument;\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.empresa = this.afs.doc(localStorage.getItem('empresa'));\n  }\n\n  crearOrden(orden, servicios: any) {\n    const id = this.afs.createId();\n    this.empresa.collection('ordenes').doc(id).set(orden)\n    return id\n  }\n\n  modificarOrden(id, orden) {\n    this.empresa.collection('ordenes').doc(id).update(orden)\n    return id\n  }\n\n  eliminarOrden(id) {\n    return this.empresa.collection('ordenes').doc(id).delete()\n    \n  }\n\n  agregarDetalle(){\n    \n  }\n\n  obtenerOrdenes() {\n    this.empresa = this.afs.doc(localStorage.getItem('empresa'));\n    return this.empresa.collection('ordenes', query=> query.orderBy('numero', 'desc')).snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n   \n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, data };\n      }))\n    );\n  }\n\n  obtenerUltimaOrden(){\n    this.empresa = this.afs.doc(localStorage.getItem('empresa'));\n    return this.empresa.collection('ordenes', query=> query.orderBy('numero', 'desc').limit(1)).valueChanges()\n  }\n\n  obtenerUnaOrden(id) {\n    return this.empresa.collection('ordenes').doc(id).valueChanges()\n  }\n\n  obtenerServicios(id) {\n    return this.empresa.collection('ordenes').doc(id).collection('ordenServicios').snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, data };\n      }))\n    );\n  }\n\n  modificarServicio(orden, datos){\n    return this.empresa.collection('ordenes').doc(orden).update(datos);\n  }\n}\n"],"sourceRoot":""}